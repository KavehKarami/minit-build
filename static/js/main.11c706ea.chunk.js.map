{"version":3,"sources":["serviceWorker.js","components/MenuComponents/CustomMenu.jsx","components/Menu.jsx","components/PanelTimeComponents/ShowOrderComponents/EmptyPost.jsx","components/PanelTimeComponents/ShowOrder.jsx","components/PanelTimeComponents/CreateOrder.jsx","components/PanelTime.jsx","components/Projects.jsx","components/Tasktype.jsx","components/Client.jsx","components/Dashboard.jsx","components/ReportSummary.jsx","components/ReportDetail.jsx","components/ReportProject.jsx","components/NotFound.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","CustomMenu","props","path","exact","children","to","className","label","CustomDropdownMenu","Menu","state","reportMode","changeReportMode","name","setState","this","onClick","Component","EmptyPost","ShowOrder","allPostsDateTime","postNum","posts","persianNumbers","componentDidUpdate","length","calculateTime","number","count","hour","Math","floor","baghi01","min","sec","fixNumbers","str","i","replace","fixTime","clock","splitST","split","startHour","startMin","splitET","endHour","endMin","calculateDate","date","seprateDate","joinDate","join","persianMonthNumber","thisMonth","thisDate","EnDate","thisDay","Moment","locale","format","index","time","Fragment","allDate","map","value","ind","key","item","style","borderRight","color","description","tagName","tag","id","backgroundColor","projectName","activityName","startTime","endTime","play","showOrderPlayButton","projectId","projectIndex","editModalDetails","handleEditModal","onDelete","CreateOrder","counter","intervalID","getNewDate","toLocaleDateString","month","day","year","toLocaleTimeString","minute","endTimeUnvalidation","startTimeUnvalidation","projectValidation","activityId","getPosts","getProjects","getTags","selectedTag","getDate","getTasktype","dateUnvalid","openEditModal","postId","resetState","Unmount","componentDidMount","sortPosts","componentWillUnmount","handleInputs","e","a","currentTarget","target","selectedIndex","Number","getAttribute","handleStart","setInterval","clearInterval","postDate","postPosts","handleProjectValidation","handleListSelect","mode","separateStart","startTimeValidation","startHourToMin","allStartMinTime","separateEnd","endTimeValidation","endHourToMin","allEndMinTime","handleDelete","handlePlayerMode","axios","url","method","then","response","catch","err","console","log","setTimeout","handlePressEnter","which","postTag","handleSelectedTag","newGetTags","filter","newSelectedTag","push","handleCloseSelectedTag","sortedGetTags","_","orderBy","newFix","data","sortTags","res","prevState","unique","Set","uniqueTimes","sorted","tags","select","myArrayFiltered","array","every","Date","placeholder","type","onChange","projectid","task","activityid","UncontrolledPopover","placement","trigger","PopoverBody","onKeyPress","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","PanelTime","Projects","modalToggle","editProjectModal","popoverToggle","getColors","getClient","currentColor","budget","clientName","clientId","searchName","searchBudget","searchCustomer","projectUnvalidation","signIn","admin","newProjectID","resetModalAndPopOverAndCreateProjectProperties","resetSearchProperties","randomColor","postProject","projectAccess","customer","splice","handleChangePosts","forEach","handleDeletePostsAndCreateANewOne","handleModalToggle","handlePopover","handleCheckBox","handleColorPick","handleDeletePostsAndDates","handleDeleteProject","indexOf","handleSearch","regExpSearchName","RegExp","test","handlEditProjects","handleResetSearch","random","rgb","Popover","client","clientid","checked","TaskType","pay","postTasktype","deleteTasktype","handleCheckbox","handleEditTask","handleEditTaskSubmit","newGP","Client","postClient","deleteClient","Dashboard","startSearchDate","endSearchDate","panelHeaderMode","dateForPanelTimeDashboardChartForWhile","daysInMonth","dailyChartColor","monthlyChartColor","projectsTimeChartColor","activityTimeChartColor","totalSum","weeksInMonth","dateForPanelTimeDashboardWeekChart","monthsInYear","dateForPanelTimeDashboardMonthChart","titleText","projectsLabels","projectsCount","userPostsTimeSum","activityLabels","activityCount","handleDate","handleWeekDate","handleMonthDate","handlePanelHeaderItemSelect","monthDate","moment","startOf","times","add","start","end","endOf","weeks","ceil","weeksInMonthLentgh","startWeek","endWeek","newVal","beforedays","joinTogether","handleTotalSum","sumBy","projectsFilterDateAndSum","activityFilterDateAndSum","filterSameDatePostsAndSum","monthlyFilterDateAndSum","mainChartOptions","scales","yAxes","ticks","stepSize","beginAtZero","callback","labels","formatTime","tooltips","displayColors","callbacks","title","tooltipItem","yLabel","layout","padding","left","right","bottom","display","text","fontFamily","fontSize","miniChartOptions","footer","dataset","total","reduce","previousValue","currentValue","currentIndex","dateArr","uniqueDate","newDateArr","dataObjectForDashboardChart","dateForPanelTimeDashboardChart","trasferDataObjectToAxis","x","y","generateBgColorForChart","weeklyFilterDateAndSum","weeksDateArr","itemSeprate","itemStart","itemEnd","itemStartSeprate","itemEndSeprate","itemYear","itemMonth","itemStartDay","itemEndDay","valueSeprate","valueYear","valueMonth","valueDay","monthsDateArr","projectsArr","newProjectsArr","activityArr","newActivityArr","secs","hours","divisor_for_minutes","minutes","seconds","r","g","b","chartName","height","outerWidth","outerHeight","datasets","borderColor","borderWidth","options","legend","position","align","ReportSummary","extendUserName","handleExtendUserName","ReportDetail","ReportProject","sortProjects","projects","some","newProjects","NotFound","App","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.11c706ea.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Link, Route } from \"react-router-dom\";\r\n\r\nexport const CustomMenu = props => (\r\n  <Route\r\n    path={props.path}\r\n    exact={props.exact}\r\n    children={({ match }) =>\r\n      match ? (\r\n        <Link\r\n          to={props.path}\r\n          className=\"menu-item-active list-group-item d-flex justify-content-center align-items-center\"\r\n        >\r\n          {props.label}\r\n        </Link>\r\n      ) : (\r\n        <Link\r\n          to={props.path}\r\n          className=\"menu-item-other list-group-item d-flex justify-content-center align-items-center\"\r\n        >\r\n          {props.label}\r\n        </Link>\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nexport const CustomDropdownMenu = props => (\r\n  <Route\r\n    path={props.path}\r\n    exact={props.exact}\r\n    children={({ match }) =>\r\n      match ? (\r\n        <Link\r\n          to={props.path}\r\n          className=\"menu-item-dropdown-active list-group-item d-flex justify-content-center align-items-center\"\r\n        >\r\n          {props.label}\r\n        </Link>\r\n      ) : (\r\n        <Link\r\n          to={props.path}\r\n          className=\"menu-item-dropdown-other list-group-item d-flex justify-content-center align-items-center\"\r\n        >\r\n          {props.label}\r\n        </Link>\r\n      )\r\n    }\r\n  />\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { CustomMenu, CustomDropdownMenu } from \"./MenuComponents/CustomMenu\";\r\nclass Menu extends Component {\r\n  state = { reportMode: \"/report/summary\" };\r\n\r\n  changeReportMode = name => {\r\n    this.setState({ reportMode: name });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"p-lg-2 pb-lg-0 menu-parent\">\r\n        <div className=\"menu d-flex flex-column align-items-center min-vh-100 \">\r\n          <div className=\"menu-panel\">\r\n            <div className=\"nav-logo\"></div>\r\n          </div>\r\n\r\n          <div className=\"nav-item list-group align-items-lg-start\">\r\n            <CustomMenu\r\n              path={\"/\"}\r\n              exact\r\n              label={\r\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\r\n                  <i className=\"far fa-clock pr-lg-2\"></i>\r\n                  <span className=\"d-none d-lg-inline px-lg-3\">ساعت کاری</span>\r\n                </div>\r\n              }\r\n            />\r\n            <CustomMenu\r\n              path={\"/dashboard\"}\r\n              exact\r\n              label={\r\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\r\n                  <i className=\"far fa-chart-bar pr-lg-2\"></i>\r\n                  <span className=\"d-none d-lg-inline px-lg-3\">داشبورد</span>\r\n                </div>\r\n              }\r\n            />\r\n            <div className=\"position-relative menu-reports-dropdown\">\r\n              <CustomMenu\r\n                path={this.state.reportMode}\r\n                exact\r\n                label={\r\n                  <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center \">\r\n                    <i className=\"fas fa-list-ul pr-lg-2\"></i>\r\n                    <span className=\"d-none d-lg-inline px-lg-3\">گزارش</span>\r\n                  </div>\r\n                }\r\n              />\r\n\r\n              <div className=\"menu-reports-dropdown-content d-flex flex-column align-items-start justify-content-around p-3\">\r\n                <div onClick={() => this.changeReportMode(\"/report/summary\")}>\r\n                  <CustomDropdownMenu\r\n                    path={\"/report/summary\"}\r\n                    exact\r\n                    label={\"گذارش خلاصه\"}\r\n                  />\r\n                </div>\r\n                <div onClick={() => this.changeReportMode(\"/report/detail\")}>\r\n                  <CustomDropdownMenu\r\n                    path={\"/report/detail\"}\r\n                    exact\r\n                    label={\"گزارش جزئی\"}\r\n                  />\r\n                </div>\r\n                <div onClick={() => this.changeReportMode(\"/report/project\")}>\r\n                  <CustomDropdownMenu\r\n                    path={\"/report/project\"}\r\n                    exact\r\n                    label={\"گذارش پروژه\"}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"menu-seperator\">\r\n              <span className=\"d-none d-lg-block\">مدیریت</span>\r\n            </div>\r\n\r\n            <CustomMenu\r\n              path={\"/workspace\"}\r\n              exact\r\n              label={\r\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\r\n                  <i className=\"fas fa-suitcase pr-lg-2\"></i>\r\n                  <span className=\"d-none d-lg-inline px-lg-3\">فضای کاری</span>\r\n                </div>\r\n              }\r\n            />\r\n            <CustomMenu\r\n              path={\"/projects\"}\r\n              exact\r\n              label={\r\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\r\n                  <i className=\"fas fa-folder pr-lg-2\"></i>\r\n                  <span className=\"d-none d-lg-inline px-lg-3\">پروژه</span>\r\n                </div>\r\n              }\r\n            />\r\n            <CustomMenu\r\n              path={\"/client\"}\r\n              exact\r\n              label={\r\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\r\n                  <i className=\"fas fa-user-circle pr-lg-2\"></i>\r\n                  <span className=\"d-none d-lg-inline px-lg-3\">مشتری</span>\r\n                </div>\r\n              }\r\n            />\r\n            <CustomMenu\r\n              path={\"/tasktype\"}\r\n              exact\r\n              label={\r\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\r\n                  <i className=\"fas fa-bars pr-lg-2\"></i>\r\n                  <span className=\"d-none d-lg-inline px-lg-3\">نوع فعالیت</span>\r\n                </div>\r\n              }\r\n            />\r\n            <CustomMenu\r\n              path={\"/team\"}\r\n              exact\r\n              label={\r\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\r\n                  <i className=\"fas fa-users pr-lg-1\"></i>\r\n                  <span className=\"d-none d-lg-inline px-lg-3\">تیم</span>\r\n                </div>\r\n              }\r\n            />\r\n            <CustomMenu\r\n              path={\"/help\"}\r\n              exact\r\n              label={\r\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\r\n                  <i className=\"fas fa-info-circle pr-lg-2\"></i>\r\n                  <span className=\"d-none d-lg-inline px-lg-3\">راهنما</span>\r\n                </div>\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\n\r\nconst EmptyPost = () => {\r\n  return (\r\n    <div className=\"empty-show d-flex flex-column align-items-center\">\r\n      <div className=\"mt-120 mb-60\">\r\n        <div className=\"empty-show-item\">\r\n          <i className=\"far fa-hand-point-up\"></i>\r\n          <span>برای شروع باید حداقل یه پروژه داشته باشی!</span>\r\n        </div>\r\n\r\n        <div className=\"empty-show-item\">\r\n          <i className=\"far fa-hand-point-right\"></i>\r\n          <span>برای ساختن پروژه از منوی سمت راست استفاده کن.</span>\r\n        </div>\r\n\r\n        <div className=\"empty-show-item\">\r\n          <i className=\"far fa-hand-point-left rotate-27\"></i>\r\n          <span>\r\n            برای ثبت زمان هم از تایمر میتونی استفاده کنی و هم از ثبت بازه‌ای.\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmptyPost;\r\n","import React, { Component } from \"react\";\r\nimport Moment from \"moment\";\r\nimport \"moment/locale/fa\";\r\nimport EmptyPost from \"./ShowOrderComponents/EmptyPost\";\r\n\r\nclass ShowOrder extends Component {\r\n  /* -------------------------- state and properties -------------------------- */\r\n\r\n  state = {\r\n    allPostsDateTime: 0,\r\n    postNum: 0,\r\n    posts: [],\r\n  };\r\n\r\n  persianNumbers = [/۰/g, /۱/g, /۲/g, /۳/g, /۴/g, /۵/g, /۶/g, /۷/g, /۸/g, /۹/g];\r\n\r\n  /* ----------------------------- lifecycle hooks ---------------------------- */\r\n\r\n  componentDidUpdate = () => {\r\n    // NOTE  i write this statement because if i dont wrtite it setState run a lot of time\r\n    if (\r\n      // (this.state.allPostsDateTime === 0 && this.props.posts.length !== 0) ||\r\n      this.state.postNum < this.props.posts.length\r\n    ) {\r\n      this.setState({\r\n        posts: [...this.props.posts],\r\n        // allPostsDateTime: this.allPostsDateTime(),\r\n        postNum: this.props.posts.length,\r\n      });\r\n    }\r\n\r\n    // NOTE  write this statement for get allPostsDateTime and fix state length\r\n    if (this.state.postNum !== this.props.posts.length) {\r\n      this.setState({\r\n        posts: [...this.props.posts],\r\n        postNum: this.props.posts.length,\r\n        // allPostsDateTime: this.allPostsDateTime()\r\n      });\r\n    }\r\n  };\r\n\r\n  /* ------------------------------ other Methods ----------------------------- */\r\n\r\n  calculateTime = (number) => {\r\n    const count = number;\r\n    const hour = Math.floor(count / 3600);\r\n    const baghi01 = count % 3600;\r\n    const min = Math.floor(baghi01 / 60);\r\n    const sec = baghi01 % 60;\r\n\r\n    return `${hour < 10 ? \"0\" + hour : hour}:${min < 10 ? \"0\" + min : min}:${\r\n      sec < 10 ? \"0\" + sec : sec\r\n    }`;\r\n  };\r\n\r\n  // NOTE  this method transfer persian number to the same english number because we want to use that number as index in array in the claculateDate Method\r\n  fixNumbers = function(str) {\r\n    if (typeof str === \"string\") {\r\n      for (var i = 0; i < 10; i++) {\r\n        str = str.replace(this.persianNumbers[i], i);\r\n      }\r\n    }\r\n    return str;\r\n  };\r\n\r\n  // NOTE  this method below use for fix our start and end time, if they have'nt got a 2-digit ? concat 0 at the beginning of them : return them without change\r\n  fixTime = (name, clock) => {\r\n    if (name === \"startTime\") {\r\n      const splitST = clock.split(\":\");\r\n      let startHour = splitST[0];\r\n      let startMin = splitST[1];\r\n      if (startHour < 10 && startHour.length < 2) startHour = \"0\" + startHour;\r\n      if (startMin < 10 && startMin.length < 2) startMin = \"0\" + startMin;\r\n\r\n      return `${startHour}:${startMin}`;\r\n    } else if (name === \"endTime\") {\r\n      const splitET = clock.split(\":\");\r\n      let endHour = splitET[0];\r\n      let endMin = splitET[1];\r\n      if (endHour < 10 && endHour.length < 2) endHour = \"0\" + endHour;\r\n      if (endMin < 10 && endMin.length < 2) endMin = \"0\" + endMin;\r\n\r\n      return `${endHour}:${endMin}`;\r\n    }\r\n  };\r\n\r\n  calculateDate = (date) => {\r\n    const d = date;\r\n    const seprateDate = d.split(\"/\");\r\n    const joinDate = seprateDate.join(\"\");\r\n\r\n    const months = [\r\n      \"فروردین\",\r\n      \"اردیبهشت\",\r\n      \"خرداد\",\r\n      \"تیر\",\r\n      \"مرداد\",\r\n      \"شهریور\",\r\n      \"مهر\",\r\n      \"آبان\",\r\n      \"آذر\",\r\n      \"دی\",\r\n      \"بهمن\",\r\n      \"اسفند\",\r\n    ];\r\n\r\n    // this variable return our month number but with persian number\r\n    const persianMonthNumber = seprateDate[1];\r\n\r\n    const index = this.fixNumbers(persianMonthNumber);\r\n\r\n    const thisMonth = months[index - 1];\r\n    const thisDate = seprateDate[2];\r\n\r\n    const EnDate = this.fixNumbers(joinDate);\r\n\r\n    const thisDay = Moment(EnDate, \"YYYYMMDD\")\r\n      .locale(\"fa\")\r\n      .format(\"dddd\");\r\n\r\n    return {\r\n      thisMonth,\r\n      thisDate,\r\n      thisDay,\r\n    };\r\n  };\r\n\r\n  allPostsDateTime = (date) => {\r\n    const index = this.props.posts.length;\r\n    var allPostsDateTime = 0;\r\n    for (let i = 0; i < index; i++) {\r\n      const transferPropsPostPersianNumbersToEnglish = this.fixNumbers(\r\n        this.props.posts[i].date\r\n      );\r\n      const transferArgumentPersianNumbersToEnglish = this.fixNumbers(date);\r\n\r\n      if (\r\n        transferPropsPostPersianNumbersToEnglish ===\r\n        transferArgumentPersianNumbersToEnglish\r\n      ) {\r\n        allPostsDateTime += this.props.posts[i].time.count;\r\n      }\r\n    }\r\n\r\n    return allPostsDateTime;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.posts.length === 0 ? (\r\n          <EmptyPost />\r\n        ) : (\r\n          <div>\r\n            {this.props.allDate.map((value, ind) => {\r\n              return (\r\n                <React.Fragment key={ind}>\r\n                  <div className=\"showOrder-title p-3 d-flex justify-content-between align-items-center\">\r\n                    <div>\r\n                      <span>{this.calculateDate(value).thisDay}</span>\r\n                      <span className=\"iranSansNum\">\r\n                        {\" \"}\r\n                        {this.calculateDate(value).thisDate}{\" \"}\r\n                      </span>\r\n                      <span>{this.calculateDate(value).thisMonth}</span>\r\n                    </div>\r\n                    <div className=\"iranSansNum\">\r\n                      {this.calculateTime(this.allPostsDateTime(value))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"mb-120\">\r\n                    <div className=\"showOrder-box\">\r\n                      {this.props.posts.map((item, index) => {\r\n                        if (item.date === value) {\r\n                          return (\r\n                            <div\r\n                              key={index}\r\n                              className=\"d-flex flex-column p-2 showOrder-item flex-md-row justify-content-md-between py-md-3\"\r\n                              style={{ borderRight: `4px solid ${item.color}` }}\r\n                            >\r\n                              <div className=\"d-flex justify-content-between align-items-center mb-3 mb-md-0 mx-md-3 w-md-50\">\r\n                                <div className=\"col-title\">\r\n                                  {item.description}\r\n                                  {item.tagName.length !== 0 && (\r\n                                    <span>\r\n                                      {item.tagName.map((tag) => (\r\n                                        <span\r\n                                          key={tag.id}\r\n                                          className=\"fs-12 badge badge-success mr-2\"\r\n                                        >\r\n                                          {tag.name}\r\n                                        </span>\r\n                                      ))}\r\n                                    </span>\r\n                                  )}\r\n                                </div>\r\n                                <div className=\"col-project\">\r\n                                  <span\r\n                                    className=\"circle-color\"\r\n                                    style={{ backgroundColor: item.color }}\r\n                                  ></span>\r\n                                  <span style={{ color: item.color }}>\r\n                                    {item.projectName}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"col-activity\">\r\n                                  {item.activityName}\r\n                                </div>\r\n                              </div>\r\n\r\n                              <div className=\"d-flex justify-content-between align-items-center justify-content-md-around mx-md-3 w-md-50\">\r\n                                <div className=\"col-hour\">\r\n                                  <span className=\"iranSansNum fs-14\">\r\n                                    {this.fixTime(\r\n                                      \"startTime\",\r\n                                      item.time.startTime\r\n                                    )}\r\n                                  </span>\r\n                                  -\r\n                                  <span className=\"iranSansNum fs-14\">\r\n                                    {this.fixTime(\"endTime\", item.time.endTime)}\r\n                                  </span>\r\n                                </div>\r\n\r\n                                <div className=\"iranSansNum fs-14 col-count\">\r\n                                  {this.calculateTime(item.time.count)}\r\n                                </div>\r\n\r\n                                <div className=\"d-flex align-items-center justify-content-between col-btn\">\r\n                                  <div\r\n                                    className={\r\n                                      this.props.play ? \"mr-2 hidden\" : \"mr-2\"\r\n                                    }\r\n                                    onClick={() => {\r\n                                      this.props.showOrderPlayButton(\r\n                                        item.description,\r\n                                        item.projectName,\r\n                                        item.projectId,\r\n                                        item.projectIndex,\r\n                                        item.activityName,\r\n                                        item.color\r\n                                      );\r\n                                    }}\r\n                                  >\r\n                                    <i className=\"fas fa-play\"></i>\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"mr-2\"\r\n                                    onClick={() => {\r\n                                      this.props.editModalDetails(\r\n                                        item.description,\r\n                                        item.projectName,\r\n                                        item.projectId,\r\n                                        item.projectIndex,\r\n                                        item.activityName,\r\n                                        item.color,\r\n                                        item.time.startTime,\r\n                                        item.time.endTime,\r\n                                        item.date,\r\n                                        item.tagName,\r\n                                        item.id\r\n                                      );\r\n                                      this.props.handleEditModal();\r\n                                    }}\r\n                                  >\r\n                                    <i className=\"fas fa-pencil-alt\"></i>\r\n                                  </div>\r\n                                  <div className=\"mr-2\">\r\n                                    <i\r\n                                      className=\"fas fa-trash-alt\"\r\n                                      onClick={() => {\r\n                                        this.props.onDelete(item.id);\r\n                                        this.setState({\r\n                                          allPostsDateTime: this.allPostsDateTime(),\r\n                                        });\r\n                                      }}\r\n                                    ></i>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          );\r\n                        }\r\n\r\n                        return null;\r\n                      })}\r\n                    </div>\r\n                  </div>\r\n                </React.Fragment>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ShowOrder;\r\n","import React, { Component } from \"react\";\r\nimport ShowOrder from \"./ShowOrder\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  UncontrolledPopover,\r\n  PopoverBody,\r\n} from \"reactstrap\";\r\n\r\nclass CreateOrder extends Component {\r\n  /* -------------------------- state and resetState Method and properties -------------------------- */\r\n\r\n  state = {\r\n    // play key for pause and stop and calculate time and interVal\r\n    play: false,\r\n    // counter key for player mode\r\n    counter: true,\r\n    count: 1,\r\n    hour: 0,\r\n    min: 0,\r\n    sec: 0,\r\n    intervalID: 0,\r\n    date: this.getNewDate().toLocaleDateString(\"fa-IR\", {\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      year: \"numeric\",\r\n    }),\r\n    //NOTE in .toLocaleTimeString Method we can pass some arguments like this, the frist argument that i've passed means time without PM AM and 24h; the seconed argument is a object that we want to show time wothout second and with 2 digits\r\n    startTime: this.getNewDate().toLocaleTimeString(\"fr-FR\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    }),\r\n    endTime: this.getNewDate().toLocaleTimeString(\"fr-FR\", {\r\n      hour: \"2-digit\",\r\n      minute: \"2-digit\",\r\n    }),\r\n    endTimeUnvalidation: false,\r\n    startTimeUnvalidation: false,\r\n    description: \"\",\r\n    tagName: \"\",\r\n    projectName: \"\",\r\n    projectValidation: true,\r\n    projectIndex: 0,\r\n    projectId: 0,\r\n    color: \"\",\r\n    activityName: \"\",\r\n    activityId: null,\r\n    getPosts: [],\r\n    getProjects: [],\r\n    getTags: [],\r\n    selectedTag: [],\r\n    getDate: [],\r\n    getTasktype: [],\r\n    allDate: [],\r\n    dateUnvalid: false,\r\n    openEditModal: false,\r\n    postId: 0,\r\n  };\r\n\r\n  //NOTE before it i used resetState as property but in the projectName and ProjectIndex needed lastest update of them so i had to use resetState as Method\r\n  resetState = () => {\r\n    return {\r\n      play: false,\r\n      counter: true,\r\n      count: 1,\r\n      hour: 0,\r\n      min: 0,\r\n      sec: 0,\r\n      intervalID: 0,\r\n      projectValidation: true,\r\n      activityName: \"\",\r\n      activityId: null,\r\n      projectName: \"\",\r\n      projectIndex: 0,\r\n      projectId: 0,\r\n      description: \"\",\r\n      selectedTag: [],\r\n      date: this.getNewDate().toLocaleDateString(\"fa-IR\", {\r\n        month: \"2-digit\",\r\n        day: \"2-digit\",\r\n        year: \"numeric\",\r\n      }),\r\n      startTime: this.getNewDate().toLocaleTimeString(\"fr-FR\", {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n      endTime: this.getNewDate().toLocaleTimeString(\"fr-FR\", {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      }),\r\n      dateUnvalid: false,\r\n      openEditModal: false,\r\n      postId: 0,\r\n    };\r\n  };\r\n\r\n  persianNumbers = [/۰/g, /۱/g, /۲/g, /۳/g, /۴/g, /۵/g, /۶/g, /۷/g, /۸/g, /۹/g];\r\n\r\n  Unmount = false;\r\n\r\n  /* ----------------------------- lifecycle hooks ---------------------------- */\r\n\r\n  componentDidMount = () => {\r\n    this.getPosts();\r\n    this.getDate();\r\n    this.getProjects();\r\n    this.getTags();\r\n    this.getTasktype();\r\n    this.allDate();\r\n    this.sortPosts();\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.Unmount = true;\r\n  };\r\n\r\n  /* ---------------------- handles Methods often use for click event --------------------- */\r\n\r\n  handleInputs = async (e) => {\r\n    // NOTE for handle select and option tags we cant use line below, because if we click on option return undifiend name and we have to click again, so we gotta use e.current; if that element are select/option e.current give select tag to us and if that element is input e.current give input tag to us\r\n    // FIXME  const {name} = e.target\r\n    const { name } = e.currentTarget;\r\n    const { value } = e.target;\r\n\r\n    // FIXME i can't use a property as color like (name) so i set id and give color as value to it\r\n    // NOTE  e.target.selectedIndex give the index of select childrens (options)\r\n    if (name === \"projectName\") {\r\n      const index = e.target.selectedIndex;\r\n      const item = e.target[index];\r\n      const { id: color } = item;\r\n      const projectId = Number(item.getAttribute(\"projectid\"));\r\n\r\n      // NOTE  this statement used because the frist option (default value) hav't got any id and color property\r\n      if (color !== \"\") {\r\n        await this.setState({ color, projectId });\r\n      }\r\n\r\n      this.setState({ projectIndex: index });\r\n    }\r\n\r\n    if (name === \"activityName\") {\r\n      const index = e.target.selectedIndex;\r\n      const item = e.target[index];\r\n      const activityId = Number(item.getAttribute(\"activityid\"));\r\n\r\n      this.setState({ activityId });\r\n    }\r\n\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleStart = (name) => {\r\n    const play = !this.state.play;\r\n\r\n    if (play) {\r\n      const startTime = this.getNewDate().toLocaleTimeString(\"fr-FR\", {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      });\r\n\r\n      const intervalID = setInterval(this.calculateTime, 1000);\r\n      this.setState({ intervalID, startTime });\r\n    } else {\r\n      if (this.state.projectIndex > 0) {\r\n        this.setState({ ...this.resetState() });\r\n        clearInterval(this.state.intervalID);\r\n      }\r\n    }\r\n\r\n    if (name === \"stop\" && this.state.projectValidation) {\r\n      const { projectIndex } = this.state;\r\n      if (projectIndex > 0) {\r\n        this.setState({ projectValidation: true });\r\n        this.postDate();\r\n        this.postPosts();\r\n      } else {\r\n        this.handleProjectValidation();\r\n        this.setState({ projectValidation: false });\r\n      }\r\n    }\r\n\r\n    // REVIEW the statment below working but i can't realise what i write here\r\n    if (this.state.projectIndex > 0 && this.state.projectValidation === false) {\r\n      this.setState({ play: false });\r\n    } else {\r\n      this.setState({ play: true });\r\n    }\r\n\r\n    if (name === \"close\") {\r\n      clearInterval(this.state.intervalID);\r\n      this.setState({ ...this.resetState() });\r\n    }\r\n  };\r\n\r\n  // NOTE  for update state property i use async and give await to setState Method to get information then update it\r\n  handleListSelect = async (mode) => {\r\n    const startTime = this.state.startTime;\r\n    const endTime = this.state.endTime;\r\n    const { projectIndex } = this.state;\r\n\r\n    const separateStart = startTime.split(\":\");\r\n\r\n    const startTimeValidation =\r\n      Math.floor(separateStart[0]) < 24 && Math.floor(separateStart[1]) < 60;\r\n\r\n    if (!startTimeValidation) {\r\n      this.setState({ startTimeUnvalidation: true });\r\n      return;\r\n    }\r\n    this.setState({ startTimeUnvalidation: false });\r\n\r\n    const startHourToMin = Number(Math.floor(separateStart[0]) * 60);\r\n    const startMin = Number(Math.floor(separateStart[1]));\r\n    const allStartMinTime = startMin + startHourToMin;\r\n\r\n    const separateEnd = endTime.split(\":\");\r\n\r\n    const endTimeValidation =\r\n      Math.floor(separateEnd[0]) < 24 && Math.floor(separateEnd[1]) < 60;\r\n\r\n    if (!endTimeValidation) {\r\n      this.setState({ endTimeUnvalidation: true });\r\n      return;\r\n    }\r\n\r\n    this.setState({ endTimeUnvalidation: false });\r\n\r\n    const endHourToMin = Number(Math.floor(separateEnd[0]) * 60);\r\n    const endMin = Number(Math.floor(separateEnd[1]));\r\n    const allEndMinTime = endMin + endHourToMin;\r\n\r\n    const finallMin = allEndMinTime - allStartMinTime;\r\n\r\n    const sec = finallMin * 60;\r\n\r\n    const count = Number(sec);\r\n\r\n    await this.setState({ count });\r\n\r\n    if (\r\n      projectIndex > 0 &&\r\n      startTimeValidation &&\r\n      endTimeValidation &&\r\n      allEndMinTime > allStartMinTime\r\n    ) {\r\n      this.setState({ projectValidation: true });\r\n      this.postDate();\r\n      this.postPosts();\r\n      if (mode === \"modal\") {\r\n        this.handleDelete(this.state.postId);\r\n      }\r\n    } else if (projectIndex === 0 && this.state.projectValidation) {\r\n      this.handleProjectValidation();\r\n      this.setState({ projectValidation: false });\r\n    }\r\n\r\n    if (allEndMinTime < allStartMinTime || allStartMinTime === allEndMinTime) {\r\n      this.setState({ endTimeUnvalidation: true, startTimeUnvalidation: true });\r\n    }\r\n  };\r\n\r\n  handlePlayerMode = (name) => {\r\n    if (name === \"list\") {\r\n      this.setState({ counter: false });\r\n    } else if (name === \"clock\") {\r\n      this.setState({ counter: true });\r\n    }\r\n  };\r\n\r\n  handleDelete = (id) => {\r\n    axios({\r\n      url: `https://minit-server-app.herokuapp.com/posts/${id}`,\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        if (this.state.getProjects.length === 0) return;\r\n\r\n        this.getPosts();\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios({\r\n      url: `https://minit-server-app.herokuapp.com/date/${id}`,\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        if (this.state.getProjects.length === 0) return;\r\n        this.getDate();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleProjectValidation = () => {\r\n    setTimeout(() => {\r\n      this.setState({ projectValidation: true });\r\n    }, 2000);\r\n  };\r\n\r\n  handleEditModal = () => {\r\n    const openEditModal = !this.state.openEditModal;\r\n    this.setState({ openEditModal });\r\n\r\n    if (this.state.openEditModal) {\r\n      this.getTags();\r\n      this.setState({ ...this.resetState() });\r\n    }\r\n  };\r\n\r\n  handlePressEnter = (e) => {\r\n    if (this.state.tagName.length > 0 && e.which === 13) {\r\n      this.postTag();\r\n    }\r\n  };\r\n\r\n  handleSelectedTag = async (id) => {\r\n    const selectedTag = [...this.state.selectedTag];\r\n\r\n    const getTags = [...this.state.getTags];\r\n\r\n    const newGetTags = getTags.filter((item) => item.id !== id);\r\n\r\n    const newSelectedTag = getTags.filter((item) => item.id === id);\r\n\r\n    selectedTag.push(...newSelectedTag);\r\n\r\n    await this.setState({ selectedTag, getTags: newGetTags });\r\n  };\r\n\r\n  handleCloseSelectedTag = (item) => {\r\n    const getTags = [...this.state.getTags];\r\n\r\n    const selectedTag = [...this.state.selectedTag];\r\n    const newSelectedTag = selectedTag.filter((value) => value.id !== item.id);\r\n\r\n    getTags.push(item);\r\n\r\n    const sortedGetTags = _.orderBy(getTags, [\"id\"], [\"desc\"]);\r\n\r\n    this.setState({ getTags: sortedGetTags, selectedTag: newSelectedTag });\r\n  };\r\n\r\n  /* ---------------------------- Methods for axios --------------------------- */\r\n\r\n  postPosts = () => {\r\n    const {\r\n      description,\r\n      projectName,\r\n      projectIndex,\r\n      projectId,\r\n      activityName,\r\n      activityId,\r\n      count,\r\n      date,\r\n      startTime,\r\n      endTime,\r\n      color,\r\n      selectedTag,\r\n    } = this.state;\r\n\r\n    const fixDate = this.fixNumbers(date);\r\n\r\n    const seprateDate = fixDate.split(\"/\");\r\n\r\n    const year = seprateDate[0];\r\n    const month = seprateDate[1];\r\n    const day = seprateDate[2];\r\n\r\n    if (month.length < 2) {\r\n      seprateDate[1] = 0 + month;\r\n    }\r\n\r\n    if (day.length < 2) {\r\n      seprateDate[2] = 0 + day;\r\n    }\r\n\r\n    const newFix = seprateDate.join(\"/\");\r\n\r\n    if (year.length === 4) {\r\n      axios({\r\n        url: \"https://minit-server-app.herokuapp.com/posts\",\r\n\r\n        method: \"post\",\r\n\r\n        data: {\r\n          description,\r\n\r\n          projectName,\r\n\r\n          projectIndex,\r\n\r\n          projectId,\r\n\r\n          activityName,\r\n\r\n          activityId,\r\n\r\n          color,\r\n\r\n          tagName: [...selectedTag],\r\n\r\n          time: {\r\n            count,\r\n            startTime,\r\n            endTime,\r\n          },\r\n\r\n          date: newFix,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (this.Unmount) return;\r\n          this.getPosts();\r\n          this.getTags();\r\n          this.setState({ ...this.resetState() });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      this.setState({ dateUnvalid: true });\r\n    }\r\n  };\r\n\r\n  postDate = () => {\r\n    const { date } = this.state;\r\n\r\n    const fixDate = this.fixNumbers(date);\r\n\r\n    const seprateDate = fixDate.split(\"/\");\r\n\r\n    const year = seprateDate[0];\r\n    const month = seprateDate[1];\r\n    const day = seprateDate[2];\r\n\r\n    if (month.length < 2) {\r\n      seprateDate[1] = 0 + month;\r\n    }\r\n\r\n    if (day.length < 2) {\r\n      seprateDate[2] = 0 + day;\r\n    }\r\n    const newFix = seprateDate.join(\"/\");\r\n    if (year.length === 4) {\r\n      axios({\r\n        url: \"https://minit-server-app.herokuapp.com/date\",\r\n        method: \"POST\",\r\n        data: {\r\n          date: newFix,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          if (this.Unmount) return;\r\n          this.getDate();\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      this.setState({ dateUnvalid: true });\r\n    }\r\n  };\r\n\r\n  postTag = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/tags\",\r\n      method: \"POST\",\r\n      data: {\r\n        name: this.state.tagName,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        if (this.state.selectedTag.length > 0) {\r\n          const getTags = [...this.state.getTags];\r\n          getTags.push(response.data);\r\n          this.setState({ getTags });\r\n        } else {\r\n          this.getTags();\r\n        }\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  getTags = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/tags\",\r\n    })\r\n      .then((response) => {\r\n        this.setState({ getTags: response.data, tagName: \"\" });\r\n        this.sortTags();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  getDate = () => {\r\n    axios({ url: \"https://minit-server-app.herokuapp.com/date\" })\r\n      .then((response) => {\r\n        if (this.Unmount) return;\r\n        this.setState({ getDate: response.data });\r\n        this.allDate();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  getPosts = () => {\r\n    axios({ url: \"https://minit-server-app.herokuapp.com/posts\" })\r\n      .then((response) => {\r\n        if (this.Unmount) return;\r\n        this.setState({ getPosts: response.data });\r\n        this.sortPosts();\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  getProjects = () => {\r\n    axios({ url: \"https://minit-server-app.herokuapp.com/projects\" })\r\n      .then((response) => {\r\n        if (this.Unmount) return;\r\n        this.setState({ getProjects: [...response.data] });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  getTasktype = () => {\r\n    axios({ url: \"https://minit-server-app.herokuapp.com/tasktype\" })\r\n      .then((res) => this.setState({ getTasktype: [...res.data] }))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  /* ------------------------------ other Methods ----------------------------- */\r\n\r\n  // use this method in the state and some axios for get time\r\n  getNewDate() {\r\n    const d = new Date();\r\n    return d;\r\n  }\r\n\r\n  //this method transfer our counter to clock\r\n  calculateTime = () => {\r\n    if (this.state.play) {\r\n      const endTime = this.getNewDate().toLocaleTimeString(\"fr-FR\", {\r\n        hour: \"2-digit\",\r\n        minute: \"2-digit\",\r\n      });\r\n      const count = this.state.count;\r\n      const hour = Math.floor(count / 3600);\r\n      const baghi01 = count % 3600;\r\n      const min = Math.floor(baghi01 / 60);\r\n      const sec = baghi01 % 60;\r\n\r\n      this.setState((prevState) => {\r\n        return { count: ++prevState.count, hour, min, sec, endTime };\r\n      });\r\n    }\r\n  };\r\n\r\n  // REVIEW way to delete duplicate values in array\r\n  allDate = async () => {\r\n    const allDate = [];\r\n    for (let i in this.state.getDate) {\r\n      await allDate.push(this.state.getDate[i].date);\r\n    }\r\n\r\n    const unique = new Set(allDate);\r\n\r\n    const uniqueTimes = [...unique];\r\n\r\n    const sorted = _.orderBy(uniqueTimes, [], [\"desc\"]);\r\n\r\n    this.setState({ allDate: sorted });\r\n  };\r\n\r\n  sortPosts = () => {\r\n    const posts = [...this.state.getPosts];\r\n    // REVIEW if we have nested key in one Object like: (startTime in time and time in post) , we gotta write second argument in the orderBy as below, (access a nessted keys with . operator)\r\n    const sortPosts = _.orderBy(\r\n      posts,\r\n      [\"time.startTime\", \"time.endTime\", \"id\"],\r\n      [\"desc\", \"desc\", \"desc\"]\r\n    );\r\n    this.setState({ getPosts: sortPosts });\r\n  };\r\n\r\n  sortTags = () => {\r\n    const tags = [...this.state.getTags];\r\n    const sortTags = _.orderBy(tags, [\"id\"], [\"desc\"]);\r\n    this.setState({ getTags: sortTags });\r\n  };\r\n\r\n  fixNumbers = function(str) {\r\n    if (typeof str === \"string\") {\r\n      for (var i = 0; i < 10; i++) {\r\n        str = str.replace(this.persianNumbers[i], i);\r\n      }\r\n    }\r\n    return str;\r\n  };\r\n\r\n  showOrderPlayButton = (\r\n    description,\r\n    projectName,\r\n    projectId,\r\n    projectIndex,\r\n    activityName,\r\n    color\r\n  ) => {\r\n    this.setState({\r\n      description,\r\n      projectName,\r\n      projectId,\r\n      projectIndex,\r\n      activityName,\r\n      color,\r\n    });\r\n    this.handleStart();\r\n  };\r\n\r\n  editModalDetails = async (\r\n    description,\r\n    projectName,\r\n    projectId,\r\n    projectIndex,\r\n    activityName,\r\n    color,\r\n    startTime,\r\n    endTime,\r\n    date,\r\n    selectedTag,\r\n    postId\r\n  ) => {\r\n    await this.setState({\r\n      description,\r\n      projectName,\r\n      projectId,\r\n      projectIndex,\r\n      activityName,\r\n      color,\r\n      startTime,\r\n      endTime,\r\n      date,\r\n      selectedTag,\r\n      postId,\r\n    });\r\n\r\n    // REVIEW  for filtering 2 array together and export non same obj\r\n    const getTags = [...this.state.getTags];\r\n    const select = [...this.state.selectedTag];\r\n    const myArrayFiltered = getTags.filter((array) =>\r\n      select.every((filter) => filter.id !== array.id)\r\n    );\r\n\r\n    this.setState({ getTags: myArrayFiltered });\r\n  };\r\n\r\n  render() {\r\n    const { counter, play, hour, min, sec } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"panel-parent\">\r\n          <div className=\"panel-body container-fluid\">\r\n            <div className=\"row align-items-lg-center\">\r\n              <div className=\"col-12 col-lg-8\">\r\n                <div className=\"d-md-flex justify-content-md-around align-items-md-center mb-md-4 mb-lg-0\">\r\n                  <div className=\"container-fluid\">\r\n                    <div className=\"row\">\r\n                      <div className=\"d-flex col-md-4 align-items-center\">\r\n                        <label className=\"input-label d-lg-none mb-0 ml-2\">\r\n                          توضیحات\r\n                        </label>\r\n                        <input\r\n                          name=\"description\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"توضیحات\"\r\n                          type=\"text\"\r\n                          value={\r\n                            !this.state.openEditModal\r\n                              ? this.state.description\r\n                              : \"\"\r\n                          }\r\n                          onChange={this.handleInputs}\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"d-flex col-md-4 align-items-center\">\r\n                        <label className=\"input-label d-lg-none mb-0 ml-2\">\r\n                          پروژه\r\n                        </label>\r\n                        <select\r\n                          className={\r\n                            this.state.projectValidation\r\n                              ? \"form-control\"\r\n                              : \"form-control inputUnvalidation\"\r\n                          }\r\n                          name=\"projectName\"\r\n                          onChange={this.handleInputs}\r\n                          value={this.state.projectName}\r\n                        >\r\n                          <option value=\"\">پروژه</option>\r\n                          {!this.state.openEditModal &&\r\n                            this.state.getProjects.map((item, index) => {\r\n                              return (\r\n                                <option\r\n                                  key={index}\r\n                                  id={item.color}\r\n                                  projectid={item.id}\r\n                                  value={item.name}\r\n                                >\r\n                                  {item.name}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                        </select>\r\n                      </div>\r\n\r\n                      <div className=\"d-flex col-md-4 align-items-center\">\r\n                        <label className=\"input-label d-lg-none mb-0 ml-2\">\r\n                          نوع فعالیت\r\n                        </label>\r\n                        <select\r\n                          className=\"form-control\"\r\n                          name=\"activityName\"\r\n                          value={this.state.activityName}\r\n                          onChange={this.handleInputs}\r\n                        >\r\n                          <option value=\"\">نوع فعالیت</option>\r\n                          {this.state.getTasktype.length > 0 &&\r\n                            this.state.getTasktype.map((task) => (\r\n                              <option\r\n                                key={task.id}\r\n                                value={task.activityName}\r\n                                activityid={task.id}\r\n                              >\r\n                                {task.activityName}\r\n                              </option>\r\n                            ))}\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"panel-tag px-3 mt-3 mt-md-0\">\r\n                    <button\r\n                      className=\"w-20 text-center position-relative\"\r\n                      id=\"Tags\"\r\n                    >\r\n                      <i className=\"fa fa-tags\"></i>\r\n\r\n                      {!this.state.openEditModal &&\r\n                        this.state.selectedTag.length !== 0 && (\r\n                          <span className=\"badge badge-circle selected-tags-badge iranSansNum position-absolute\">\r\n                            {this.state.selectedTag.length}\r\n                          </span>\r\n                        )}\r\n\r\n                      <UncontrolledPopover\r\n                        target=\"Tags\"\r\n                        placement=\"bottom\"\r\n                        trigger=\"legacy\"\r\n                        className=\"tag-popover-parent\"\r\n                      >\r\n                        <PopoverBody>\r\n                          <div className=\"mb-3\">\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"tagName\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"برچسب جدید\"\r\n                              value={this.state.tagName}\r\n                              onChange={this.handleInputs}\r\n                              onKeyPress={this.handlePressEnter}\r\n                            />\r\n                          </div>\r\n                          <div>\r\n                            {this.state.getTags.length > 0 ||\r\n                            this.state.selectedTag.length > 0 ? (\r\n                              <div>\r\n                                <div>\r\n                                  {this.state.selectedTag.length > 0 ? (\r\n                                    <div>\r\n                                      {this.state.selectedTag.map((item) => (\r\n                                        <span\r\n                                          key={item.id}\r\n                                          className=\"fs-12 pointer mr-2 badge badge-success\"\r\n                                        >\r\n                                          {item.name}\r\n\r\n                                          <i\r\n                                            className=\"fs-12 mr-2 fas fa-times\"\r\n                                            onClick={() =>\r\n                                              this.handleCloseSelectedTag(item)\r\n                                            }\r\n                                          ></i>\r\n                                        </span>\r\n                                      ))}\r\n                                    </div>\r\n                                  ) : null}\r\n                                </div>\r\n\r\n                                {this.state.getTags.length !== 0 && (\r\n                                  <div className=\"fs-12 available-tags-title\">\r\n                                    برچسب های موجود\r\n                                  </div>\r\n                                )}\r\n\r\n                                <div>\r\n                                  {this.state.getTags.map((item) => (\r\n                                    <span\r\n                                      key={item.id}\r\n                                      className=\"fs-12 pointer badge badge-secondary mr-2\"\r\n                                      onClick={() =>\r\n                                        this.handleSelectedTag(item.id)\r\n                                      }\r\n                                    >\r\n                                      {item.name}\r\n                                    </span>\r\n                                  ))}\r\n                                </div>\r\n                              </div>\r\n                            ) : null}\r\n                          </div>\r\n                        </PopoverBody>\r\n                      </UncontrolledPopover>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12 col-lg-4 d-lg-flex navCalculateAndModeBox \">\r\n                {!counter && (\r\n                  <div className=\"d-flex flex-column justify-content-center px-3 my-3 flex-md-row justify-content-md-between align-items-md-center p-lg-0 m-lg-0 ml-lg-3\">\r\n                    <div className=\"d-flex justify-content-around align-items-center flex-lg-column-reverse mw-70 ml-lg-3\">\r\n                      <label\r\n                        className={\r\n                          this.state.dateUnvalid\r\n                            ? \"input-label input-label-unvalidation\"\r\n                            : \"input-label\"\r\n                        }\r\n                      >\r\n                        تاریخ\r\n                      </label>\r\n                      <input\r\n                        name=\"date\"\r\n                        type=\"text\"\r\n                        className={\r\n                          this.state.dateUnvalid\r\n                            ? \"form-control iranSansNum text-center inputUnvalidation\"\r\n                            : \"form-control iranSansNum text-center\"\r\n                        }\r\n                        value={this.state.date}\r\n                        onChange={this.handleInputs}\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-around align-items-center flex-lg-column-reverse ml-lg-3\">\r\n                      <label\r\n                        className={\r\n                          this.state.startTimeUnvalidation\r\n                            ? \"input-label input-label-unvalidation\"\r\n                            : \"input-label\"\r\n                        }\r\n                      >\r\n                        شروع\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={\r\n                          this.state.startTimeUnvalidation\r\n                            ? \"form-control panel-list-time text-center inputUnvalidation\"\r\n                            : \"form-control panel-list-time text-center\"\r\n                        }\r\n                        name=\"startTime\"\r\n                        value={this.state.startTime}\r\n                        onChange={this.handleInputs}\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-around align-items-center flex-lg-column-reverse\">\r\n                      <label\r\n                        className={\r\n                          this.state.endTimeUnvalidation\r\n                            ? \"input-label input-label-unvalidation\"\r\n                            : \"input-label\"\r\n                        }\r\n                      >\r\n                        اتمام\r\n                      </label>\r\n                      <input\r\n                        type=\"text\"\r\n                        className={\r\n                          this.state.endTimeUnvalidation\r\n                            ? \"form-control panel-list-time text-center inputUnvalidation\"\r\n                            : \"form-control panel-list-time text-center\"\r\n                        }\r\n                        name=\"endTime\"\r\n                        value={this.state.endTime}\r\n                        onChange={this.handleInputs}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                <div\r\n                  className={\r\n                    counter\r\n                      ? \"d-flex justify-content-between align-items-center w-100\"\r\n                      : \"d-flex justify-content-between align-items-center justify-content-lg-end w-100\"\r\n                  }\r\n                >\r\n                  <div className={counter ? \"panel-timer\" : \"hidden d-lg-none\"}>\r\n                    <span className=\"iranSansNum\">\r\n                      {hour < 10 ? `0${hour}` : hour}\r\n                    </span>\r\n                    <span>:</span>\r\n                    <span className=\"iranSansNum\">\r\n                      {min < 10 ? `0${min}` : min}\r\n                    </span>\r\n                    <span>:</span>\r\n                    <span className=\"iranSansNum\">\r\n                      {sec < 10 ? `0${sec}` : sec}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"panel-calculate d-flex ml-n3\">\r\n                    <div className=\"panel-player ml-4\">\r\n                      {counter ? (\r\n                        <React.Fragment>\r\n                          <i\r\n                            onClick={() => {\r\n                              this.handleStart(play ? \"stop\" : \"play\");\r\n                            }}\r\n                            className={\r\n                              play\r\n                                ? \"fas fa-stop-circle fa-stop\"\r\n                                : \"fas fa-play-circle fa-play\"\r\n                            }\r\n                          ></i>\r\n                        </React.Fragment>\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-check-circle fa-select\"\r\n                          onClick={this.handleListSelect}\r\n                        ></i>\r\n                      )}\r\n                    </div>\r\n\r\n                    <div className=\"d-flex flex-column justify-content-around align-items-center panel-player-mode\">\r\n                      {!play ? (\r\n                        <React.Fragment>\r\n                          <span onClick={() => this.handlePlayerMode(\"list\")}>\r\n                            <i\r\n                              className={\r\n                                !counter\r\n                                  ? \"fas fa-list-ul player-mode-active\"\r\n                                  : \"fas fa-list-ul\"\r\n                              }\r\n                            ></i>\r\n                          </span>\r\n                          <span onClick={() => this.handlePlayerMode(\"clock\")}>\r\n                            <i\r\n                              className={\r\n                                counter\r\n                                  ? \"far fa-clock player-mode-active\"\r\n                                  : \"far fa-clock\"\r\n                              }\r\n                            ></i>\r\n                          </span>\r\n                        </React.Fragment>\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          onClick={() => {\r\n                            this.handleStart(\"close\");\r\n                          }}\r\n                        ></i>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <ShowOrder\r\n          allDate={this.state.allDate}\r\n          posts={this.state.getPosts}\r\n          onDelete={this.handleDelete}\r\n          showOrderPlayButton={this.showOrderPlayButton}\r\n          play={this.state.play}\r\n          handleEditModal={this.handleEditModal}\r\n          editModalDetails={this.editModalDetails}\r\n        />\r\n\r\n        <div\r\n          className={\r\n            !this.state.projectValidation\r\n              ? \"projectUnvalidation fadeIn\"\r\n              : \"projectUnvalidation fadeOut hidden\"\r\n          }\r\n        >\r\n          <div>حتما باید یک پروژه انتخاب شود.</div>\r\n        </div>\r\n\r\n        {/* ---------------------------------- Modal --------------------------------- */}\r\n        <Modal\r\n          isOpen={this.state.openEditModal}\r\n          toggle={this.handleEditModal}\r\n          className=\"create-modal\"\r\n        >\r\n          <ModalHeader toggle={this.handleEditModal}>زمان</ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"mb-5\">\r\n              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                <label className=\"input-label ml-3 mb-0\">توضیحات</label>\r\n                <input\r\n                  placeholder=\"توضیحات\"\r\n                  type=\"text\"\r\n                  name=\"description\"\r\n                  value={this.state.description}\r\n                  onChange={this.handleInputs}\r\n                  className=\"form-control w-80-i\"\r\n                />\r\n              </div>\r\n              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                <label className=\"input-label mb-0 ml-3\">پروژه</label>\r\n                <select\r\n                  className={\r\n                    this.state.projectValidation\r\n                      ? \"form-control w-80-i\"\r\n                      : \"form-control w-80-i inputUnvalidation\"\r\n                  }\r\n                  name=\"projectName\"\r\n                  onChange={this.handleInputs}\r\n                  value={this.state.projectName}\r\n                >\r\n                  <option value=\"\">پروژه</option>\r\n                  {/* {this.state.getProjects.map((item, index) => {\r\n                    return (\r\n                      <option key={index} id={item.color} value={item.name}>\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })} */}\r\n                  {this.state.getProjects.map((item, index) => {\r\n                    return (\r\n                      <option\r\n                        key={index}\r\n                        id={item.color}\r\n                        projectid={item.id}\r\n                        value={item.name}\r\n                      >\r\n                        {item.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n              <div className=\"d-flex align-items-center justify-content-between mb-2\">\r\n                <label className=\"input-label mb-0 ml-3\">نوع فعالیت</label>\r\n                <select\r\n                  className=\"form-control w-80-i\"\r\n                  name=\"activityName\"\r\n                  value={this.state.activityName}\r\n                  onChange={this.handleInputs}\r\n                >\r\n                  <option value=\"\">نوع فعالیت</option>\r\n                  {this.state.getTasktype.length > 0 &&\r\n                    this.state.getTasktype.map((task) => (\r\n                      <option\r\n                        key={task.id}\r\n                        value={task.activityName}\r\n                        activityid={task.id}\r\n                      >\r\n                        {task.activityName}\r\n                      </option>\r\n                    ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-4 d-flex flex-column justify-content-center px-3 my-3\">\r\n              <div className=\"d-flex justify-content-around align-items-center mb-3\">\r\n                <label\r\n                  className={\r\n                    this.state.dateUnvalid\r\n                      ? \"input-label input-label-unvalidation\"\r\n                      : \"input-label\"\r\n                  }\r\n                >\r\n                  تاریخ\r\n                </label>\r\n                <input\r\n                  name=\"date\"\r\n                  type=\"text\"\r\n                  className={\r\n                    this.state.dateUnvalid\r\n                      ? \"form-control iranSansNum text-center w-80-i inputUnvalidation\"\r\n                      : \"form-control iranSansNum text-center w-80-i\"\r\n                  }\r\n                  value={this.state.date}\r\n                  onChange={this.handleInputs}\r\n                />\r\n              </div>\r\n              <div className=\"d-flex justify-content-around align-items-center mb-3\">\r\n                <label\r\n                  className={\r\n                    this.state.startTimeUnvalidation\r\n                      ? \"input-label input-label-unvalidation\"\r\n                      : \"input-label\"\r\n                  }\r\n                >\r\n                  شروع\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={\r\n                    this.state.startTimeUnvalidation\r\n                      ? \"form-control panel-list-time text-center w-80-i inputUnvalidation\"\r\n                      : \"form-control panel-list-time text-center w-80-i\"\r\n                  }\r\n                  name=\"startTime\"\r\n                  value={this.state.startTime}\r\n                  onChange={this.handleInputs}\r\n                />\r\n              </div>\r\n              <div className=\"d-flex justify-content-around align-items-center\">\r\n                <label\r\n                  className={\r\n                    this.state.endTimeUnvalidation\r\n                      ? \"input-label input-label-unvalidation\"\r\n                      : \"input-label\"\r\n                  }\r\n                >\r\n                  اتمام\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  className={\r\n                    this.state.endTimeUnvalidation\r\n                      ? \"form-control panel-list-time text-center w-80-i inputUnvalidation\"\r\n                      : \"form-control panel-list-time text-center w-80-i\"\r\n                  }\r\n                  name=\"endTime\"\r\n                  value={this.state.endTime}\r\n                  onChange={this.handleInputs}\r\n                />\r\n              </div>\r\n              <div>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <div className=\"d-flex align-items-center justify-content-around w-75\">\r\n                    <label className=\"input-label\">برچسب ها</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"tagName\"\r\n                      className=\"form-control w-50\"\r\n                      placeholder=\"برچسب جدید\"\r\n                      value={this.state.tagName}\r\n                      onChange={this.handleInputs}\r\n                      onKeyPress={this.handlePressEnter}\r\n                    />\r\n                  </div>\r\n\r\n                  <div>\r\n                    {this.state.getTags.map((item) => (\r\n                      <span\r\n                        key={item.id}\r\n                        className=\"fs-12 pointer badge badge-secondary mr-2\"\r\n                        onClick={() => this.handleSelectedTag(item.id)}\r\n                      >\r\n                        {item.name}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n\r\n                {this.state.selectedTag.length > 0 ? (\r\n                  <div>\r\n                    {this.state.selectedTag.map((item) => (\r\n                      <span\r\n                        key={item.id}\r\n                        className=\"fs-12 pointer mr-2 badge badge-success\"\r\n                      >\r\n                        {item.name}\r\n\r\n                        <i\r\n                          className=\"fs-12 mr-2 fas fa-times\"\r\n                          onClick={() => this.handleCloseSelectedTag(item)}\r\n                        ></i>\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter className=\"editPostFooterModal\">\r\n            <button\r\n              className=\"btn btn-secondary px-3 py-2\"\r\n              onClick={() => {\r\n                this.handleEditModal();\r\n              }}\r\n            >\r\n              انصراف\r\n            </button>\r\n            <button\r\n              className=\"btn btn-primary px-3 py-2 px-3\"\r\n              onClick={() => {\r\n                this.handleListSelect(\"modal\");\r\n              }}\r\n            >\r\n              ذخیره\r\n            </button>\r\n          </ModalFooter>\r\n        </Modal>\r\n\r\n        {/* -------------------------------------------------------------------------- */}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateOrder;\r\n","import React, { Component } from \"react\";\r\nimport CreateOrder from \"./PanelTimeComponents/CreateOrder\";\r\n\r\nclass PanelTime extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CreateOrder />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PanelTime;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport {\r\n  Popover,\r\n  PopoverBody,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\n\r\nclass Projects extends Component {\r\n  /* -------------------------- state and properties -------------------------- */\r\n  state = {\r\n    modalToggle: false,\r\n    editProjectModal: false,\r\n    popoverToggle: false,\r\n    getColors: [],\r\n    getProjects: [],\r\n    getPosts: [],\r\n    getClient: [],\r\n    currentColor: \"\",\r\n    projectName: \"\",\r\n    projectId: 0,\r\n    projectIndex: 0,\r\n    budget: \"\",\r\n    color: \"\",\r\n    clientName: \"\",\r\n    clientId: null,\r\n    searchName: \"\",\r\n    searchBudget: \"\",\r\n    searchCustomer: \"\",\r\n    projectUnvalidation: false,\r\n    signIn: true,\r\n    admin: false,\r\n    newProjectID: null,\r\n  };\r\n\r\n  resetModalAndPopOverAndCreateProjectProperties = {\r\n    modalToggle: false,\r\n    editProjectModal: false,\r\n    popoverToggle: false,\r\n    projectName: \"\",\r\n    projectId: 0,\r\n    projectIndex: 0,\r\n    budget: \"\",\r\n    color: \"\",\r\n    clientName: \"\",\r\n    clientId: null,\r\n    signIn: true,\r\n    admin: false,\r\n  };\r\n\r\n  resetSearchProperties = {\r\n    searchName: \"\",\r\n    searchBudget: \"\",\r\n    searchCustomer: \"مشتری\",\r\n  };\r\n\r\n  Unmount = false;\r\n\r\n  /* ----------------------------- lifecycle hooks ---------------------------- */\r\n\r\n  componentDidMount = () => {\r\n    this.getClient();\r\n    this.getPosts();\r\n    this.getColors();\r\n    this.getProjects();\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    if (!this.state.currentColor.length === 0) {\r\n      this.randomColor();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.Unmount = true;\r\n  };\r\n\r\n  /* ---------------------------------- axios --------------------------------- */\r\n\r\n  getClient = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/client\",\r\n    })\r\n      .then((res) => {\r\n        if (this.Unmount) return;\r\n        this.setState({ getClient: [...res.data] });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  getPosts = () => {\r\n    axios({ url: \"https://minit-server-app.herokuapp.com/posts\" })\r\n      .then((response) => {\r\n        if (this.Unmount) return;\r\n        this.setState({ getPosts: response.data });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  getColors = () => {\r\n    axios({ url: \"https://minit-server-app.herokuapp.com/colors\" })\r\n      .then((response) => {\r\n        if (this.Unmount) return;\r\n        this.setState({\r\n          getColors: response.data,\r\n        });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  getProjects = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/projects\",\r\n    })\r\n      .then((response) => {\r\n        if (this.Unmount) return;\r\n        this.setState({ getProjects: response.data });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  postProject = async () => {\r\n    const {\r\n      projectName,\r\n      currentColor,\r\n      signIn,\r\n      admin,\r\n      budget,\r\n      projectId,\r\n      clientName,\r\n      clientId,\r\n    } = this.state;\r\n\r\n    if (this.state.editProjectModal) {\r\n      await axios({\r\n        url: `https://minit-server-app.herokuapp.com/projects/${projectId}`,\r\n        method: \"DELETE\",\r\n      })\r\n        .then((res) => {\r\n          return;\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    if (this.state.projectName.length > 0) {\r\n      await axios({\r\n        url: \"https://minit-server-app.herokuapp.com/projects\",\r\n        method: \"POST\",\r\n        data: {\r\n          name: projectName,\r\n          color: currentColor,\r\n          clientName,\r\n          clientId,\r\n          budget: budget === \"\" ? 0 : budget,\r\n          projectAccess: {\r\n            admin,\r\n            signIn,\r\n          },\r\n          id: this.state.newProjectID,\r\n        },\r\n      })\r\n        .then((response) => {\r\n          const { searchBudget, searchName, searchCustomer } = this.state;\r\n          if (this.Unmount) return;\r\n\r\n          // NOTE  this statements below used if we are searching a project and also made a one project or edit it\r\n          if (\r\n            searchBudget.length > 0 ||\r\n            searchCustomer.length > 0 ||\r\n            searchName.length > 0\r\n          ) {\r\n            if (\r\n              (searchName.length > 0\r\n                ? response.data.name === searchName\r\n                : true) &&\r\n              (searchBudget.length > 0\r\n                ? Number(response.data.budget) === Number(searchBudget)\r\n                : true) &&\r\n              (searchCustomer.length > 0\r\n                ? searchCustomer === response.data.customer\r\n                : true)\r\n            ) {\r\n              // this.state.getProjects.push(response.data);\r\n              this.setState((prevState) => {\r\n                if (this.state.editProjectModal) {\r\n                  prevState.getProjects.splice(this.state.projectIndex, 1);\r\n                }\r\n                prevState.getProjects.push(response.data);\r\n              });\r\n              this.setState({\r\n                ...this.resetModalAndPopOverAndCreateProjectProperties,\r\n              });\r\n              return;\r\n            } else {\r\n              this.getProjects();\r\n              this.setState({\r\n                ...this.resetModalAndPopOverAndCreateProjectProperties,\r\n              });\r\n              return;\r\n            }\r\n          }\r\n          this.getProjects();\r\n\r\n          this.handleChangePosts(projectName, projectId, currentColor);\r\n\r\n          this.setState({\r\n            ...this.resetModalAndPopOverAndCreateProjectProperties,\r\n          });\r\n        })\r\n        .catch((err) => console.log(err));\r\n    } else {\r\n      this.setState({ projectUnvalidation: true });\r\n      setTimeout(() => {\r\n        this.setState({ projectUnvalidation: false });\r\n      }, 2000);\r\n    }\r\n  };\r\n\r\n  /* ---------------- handle Methods --------------- */\r\n\r\n  handleChangePosts = (projectName, projectId, currentColor) => {\r\n    const getPosts = [...this.state.getPosts];\r\n\r\n    const newGP = getPosts.filter((value) => value.projectId === projectId);\r\n\r\n    newGP.forEach(\r\n      async (item) =>\r\n        await this.handleDeletePostsAndCreateANewOne(\r\n          item,\r\n          projectName,\r\n          projectId,\r\n          currentColor\r\n        )\r\n    );\r\n  };\r\n\r\n  handleDeletePostsAndCreateANewOne = async (\r\n    item,\r\n    projectName,\r\n    projectId,\r\n    currentColor\r\n  ) => {\r\n    const {\r\n      description,\r\n      projectIndex,\r\n      activityName,\r\n      tagName,\r\n      time,\r\n      date,\r\n      id,\r\n    } = item;\r\n\r\n    await axios({\r\n      url: \"https://minit-server-app.herokuapp.com/posts\",\r\n      method: \"POST\",\r\n      data: {\r\n        description,\r\n        projectId,\r\n        projectName,\r\n        projectIndex,\r\n        color: currentColor,\r\n        activityName,\r\n        tagName,\r\n        time,\r\n        date,\r\n        id,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        return;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleModalToggle = () => {\r\n    const modalToggle = !this.state.modalToggle;\r\n    if (modalToggle) {\r\n      this.randomColor();\r\n      this.setState({ ...this.resetModalAndPopOverAndCreateProjectProperties });\r\n    }\r\n    this.setState({ modalToggle });\r\n  };\r\n\r\n  handlePopover = () => {\r\n    const popoverToggle = !this.state.popoverToggle;\r\n    this.setState({ popoverToggle });\r\n  };\r\n\r\n  handleInputs = (e) => {\r\n    const { name } = e.currentTarget;\r\n    const { value } = e.target;\r\n\r\n    if (name === \"clientName\") {\r\n      const index = e.target.selectedIndex;\r\n      const item = e.target[index];\r\n      const clientId = Number(item.getAttribute(\"clientid\"));\r\n      this.setState({ clientId });\r\n    }\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleCheckBox = (e) => {\r\n    const { name } = e.target;\r\n    this.setState({ [name]: !this.state[name] });\r\n  };\r\n\r\n  handleColorPick = (color) => {\r\n    this.setState({ currentColor: color });\r\n  };\r\n\r\n  handleDeletePostsAndDates = (id) => {\r\n    axios({\r\n      url: `https://minit-server-app.herokuapp.com/posts/${id}`,\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res) => {\r\n        return;\r\n      })\r\n      .catch((err) => console.log(err));\r\n\r\n    axios({\r\n      url: `https://minit-server-app.herokuapp.com/date/${id}`,\r\n      method: \"DELETE\",\r\n    })\r\n      .then((res) => {\r\n        return;\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleDeleteProject = (id, item) => {\r\n    const getPosts = [...this.state.getPosts];\r\n\r\n    const newGP = getPosts.filter((value) => value.projectId === id);\r\n\r\n    newGP.forEach((value) => this.handleDeletePostsAndDates(value.id));\r\n\r\n    axios({\r\n      url: `https://minit-server-app.herokuapp.com/projects/${id}`,\r\n      method: \"DELETE\",\r\n    })\r\n      .then((response) => {\r\n        const { searchBudget, searchName, searchCustomer } = this.state;\r\n\r\n        if (\r\n          searchBudget.length > 0 ||\r\n          searchCustomer.length > 0 ||\r\n          searchName.length > 0\r\n        ) {\r\n          if (\r\n            (searchName.length > 0 ? item.name === searchName : true) &&\r\n            (searchBudget.length > 0\r\n              ? Number(item.budget) === Number(searchBudget)\r\n              : true)\r\n          ) {\r\n            const getProjects = [...this.state.getProjects];\r\n            const index = getProjects.indexOf(item);\r\n\r\n            getProjects.splice(index, 1);\r\n            this.setState({ getProjects });\r\n\r\n            return;\r\n          } else {\r\n            return;\r\n          }\r\n        }\r\n\r\n        this.getProjects();\r\n        this.setState({ ...this.resetSearchProperties });\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  handleSearch = () => {\r\n    const { searchName, searchBudget, searchCustomer } = this.state;\r\n\r\n    const regExpSearchName = new RegExp(`${searchName}`, \"i\");\r\n\r\n    const getProjects = this.state.getProjects.filter((item) => {\r\n      if (\r\n        (searchName.length > 0\r\n          ? regExpSearchName.test(item.name)\r\n            ? searchName.length === item.name.length\r\n            : false\r\n          : true) &&\r\n        (searchBudget.length > 0\r\n          ? Number(item.budget) === Number(searchBudget)\r\n          : true) &&\r\n        (searchCustomer.length > 0 ? searchCustomer === item.clientName : true)\r\n      ) {\r\n        return item;\r\n      }\r\n      return 0;\r\n    });\r\n\r\n    this.setState({ getProjects });\r\n  };\r\n\r\n  handlEditProjects = (\r\n    projectName,\r\n    color,\r\n    budget,\r\n    clientName,\r\n    clientId,\r\n    signIn,\r\n    admin,\r\n    projectId,\r\n    item\r\n  ) => {\r\n    const getProjects = [...this.state.getProjects];\r\n    const projectIndex = getProjects.indexOf(item);\r\n\r\n    this.setState({\r\n      projectName,\r\n      color,\r\n      currentColor: color,\r\n      budget,\r\n      clientName,\r\n      clientId,\r\n      signIn,\r\n      admin,\r\n      modalToggle: true,\r\n      editProjectModal: true,\r\n      projectId,\r\n      projectIndex,\r\n      newProjectID: projectId,\r\n    });\r\n  };\r\n\r\n  handleResetSearch = () => {\r\n    this.getProjects();\r\n    this.setState({ ...this.resetSearchProperties });\r\n  };\r\n  /* ------------------------------ other Methods ----------------------------- */\r\n  randomColor = async () => {\r\n    const getColors = [...this.state.getColors];\r\n    const number = Math.floor(Math.random() * 20);\r\n    const currentColor = getColors[number];\r\n\r\n    const rgb = { ...currentColor };\r\n\r\n    await this.setState({ currentColor: rgb.color });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"projects h-100\">\r\n          <div className=\"projects-header px-3 d-flex justify-content-between align-items-center\">\r\n            <h1 className=\"h2\">پروژه</h1>\r\n            <button\r\n              className=\"btn btn-success btn-project\"\r\n              onClick={this.handleModalToggle}\r\n            >\r\n              ایجاد\r\n            </button>\r\n          </div>\r\n\r\n          {/* ---------------------------------- modal --------------------------------- */}\r\n          <Modal\r\n            isOpen={this.state.modalToggle}\r\n            toggle={this.handleModalToggle}\r\n            className=\"create-modal\"\r\n            onClick={() => {\r\n              this.setState({ popoverToggle: false });\r\n            }}\r\n          >\r\n            <ModalHeader toggle={this.handleModalToggle}>پروژه</ModalHeader>\r\n            <ModalBody>\r\n              <div>\r\n                <div className=\"d-flex justify-content-between align-items-center\">\r\n                  <input\r\n                    className={\r\n                      this.state.projectUnvalidation\r\n                        ? \"inputUnvalidation form-control\"\r\n                        : \"form-control\"\r\n                    }\r\n                    type=\"text\"\r\n                    placeholder=\"نام پروژه\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.handleInputs}\r\n                  />\r\n                  <div\r\n                    className=\"btn-color pointer bg-white d-flex justify-content-between align-items-center mr-2\"\r\n                    id=\"colorPickPopover\"\r\n                  >\r\n                    <div\r\n                      className=\"m-1 color\"\r\n                      style={{\r\n                        backgroundColor: this.state.currentColor,\r\n                      }}\r\n                    ></div>\r\n                    <i className=\"fas fa-caret-down\"></i>\r\n                  </div>\r\n                  {/* -------------------------- Color Select Popover -------------------------- */}\r\n\r\n                  <Popover\r\n                    placement=\"bottom\"\r\n                    isOpen={this.state.popoverToggle}\r\n                    target=\"colorPickPopover\"\r\n                    toggle={this.handlePopover}\r\n                  >\r\n                    <PopoverBody className=\"colorPick-popover-body d-flex flex-wrap justify-content-around \">\r\n                      {this.state.getColors.map((item, index) => {\r\n                        return (\r\n                          <div\r\n                            key={index}\r\n                            className=\"color pointer\"\r\n                            style={{ backgroundColor: item.color }}\r\n                            color={item.color}\r\n                            onClick={() => {\r\n                              this.handleColorPick(item.color);\r\n                            }}\r\n                          ></div>\r\n                        );\r\n                      })}\r\n                    </PopoverBody>\r\n                  </Popover>\r\n\r\n                  {/* -------------------------------------------------------------------------- */}\r\n                </div>\r\n\r\n                <div>\r\n                  <input\r\n                    className=\"form-control w-100\"\r\n                    type=\"text\"\r\n                    placeholder=\"بودجه زمانی (نفر ساعت)\"\r\n                    name=\"budget\"\r\n                    value={this.state.budget}\r\n                    onChange={this.handleInputs}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <select\r\n                    className=\"form-control w-100\"\r\n                    value={this.state.clientName}\r\n                    name=\"clientName\"\r\n                    onChange={this.handleInputs}\r\n                  >\r\n                    <option value=\"\">مشتری</option>\r\n                    {this.state.getClient.length > 0\r\n                      ? this.state.getClient.map((client) => (\r\n                          <option\r\n                            key={client.id}\r\n                            value={client.clientName}\r\n                            clientid={client.id}\r\n                          >\r\n                            {client.clientName}\r\n                          </option>\r\n                        ))\r\n                      : null}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mt-5 container\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-10 mx-auto\">\r\n                    <div className=\"text-center font-weight-bold mb-3\">\r\n                      دسترسی پروژه\r\n                    </div>\r\n                    <table className=\"table\">\r\n                      <thead className=\"project-access-thead\">\r\n                        <tr>\r\n                          <th className=\"w-71px\">مدیریت</th>\r\n                          <th className=\"w-71px\">عضویت</th>\r\n                          <th></th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        <tr>\r\n                          <td className=\"w-71px\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              name=\"admin\"\r\n                              onChange={this.handleCheckBox}\r\n                              checked={this.state.admin}\r\n                            />\r\n                          </td>\r\n                          <td className=\"w-71px\">\r\n                            <input\r\n                              name=\"signIn\"\r\n                              type=\"checkbox\"\r\n                              checked={this.state.signIn}\r\n                              onChange={this.handleCheckBox}\r\n                            />\r\n                          </td>\r\n                          <td className=\"text-left\">User Name Here</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <button\r\n                className=\"btn btn-success btn-project w-auto\"\r\n                onClick={this.postProject}\r\n              >\r\n                ثبت\r\n              </button>{\" \"}\r\n              <button\r\n                className=\"btn btn-danger btn-project w-auto\"\r\n                onClick={this.handleModalToggle}\r\n              >\r\n                انصراف\r\n              </button>\r\n            </ModalFooter>\r\n          </Modal>\r\n          {/* -------------------------------------------------------------------------- */}\r\n\r\n          <div className=\"projects-search bg-white mx-3 px-3 py-2 d-lg-flex justify-content-lg-between\">\r\n            <div className=\"d-lg-flex align-items-lg-center flex-lg-grow-1\">\r\n              <div className=\"px-3 projects-search-items\">\r\n                <input\r\n                  placeholder=\"نام\"\r\n                  className=\"form-control w-100 mb-3\"\r\n                  type=\"text\"\r\n                  name=\"searchName\"\r\n                  value={this.state.searchName}\r\n                  onChange={this.handleInputs}\r\n                />\r\n              </div>\r\n              <div className=\"px-3 projects-search-items\">\r\n                <input\r\n                  placeholder=\"بودجه زمانی\"\r\n                  className=\"form-control w-100 mb-3\"\r\n                  type=\"text\"\r\n                  name=\"searchBudget\"\r\n                  value={this.state.searchBudget}\r\n                  onChange={this.handleInputs}\r\n                />\r\n              </div>\r\n              <div className=\"px-3 projects-search-items\">\r\n                <select\r\n                  value={this.state.searchCustomer}\r\n                  className=\"form-control w-100 mb-3\"\r\n                  name=\"searchCustomer\"\r\n                  onChange={this.handleInputs}\r\n                >\r\n                  <option value=\"\">مشتری</option>\r\n                  {this.state.getClient.length > 0\r\n                    ? this.state.getClient.map((client) => (\r\n                        <option\r\n                          key={client.id}\r\n                          value={client.clientName}\r\n                          clientid={client.id}\r\n                        >\r\n                          {client.clientName}\r\n                        </option>\r\n                      ))\r\n                    : null}\r\n                </select>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-end align-items-center\">\r\n              <div className=\"d-flex justify-content-between align-items-center pr-3 py-2\">\r\n                <button\r\n                  className=\"btn btn-projects-search\"\r\n                  onClick={this.handleSearch}\r\n                >\r\n                  <i className=\"fas fa-search\"></i>\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-projects-search mr-2\"\r\n                  onClick={this.handleResetSearch}\r\n                >\r\n                  <i className=\"fas fa-times\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {this.state.getProjects.length === 0 ? (\r\n            <div className=\"p-3 mx-3 fs-12 text-muted\">موردی یافت نشد.</div>\r\n          ) : (\r\n            <div className=\"table-responsive px-4\">\r\n              <table className=\"table showProjects\">\r\n                <thead>\r\n                  <tr>\r\n                    <td>نام</td>\r\n                    <td>بودجه زمانی (نفر ساعت)</td>\r\n                    <td>مشتری</td>\r\n                    <td></td>\r\n                    <td></td>\r\n                    <td>\r\n                      <i\r\n                        className=\"pointer fas fa-sync-alt\"\r\n                        onClick={this.handleSearch}\r\n                      ></i>\r\n                    </td>\r\n                  </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                  {this.state.getProjects.map((item, index) => {\r\n                    return (\r\n                      <tr key={index}>\r\n                        <td className=\"pointer\" style={{ color: item.color }}>\r\n                          {item.name}\r\n                        </td>\r\n                        <td className=\"pointer iranSansNum\">{item.budget}</td>\r\n                        <td className=\"pointer\">{item.clientName}</td>\r\n                        <td>\r\n                          <i\r\n                            className=\"pointer fas fa-pencil-alt\"\r\n                            onClick={() =>\r\n                              this.handlEditProjects(\r\n                                item.name,\r\n                                item.color,\r\n                                item.budget,\r\n                                item.clientName,\r\n                                item.clientId,\r\n                                item.projectAccess.signIn,\r\n                                item.projectAccess.admin,\r\n                                item.id,\r\n                                item\r\n                              )\r\n                            }\r\n                          ></i>\r\n                        </td>\r\n                        <td>\r\n                          <i\r\n                            className=\"pointer fas fa-times\"\r\n                            onClick={() => {\r\n                              this.handleDeleteProject(item.id, item);\r\n                            }}\r\n                          ></i>\r\n                        </td>\r\n                        <td></td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Modal, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nclass TaskType extends Component {\r\n  /* ------------------------------- properties ------------------------------- */\r\n\r\n  state = {\r\n    getPosts: [],\r\n    getTasktype: [],\r\n    activityName: \"\",\r\n    activityId: null,\r\n    pay: false,\r\n    openEditModal: false\r\n  };\r\n\r\n  resetState = {\r\n    activityName: \"\",\r\n    activityId: null,\r\n    pay: false,\r\n    openEditModal: false\r\n  };\r\n\r\n  Unmount = false;\r\n\r\n  /* ----------------------------- lifecycle hooks ---------------------------- */\r\n\r\n  componentDidMount = () => {\r\n    this.getTasktype();\r\n    this.getPosts();\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.Unmount = true;\r\n  };\r\n\r\n  /* ------------------------------ axios method ------------------------------ */\r\n  postTasktype = () => {\r\n    const { activityName, pay, activityId } = this.state;\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/tasktype\",\r\n      method: \"POST\",\r\n      data: {\r\n        activityName,\r\n        pay,\r\n        id: activityId !== null ? activityId : null\r\n      }\r\n    })\r\n      .then(async res => {\r\n        if (this.Unmount) return;\r\n        await this.getTasktype();\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  getTasktype = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/tasktype\"\r\n    })\r\n      .then(res => {\r\n        if (this.Unmount) return;\r\n        if (!this.state.openEditModal) {\r\n          this.setState({\r\n            getTasktype: [...res.data],\r\n            ...this.resetState\r\n          });\r\n        } else {\r\n          this.setState({\r\n            getTasktype: [...res.data]\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  deleteTasktype = async (id, mode) => {\r\n    const getPosts = [...this.state.getPosts];\r\n    const newGP = getPosts.filter(item => item.activityId === id);\r\n\r\n    newGP.forEach(\r\n      async item => await this.handleDeletePostsAndCreateANewOne(item, mode)\r\n    );\r\n\r\n    await axios({\r\n      url: `https://minit-server-app.herokuapp.com/tasktype/${id}`,\r\n      method: \"DELETE\"\r\n    })\r\n      .then(res => {\r\n        if (this.Unmount) return;\r\n        this.getTasktype();\r\n        this.setState({ ...this.resetState });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  getPosts = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/posts\"\r\n    }).then(res => this.setState({ getPosts: [...res.data] }));\r\n  };\r\n\r\n  /* ----------------------------- handle Methods ----------------------------- */\r\n\r\n  handleInputs = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleCheckbox = e => {\r\n    const { name } = e.target;\r\n    this.setState({ [name]: !this.state[name] });\r\n  };\r\n  handleEditModal = async () => {\r\n    const openEditModal = !this.state.openEditModal;\r\n    if (!openEditModal) {\r\n      this.setState({ ...this.resetState });\r\n    }\r\n    await this.setState({ openEditModal });\r\n  };\r\n\r\n  handleEditTask = item => {\r\n    const { activityName, pay, id: activityId } = item;\r\n    this.setState({ activityName, pay, activityId });\r\n  };\r\n\r\n  handleEditTaskSubmit = async () => {\r\n    const { activityId } = this.state;\r\n\r\n    const getPosts = [...this.state.getPosts];\r\n    const newGP = getPosts.filter(item => item.activityId === activityId);\r\n\r\n    await axios({\r\n      url: `https://minit-server-app.herokuapp.com/tasktype/${activityId}`,\r\n      method: \"DELETE\"\r\n    })\r\n      .then(async res => {\r\n        if ((await newGP.length) > 0) {\r\n          await newGP.forEach(async value => {\r\n            await this.handleDeletePostsAndCreateANewOne(value, \"edit\");\r\n          });\r\n        }\r\n        await this.postTasktype();\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    await this.setState({ ...this.resetState });\r\n  };\r\n\r\n  handleDeletePostsAndCreateANewOne = async (item, mode) => {\r\n    const {\r\n      description,\r\n      projectIndex,\r\n      projectName,\r\n      projectId,\r\n      color,\r\n      tagName,\r\n      time,\r\n      date,\r\n      id\r\n    } = item;\r\n\r\n    if (mode === \"delete\") {\r\n      const activityName = \"\";\r\n      const activityId = null;\r\n\r\n      this.setState({ activityName, activityId });\r\n    }\r\n\r\n    const { activityName, activityId } = this.state;\r\n\r\n    await axios({\r\n      url: `https://minit-server-app.herokuapp.com/posts/${item.id}`,\r\n      method: \"DELETE\"\r\n    }).then(res => {\r\n      axios({\r\n        url: \"https://minit-server-app.herokuapp.com/posts\",\r\n        method: \"POST\",\r\n        data: {\r\n          description,\r\n          projectId,\r\n          projectName,\r\n          projectIndex,\r\n          color,\r\n          activityName,\r\n          activityId,\r\n          tagName,\r\n          time,\r\n          date,\r\n          id\r\n        }\r\n      })\r\n        .then(res => {\r\n          return;\r\n        })\r\n        .catch(err => console.log(err));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"tasktype-parent h-100 px-3\">\r\n        <div className=\"tasktype-header\">نوع فعالیت</div>\r\n\r\n        <div className=\"tasktype-body container\">\r\n          <div className=\"row justify-content-center align-items-center py-3\">\r\n            <div className=\"col-12 col-md-8 col-lg-7 col-xl-5\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <input\r\n                  name=\"activityName\"\r\n                  value={\r\n                    !this.state.openEditModal ? this.state.activityName : \"\"\r\n                  }\r\n                  onChange={this.handleInputs}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"نام\"\r\n                />\r\n                <button\r\n                  className=\"btn btn-success mr-3\"\r\n                  onClick={\r\n                    this.state.activityName.length > 0\r\n                      ? this.postTasktype\r\n                      : null\r\n                  }\r\n                >\r\n                  ایجاد\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"d-flex align-items-center\">\r\n                <input\r\n                  name=\"pay\"\r\n                  onChange={this.handleCheckbox}\r\n                  type=\"checkbox\"\r\n                  checked={!this.state.openEditModal && this.state.pay}\r\n                />\r\n                <span className=\"mr-1\">پولی</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {this.state.getTasktype.length > 0 && (\r\n            <div className=\"py-3\">\r\n              {this.state.getTasktype.map(item => (\r\n                <span\r\n                  key={item.id}\r\n                  className=\"badge badge-secondary ml-2 fs-14 font-weight-normal mb-2\"\r\n                >\r\n                  {item.activityName}\r\n\r\n                  <i\r\n                    className=\"fas fs-14 fa-pencil-alt mr-1\"\r\n                    onClick={() => {\r\n                      this.handleEditModal();\r\n                      this.handleEditTask(item);\r\n                    }}\r\n                  ></i>\r\n\r\n                  <i\r\n                    className=\"fas fs-14 fa-times mr-1\"\r\n                    onClick={() => {\r\n                      this.deleteTasktype(item.id, \"delete\");\r\n                    }}\r\n                  ></i>\r\n                </span>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <Modal\r\n          isOpen={this.state.openEditModal}\r\n          toggle={this.handleEditModal}\r\n          className=\"create-modal\"\r\n        >\r\n          <ModalBody>\r\n            <div className=\"container\">\r\n              <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-sm-10 col-md-8\">\r\n                  <div className=\"mb-3\">\r\n                    <input\r\n                      name=\"activityName\"\r\n                      type=\"text\"\r\n                      className=\"form-control w-100\"\r\n                      placeholder=\"نام\"\r\n                      value={this.state.activityName}\r\n                      onChange={this.handleInputs}\r\n                    />\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center\">\r\n                    <input\r\n                      name=\"pay\"\r\n                      onChange={this.handleCheckbox}\r\n                      type=\"checkbox\"\r\n                      checked={this.state.pay}\r\n                    />\r\n                    <span className=\"mr-1\">پولی</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <div>\r\n              <button\r\n                className=\"btn btn-padding-orginal btn-secondary\"\r\n                onClick={() => this.setState({ ...this.resetState })}\r\n              >\r\n                انصراف\r\n              </button>\r\n              <button\r\n                onClick={this.handleEditTaskSubmit}\r\n                className=\"btn btn-padding-orginal btn-primary mr-2\"\r\n              >\r\n                ثبت تغییرات\r\n              </button>\r\n            </div>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TaskType;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Modal, ModalBody, ModalFooter } from \"reactstrap\";\r\n\r\nclass Client extends Component {\r\n  /* ------------------------------- properties ------------------------------- */\r\n\r\n  state = {\r\n    getProjects: [],\r\n    getClient: [],\r\n    clientName: \"\",\r\n    clientId: null,\r\n    openEditModal: false\r\n  };\r\n\r\n  resetState = {\r\n    clientName: \"\",\r\n    clientId: null,\r\n    openEditModal: false\r\n  };\r\n\r\n  Unmount = false;\r\n\r\n  /* ----------------------------- lifecycle hooks ---------------------------- */\r\n\r\n  componentDidMount = () => {\r\n    this.getClient();\r\n    this.getProjects();\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.Unmount = true;\r\n  };\r\n\r\n  /* ------------------------------ axios method ------------------------------ */\r\n  postClient = () => {\r\n    const { clientName, pay, clientId } = this.state;\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/client\",\r\n      method: \"POST\",\r\n      data: {\r\n        clientName,\r\n        pay,\r\n        id: clientId !== null ? clientId : null\r\n      }\r\n    })\r\n      .then(async res => {\r\n        if (this.Unmount) return;\r\n        await this.getClient();\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  getClient = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/client\"\r\n    })\r\n      .then(res => {\r\n        if (this.Unmount) return;\r\n        if (!this.state.openEditModal) {\r\n          this.setState({\r\n            getClient: [...res.data],\r\n            ...this.resetState\r\n          });\r\n        } else {\r\n          this.setState({\r\n            getClient: [...res.data]\r\n          });\r\n        }\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  deleteClient = async (id, mode) => {\r\n    const getProjects = [...this.state.getProjects];\r\n    const newGP = getProjects.filter(item => item.clientId === id);\r\n\r\n    newGP.forEach(\r\n      async item => await this.handleDeletePostsAndCreateANewOne(item, mode)\r\n    );\r\n\r\n    await axios({\r\n      url: `https://minit-server-app.herokuapp.com/client/${id}`,\r\n      method: \"DELETE\"\r\n    })\r\n      .then(res => {\r\n        if (this.Unmount) return;\r\n        this.getClient();\r\n        this.setState({ ...this.resetState });\r\n      })\r\n      .catch(err => console.log(err));\r\n  };\r\n\r\n  getProjects = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/projects\"\r\n    }).then(res => this.setState({ getProjects: [...res.data] }));\r\n  };\r\n\r\n  /* ----------------------------- handle Methods ----------------------------- */\r\n\r\n  handleInputs = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleEditModal = async () => {\r\n    const openEditModal = !this.state.openEditModal;\r\n    if (!openEditModal) {\r\n      this.setState({ ...this.resetState });\r\n    }\r\n    await this.setState({ openEditModal });\r\n  };\r\n\r\n  handleEditTask = item => {\r\n    const { clientName, id: clientId } = item;\r\n    this.setState({ clientName, clientId });\r\n  };\r\n\r\n  handleEditTaskSubmit = async () => {\r\n    const { clientId } = this.state;\r\n\r\n    const getProjects = [...this.state.getProjects];\r\n    const newGP = getProjects.filter(item => item.clientId === clientId);\r\n\r\n    await axios({\r\n      url: `https://minit-server-app.herokuapp.com/client/${clientId}`,\r\n      method: \"DELETE\"\r\n    })\r\n      .then(async res => {\r\n        if ((await newGP.length) > 0) {\r\n          await newGP.forEach(async value => {\r\n            await this.handleDeletePostsAndCreateANewOne(value, \"edit\");\r\n          });\r\n        }\r\n        await this.postClient();\r\n      })\r\n      .catch(err => console.log(err));\r\n\r\n    await this.setState({ ...this.resetState });\r\n  };\r\n\r\n  handleDeletePostsAndCreateANewOne = async (item, mode) => {\r\n    const { name, color, budget, projectAccess, id } = item;\r\n\r\n    if (mode === \"delete\") {\r\n      const clientName = \"\";\r\n      const clientId = null;\r\n\r\n      this.setState({ clientName, clientId });\r\n    }\r\n\r\n    const { clientName, clientId } = this.state;\r\n\r\n    await axios({\r\n      url: `https://minit-server-app.herokuapp.com/projects/${item.id}`,\r\n      method: \"DELETE\"\r\n    }).then(res => {\r\n      axios({\r\n        url: \"https://minit-server-app.herokuapp.com/projects\",\r\n        method: \"POST\",\r\n        data: {\r\n          name,\r\n          color,\r\n          budget,\r\n          projectAccess,\r\n          clientName,\r\n          clientId,\r\n          id\r\n        }\r\n      })\r\n        .then(res => {\r\n          return;\r\n        })\r\n        .catch(err => console.log(err));\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"client-parent h-100 px-3\">\r\n        <div className=\"client-header\">مشتری</div>\r\n\r\n        <div className=\"client-body container\">\r\n          <div className=\"row justify-content-center align-items-center py-3\">\r\n            <div className=\"col-12 col-md-8 col-lg-7 col-xl-5\">\r\n              <div className=\"d-flex align-items-center\">\r\n                <input\r\n                  name=\"clientName\"\r\n                  value={!this.state.openEditModal ? this.state.clientName : \"\"}\r\n                  onChange={this.handleInputs}\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"نام\"\r\n                />\r\n                <button\r\n                  className=\"btn btn-success mr-3\"\r\n                  onClick={\r\n                    this.state.clientName.length > 0 ? this.postClient : null\r\n                  }\r\n                >\r\n                  ایجاد\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {this.state.getClient.length > 0 && (\r\n            <div className=\"py-3\">\r\n              {this.state.getClient.map(item => (\r\n                <span\r\n                  key={item.id}\r\n                  className=\"badge badge-secondary ml-2 fs-14 font-weight-normal mb-2\"\r\n                >\r\n                  {item.clientName}\r\n\r\n                  <i\r\n                    className=\"fas fs-14 fa-pencil-alt mr-1\"\r\n                    onClick={() => {\r\n                      this.handleEditModal();\r\n                      this.handleEditTask(item);\r\n                    }}\r\n                  ></i>\r\n\r\n                  <i\r\n                    className=\"fas fs-14 fa-times mr-1\"\r\n                    onClick={() => {\r\n                      this.deleteClient(item.id, \"delete\");\r\n                    }}\r\n                  ></i>\r\n                </span>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <Modal\r\n          isOpen={this.state.openEditModal}\r\n          toggle={this.handleEditModal}\r\n          className=\"create-modal\"\r\n        >\r\n          <ModalBody>\r\n            <div className=\"container\">\r\n              <div className=\"row justify-content-center\">\r\n                <div className=\"col-12 col-sm-10 col-md-8\">\r\n                  <div className=\"mb-3\">\r\n                    <input\r\n                      name=\"clientName\"\r\n                      type=\"text\"\r\n                      className=\"form-control w-100\"\r\n                      placeholder=\"نام\"\r\n                      value={this.state.clientName}\r\n                      onChange={this.handleInputs}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </ModalBody>\r\n          <ModalFooter>\r\n            <div>\r\n              <button\r\n                className=\"btn btn-padding-orginal btn-secondary\"\r\n                onClick={() => this.setState({ ...this.resetState })}\r\n              >\r\n                انصراف\r\n              </button>\r\n              <button\r\n                onClick={this.handleEditTaskSubmit}\r\n                className=\"btn btn-padding-orginal btn-primary mr-2\"\r\n              >\r\n                ثبت تغییرات\r\n              </button>\r\n            </div>\r\n          </ModalFooter>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Client;\r\n","// FIXME Search box didn't develop\r\nimport React, { Component } from \"react\";\r\nimport { Bar, Doughnut } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment-jalaali\";\r\nimport _ from \"lodash\";\r\n\r\nclass Dashboard extends Component {\r\n  /* ------------------------------- properties ------------------------------- */\r\n  state = {\r\n    startSearchDate: this.getNewDate().toLocaleDateString(\"fa-IR\", {\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      year: \"2-digit\"\r\n    }),\r\n    endSearchDate: this.getNewDate().toLocaleDateString(\"fa-IR\", {\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      year: \"2-digit\"\r\n    }),\r\n    panelHeaderMode: \"daily\",\r\n    getPosts: [],\r\n    dateForPanelTimeDashboardChartForWhile: [],\r\n    daysInMonth: [],\r\n    dailyChartColor: [],\r\n    monthlyChartColor: [],\r\n    projectsTimeChartColor: [],\r\n    activityTimeChartColor: [],\r\n    totalSum: 0,\r\n    weeksInMonth: [],\r\n    dateForPanelTimeDashboardWeekChart: [],\r\n    monthsInYear: [],\r\n    dateForPanelTimeDashboardMonthChart: [],\r\n    titleText: \"ساعات کاری روزانه\",\r\n    projectsLabels: [],\r\n    projectsCount: [],\r\n    userPostsTimeSum: 0,\r\n    activityLabels: [],\r\n    activityCount: []\r\n  };\r\n\r\n  Unmount = false;\r\n\r\n  /* ---------------------------- lifecycle methods --------------------------- */\r\n\r\n  componentDidMount = () => {\r\n    this.getPosts();\r\n\r\n    this.handleDate();\r\n\r\n    this.handleWeekDate();\r\n\r\n    this.handleMonthDate();\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.Unmount = true;\r\n  };\r\n\r\n  /* ----------------------------- handle methods ----------------------------- */\r\n\r\n  handleInputs = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handlePanelHeaderItemSelect = name => {\r\n    this.setState({ panelHeaderMode: name });\r\n  };\r\n\r\n  handleDate = () => {\r\n    const daysInMonth = [];\r\n    // NOTE set arg in the moment for search box\r\n    const monthDate = moment()\r\n      .locale(\"en\")\r\n      .startOf(\"jMonth\");\r\n\r\n    _.times(monthDate.daysInMonth(), () => {\r\n      daysInMonth.push(monthDate.format(\"jYYYY/jMM/jDD\"));\r\n      monthDate.add(1, \"day\");\r\n    });\r\n\r\n    this.setState({ daysInMonth });\r\n  };\r\n\r\n  handleWeekDate = () => {\r\n    const weeksInMonth = [];\r\n\r\n    // NOTE set arg in the moment for search box\r\n    let start = moment()\r\n      .locale(\"en\")\r\n      .startOf(\"jMonth\")\r\n      .format(\"jDD\");\r\n\r\n    let end = moment()\r\n      .locale(\"en\")\r\n      .endOf(\"jMonth\")\r\n      .format(\"jDD\");\r\n\r\n    let weeks = (end - start + 1) / 7;\r\n\r\n    weeks = Math.ceil(weeks);\r\n\r\n    const monthDate = moment()\r\n      .locale(\"en\")\r\n      .startOf(\"jMonth\");\r\n\r\n    _.times(weeks, () => {\r\n      weeksInMonth.push(monthDate.format(\"jYYYY/jMM/jDD\"));\r\n      monthDate.add(1, \"week\");\r\n    });\r\n\r\n    const weeksInMonthLentgh = weeksInMonth.length;\r\n\r\n    // FIXME trim and clean code here\r\n    weeksInMonth.forEach((value, index) => {\r\n      let startWeek = moment()\r\n        .locale(\"en\")\r\n        .startOf(\"jMonth\")\r\n        .format(\"jYYYY/jMM/jDD\");\r\n\r\n      let endWeek = moment()\r\n        .locale(\"en\")\r\n        .endOf(\"jMonth\")\r\n        .format(\"jYYYY/jMM/jDD\");\r\n\r\n      const newVal = value.split(\"/\");\r\n      if (newVal[2] >= start && index === 0) {\r\n        weeksInMonth[index] = `${startWeek}-${value}`;\r\n      } else {\r\n        const seprateArr = weeksInMonth[index - 1].split(\"-\");\r\n        const beforedays = seprateArr[1].split(\"/\");\r\n        beforedays[2] = Number(beforedays[2]) + 1;\r\n        if (beforedays[2] < 10) {\r\n          beforedays[2] = `0${beforedays[2]}`;\r\n        }\r\n        const joinTogether = beforedays.join(\"/\");\r\n        weeksInMonth[index] = `${joinTogether}-${value}`;\r\n      }\r\n\r\n      if (newVal[2] <= end && index === weeksInMonthLentgh - 1) {\r\n        const seprateArr = weeksInMonth[index].split(\"-\");\r\n        const beforedays = seprateArr[1].split(\"/\");\r\n        beforedays[2] = Number(beforedays[2]) + 1;\r\n        const joinTogether = beforedays.join(\"/\");\r\n        weeksInMonth[weeksInMonthLentgh] = `${joinTogether}-${endWeek}`;\r\n      }\r\n    });\r\n\r\n    this.setState({ weeksInMonth });\r\n  };\r\n\r\n  handleMonthDate = () => {\r\n    // NOTE set arg in the moment for search box\r\n    const monthsInYear = [];\r\n\r\n    const monthDate = moment()\r\n      .locale(\"en\")\r\n      .startOf(\"jYear\");\r\n\r\n    _.times(12, () => {\r\n      monthsInYear.push(monthDate.format(\"jYYYY/jMM\"));\r\n      monthDate.add(1, \"jMonth\");\r\n    });\r\n\r\n    this.setState({ monthsInYear });\r\n  };\r\n\r\n  handleTotalSum = () => {\r\n    const data = [];\r\n    if (this.state.panelHeaderMode === \"daily\") {\r\n      data.push(...this.state.dateForPanelTimeDashboardChartForWhile);\r\n    } else if (this.state.panelHeaderMode === \"weekly\") {\r\n      data.push(...this.state.dateForPanelTimeDashboardWeekChart);\r\n    } else {\r\n      data.push(...this.state.dateForPanelTimeDashboardMonthChart);\r\n    }\r\n\r\n    const totalSum = _.sumBy(data, \"y\");\r\n\r\n    return totalSum;\r\n  };\r\n\r\n  /* ------------------------------ axios methods ----------------------------- */\r\n\r\n  getPosts = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/posts\"\r\n    }).then(res => {\r\n      if (this.Unmount) return;\r\n      this.setState({ getPosts: res.data });\r\n      this.projectsFilterDateAndSum();\r\n      this.activityFilterDateAndSum();\r\n      this.filterSameDatePostsAndSum();\r\n      this.userPostsTimeSum();\r\n      this.monthlyFilterDateAndSum();\r\n    });\r\n  };\r\n\r\n  /* ------------------------------ chart options ----------------------------- */\r\n  mainChartOptions = () => {\r\n    return {\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            ticks: {\r\n              stepSize: 2000,\r\n              beginAtZero: true,\r\n              callback: (label, index, labels) => {\r\n                return this.formatTime(label);\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      },\r\n      tooltips: {\r\n        displayColors: false,\r\n        callbacks: {\r\n          title: (tooltipItem, data) => {\r\n            return data[\"datasets\"][0][\"data\"][tooltipItem[0][\"index\"]][\"x\"];\r\n          },\r\n          label: (tooltipItem, data) => {\r\n            return this.formatTime(tooltipItem.yLabel);\r\n          }\r\n        }\r\n      },\r\n      layout: {\r\n        padding: {\r\n          left: 15,\r\n          right: 15,\r\n          bottom: 15\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: this.state.titleText,\r\n        fontFamily: \"iranSans\",\r\n        fontSize: 16,\r\n        padding: 15\r\n      }\r\n    };\r\n  };\r\n\r\n  miniChartOptions = titleText => {\r\n    return {\r\n      tooltips: {\r\n        displayColors: false,\r\n        callbacks: {\r\n          title: (tooltipItem, data) => {\r\n            return data[\"labels\"][tooltipItem[0][\"index\"]];\r\n          },\r\n          label: (tooltipItem, data) => {\r\n            return this.formatTime(\r\n              data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]]\r\n            );\r\n          },\r\n          footer: (tooltipItem, data) => {\r\n            const dataset = data[\"datasets\"][0];\r\n\r\n            const total = dataset[\"data\"].reduce(\r\n              (previousValue, currentValue, currentIndex, array) => {\r\n                return previousValue + currentValue;\r\n              }\r\n            );\r\n\r\n            const currentValue = dataset[\"data\"][tooltipItem[0][\"index\"]];\r\n\r\n            const percentage = Math.floor((currentValue / total) * 100 + 0.5);\r\n\r\n            return percentage + \"%\";\r\n          }\r\n        }\r\n      },\r\n      layout: {\r\n        padding: {\r\n          left: 15,\r\n          right: 15,\r\n          bottom: 15\r\n        }\r\n      },\r\n      title: {\r\n        display: true,\r\n        text: titleText,\r\n        fontFamily: \"iranSans\",\r\n        fontSize: 16,\r\n        padding: 15\r\n      }\r\n    };\r\n  };\r\n  /* ------------------------------ other methods ----------------------------- */\r\n\r\n  getNewDate() {\r\n    const d = new Date();\r\n    return d;\r\n  }\r\n\r\n  filterSameDatePostsAndSum = () => {\r\n    const posts = [...this.state.getPosts];\r\n    const dateArr = [];\r\n    for (let i in posts) {\r\n      dateArr.push(posts[i].date);\r\n    }\r\n\r\n    const uniqueDate = new Set(dateArr);\r\n\r\n    const newDateArr = [...uniqueDate];\r\n\r\n    const dataObjectForDashboardChart = {};\r\n\r\n    for (let i in newDateArr) {\r\n      dataObjectForDashboardChart[newDateArr[i]] = 0;\r\n    }\r\n\r\n    posts.filter(item => {\r\n      return newDateArr.filter(value =>\r\n        item.date === value\r\n          ? (dataObjectForDashboardChart[item.date] += item.time.count)\r\n          : null\r\n      );\r\n    });\r\n\r\n    const dateForPanelTimeDashboardChart = [];\r\n    for (let i in dataObjectForDashboardChart) {\r\n      const trasferDataObjectToAxis = {\r\n        x: i,\r\n        y: dataObjectForDashboardChart[i]\r\n      };\r\n      dateForPanelTimeDashboardChart.push(trasferDataObjectToAxis);\r\n    }\r\n\r\n    const daysInMonth = [...this.state.daysInMonth];\r\n    const dateForPanelTimeDashboardChartForWhile = [];\r\n    daysInMonth.filter(item => {\r\n      return dateForPanelTimeDashboardChart.filter(value =>\r\n        item === value.x\r\n          ? dateForPanelTimeDashboardChartForWhile.push(value)\r\n          : null\r\n      );\r\n    });\r\n\r\n    this.setState({ dateForPanelTimeDashboardChartForWhile });\r\n\r\n    this.generateBgColorForChart(\"dailyChartColor\");\r\n  };\r\n\r\n  weeklyFilterDateAndSum = () => {\r\n    const posts = [...this.state.getPosts];\r\n    const weeksDateArr = [...this.state.weeksInMonth];\r\n    const dateArr = [];\r\n    for (let i in posts) {\r\n      dateArr.push(posts[i].date);\r\n    }\r\n\r\n    const dataObjectForDashboardChart = {};\r\n\r\n    for (let i in weeksDateArr) {\r\n      dataObjectForDashboardChart[weeksDateArr[i]] = 0;\r\n    }\r\n\r\n    weeksDateArr.filter(item => {\r\n      const newItem = item;\r\n      const itemSeprate = newItem.split(\"-\");\r\n      const itemStart = itemSeprate[0];\r\n      const itemEnd = itemSeprate[1];\r\n      const itemStartSeprate = itemStart.split(\"/\");\r\n      const itemEndSeprate = itemEnd.split(\"/\");\r\n\r\n      const itemYear = itemStartSeprate[0];\r\n      const itemMonth = itemStartSeprate[1];\r\n\r\n      const itemStartDay = itemStartSeprate[2];\r\n      const itemEndDay = itemEndSeprate[2];\r\n\r\n      return posts.filter(value => {\r\n        const newValue = value.date;\r\n\r\n        const valueSeprate = newValue.split(\"/\");\r\n\r\n        const valueYear = valueSeprate[0];\r\n        const valueMonth = valueSeprate[1];\r\n        const valueDay = valueSeprate[2];\r\n\r\n        if (\r\n          valueDay <= itemEndDay &&\r\n          valueDay >= itemStartDay &&\r\n          valueMonth === itemMonth &&\r\n          valueYear === itemYear\r\n        ) {\r\n          dataObjectForDashboardChart[item] += value.time.count;\r\n        }\r\n\r\n        return 1;\r\n      });\r\n    });\r\n\r\n    const dateForPanelTimeDashboardWeekChart = [];\r\n    for (let i in dataObjectForDashboardChart) {\r\n      const trasferDataObjectToAxis = {\r\n        x: i,\r\n        y: dataObjectForDashboardChart[i]\r\n      };\r\n      dateForPanelTimeDashboardWeekChart.push(trasferDataObjectToAxis);\r\n    }\r\n\r\n    this.setState({ dateForPanelTimeDashboardWeekChart });\r\n  };\r\n\r\n  monthlyFilterDateAndSum = () => {\r\n    const posts = [...this.state.getPosts];\r\n    const monthsDateArr = [...this.state.monthsInYear];\r\n    const dateArr = [];\r\n    for (let i in posts) {\r\n      dateArr.push(posts[i].date);\r\n    }\r\n\r\n    const dataObjectForDashboardChart = {};\r\n\r\n    for (let i in monthsDateArr) {\r\n      dataObjectForDashboardChart[monthsDateArr[i]] = 0;\r\n    }\r\n\r\n    monthsDateArr.filter(item => {\r\n      const newItem = item;\r\n      const itemSeprate = newItem.split(\"/\");\r\n      const itemYear = itemSeprate[0];\r\n      const itemMonth = itemSeprate[1];\r\n\r\n      return posts.filter(value => {\r\n        const newValue = value.date;\r\n\r\n        const valueSeprate = newValue.split(\"/\");\r\n\r\n        const valueYear = valueSeprate[0];\r\n        const valueMonth = valueSeprate[1];\r\n\r\n        if (valueMonth === itemMonth && valueYear === itemYear) {\r\n          dataObjectForDashboardChart[item] += value.time.count;\r\n        }\r\n\r\n        return 1;\r\n      });\r\n    });\r\n\r\n    const dateForPanelTimeDashboardMonthChart = [];\r\n    for (let i in dataObjectForDashboardChart) {\r\n      const trasferDataObjectToAxis = {\r\n        x: i,\r\n        y: dataObjectForDashboardChart[i]\r\n      };\r\n      dateForPanelTimeDashboardMonthChart.push(trasferDataObjectToAxis);\r\n    }\r\n\r\n    this.setState({ dateForPanelTimeDashboardMonthChart });\r\n\r\n    this.generateBgColorForChart(\"monthlyChartColor\");\r\n  };\r\n\r\n  projectsFilterDateAndSum = () => {\r\n    const posts = [...this.state.getPosts];\r\n    const projectsArr = [];\r\n    for (let i in posts) {\r\n      projectsArr.push(posts[i].projectName);\r\n    }\r\n\r\n    const uniqueDate = new Set(projectsArr);\r\n\r\n    const newProjectsArr = [...uniqueDate];\r\n\r\n    const dataObjectForDashboardChart = {};\r\n\r\n    for (let i in newProjectsArr) {\r\n      dataObjectForDashboardChart[newProjectsArr[i]] = 0;\r\n    }\r\n\r\n    posts.filter(item => {\r\n      return newProjectsArr.filter(value =>\r\n        item.projectName === value\r\n          ? (dataObjectForDashboardChart[item.projectName] += item.time.count)\r\n          : null\r\n      );\r\n    });\r\n\r\n    const projectsLabels = [];\r\n    const projectsCount = [];\r\n    for (let i in dataObjectForDashboardChart) {\r\n      projectsLabels.push(i);\r\n      projectsCount.push(dataObjectForDashboardChart[i]);\r\n    }\r\n\r\n    this.setState({ projectsLabels, projectsCount });\r\n\r\n    this.generateBgColorForChart(\"projectsTimeChartColor\");\r\n  };\r\n\r\n  activityFilterDateAndSum = () => {\r\n    const posts = [...this.state.getPosts];\r\n    const activityArr = [];\r\n    for (let i in posts) {\r\n      activityArr.push(posts[i].activityName);\r\n    }\r\n\r\n    const uniqueDate = new Set(activityArr);\r\n\r\n    const newActivityArr = [...uniqueDate];\r\n\r\n    const dataObjectForDashboardChart = {};\r\n\r\n    for (let i in newActivityArr) {\r\n      if (newActivityArr[i] === \"\") {\r\n        dataObjectForDashboardChart[\"بدون نوع فعالیت\"] = 0;\r\n      } else {\r\n        dataObjectForDashboardChart[newActivityArr[i]] = 0;\r\n      }\r\n    }\r\n\r\n    posts.filter(item => {\r\n      return newActivityArr.filter(value =>\r\n        item.activityName === value\r\n          ? item.activityName === \"\"\r\n            ? (dataObjectForDashboardChart[\"بدون نوع فعالیت\"] +=\r\n                item.time.count)\r\n            : (dataObjectForDashboardChart[item.activityName] +=\r\n                item.time.count)\r\n          : null\r\n      );\r\n    });\r\n\r\n    const activityLabels = [];\r\n    const activityCount = [];\r\n    for (let i in dataObjectForDashboardChart) {\r\n      activityLabels.push(i);\r\n      activityCount.push(dataObjectForDashboardChart[i]);\r\n    }\r\n\r\n    this.setState({ activityLabels, activityCount });\r\n\r\n    this.generateBgColorForChart(\"activityTimeChartColor\");\r\n  };\r\n\r\n  userPostsTimeSum = () => {\r\n    const posts = [...this.state.getPosts];\r\n\r\n    const userPostsTimeSum = _.sumBy(posts, item => item.time.count);\r\n\r\n    this.setState({ userPostsTimeSum });\r\n  };\r\n\r\n  formatTime = secs => {\r\n    var hours = Math.floor(secs / 3600);\r\n    var divisor_for_minutes = secs % 3600;\r\n    var minutes = Math.floor(divisor_for_minutes / 60);\r\n    var seconds = divisor_for_minutes % 60;\r\n\r\n    return `${hours < 10 ? \"0\" + hours : hours}:${\r\n      minutes < 10 ? \"0\" + minutes : minutes\r\n    }:${seconds < 10 ? \"0\" + seconds : seconds}`;\r\n  };\r\n\r\n  randomColor = () => {\r\n    const r = Math.floor(Math.random() * 255);\r\n    const g = Math.floor(Math.random() * 255);\r\n    const b = Math.floor(Math.random() * 255);\r\n    return `rgb(${r},${g},${b})`;\r\n  };\r\n\r\n  generateBgColorForChart = name => {\r\n    const chartName = name;\r\n    const data = [];\r\n    if (name === \"dailyChartColor\") {\r\n      data.push(...this.state.dateForPanelTimeDashboardChartForWhile);\r\n    } else if (name === \"monthlyChartColor\") {\r\n      data.push(...this.state.dateForPanelTimeDashboardMonthChart);\r\n    } else if (name === \"projectsTimeChartColor\") {\r\n      data.push(...this.state.projectsLabels);\r\n    } else if (name === \"activityTimeChartColor\") {\r\n      data.push(...this.state.activityLabels);\r\n    }\r\n\r\n    const randomColor = [];\r\n    for (let i = 0; i < data.length; i++) {\r\n      const color = this.randomColor();\r\n\r\n      randomColor.push(color);\r\n    }\r\n\r\n    while (name === \"monthly\" && randomColor.length < 12) {\r\n      const color = this.randomColor();\r\n\r\n      randomColor.push(color);\r\n    }\r\n\r\n    this.setState({ [chartName]: randomColor });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"dashboard-parent h-100 px-3\">\r\n          <div className=\"dashboard-header\">داشبورد</div>\r\n\r\n          <div className=\"dashboard-search bg-white mb-3 p-3 d-flex flex-column flex-md-row justify-content-md-between align-items-center\">\r\n            <div className=\"d-flex flex-column flex-sm-row justify-content-start align-items-center flex-wrap flex-md-nowrap\">\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 dashboard-search-items\">\r\n                <span className=\"ml-1 fs-13\">از</span>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"startSearchDate\"\r\n                  value={this.state.startSearchDate}\r\n                  onChange={this.handleInputs}\r\n                  className=\"form-control iranSansNum dashboard-date-input\"\r\n                />\r\n                <span className=\"mx-1 fs-13\">تا</span>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"endSearchDate\"\r\n                  value={this.state.endSearchDate}\r\n                  onChange={this.handleInputs}\r\n                  className=\"form-control iranSansNum dashboard-date-input\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 dashboard-search-items\">\r\n                <div className=\"pointer\">\r\n                  <span className=\"fs-13 ml-2\">همه پروژه ها</span>\r\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 dashboard-search-items\">\r\n                <div className=\"pointer\">\r\n                  <span className=\"fs-13 ml-2\">همه فعالیت ها</span>\r\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 dashboard-search-items\">\r\n                <div className=\"pointer\">\r\n                  <span className=\"fs-13 ml-2\">همه کاربر ها</span>\r\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mt-md-0\">\r\n              <button className=\"btn btn-secondary\">\r\n                <i className=\"fas fa-search\"></i>\r\n              </button>\r\n              <button className=\"btn btn-secondary mr-2\">\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"pb-3 pt-4 d-flex align-items-center container\">\r\n            <div className=\"row w-100\">\r\n              <div className=\"col-12 col-sm-6 col-md-3 d-flex justify-content-center align-items-center\">\r\n                <span className=\"label-sum\">مجموع</span>\r\n                <span className=\"total-sum iranSansNum\">\r\n                  {this.formatTime(this.handleTotalSum())}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"panel bg-white mb-5 mt-4 mx-auto\">\r\n            <div className=\"d-flex justify-content-start align-items-center\">\r\n              <span\r\n                className={\r\n                  this.state.panelHeaderMode === \"daily\"\r\n                    ? \"panel-header-item panel-header-item-select\"\r\n                    : \"panel-header-item\"\r\n                }\r\n                onClick={() => {\r\n                  this.handlePanelHeaderItemSelect(\"daily\");\r\n                  this.setState({ titleText: \"ساعات کاری روزانه\" });\r\n                }}\r\n              >\r\n                روزانه\r\n              </span>\r\n              <span\r\n                className={\r\n                  this.state.panelHeaderMode === \"weekly\"\r\n                    ? \"panel-header-item panel-header-item-select\"\r\n                    : \"panel-header-item\"\r\n                }\r\n                onClick={() => {\r\n                  this.handlePanelHeaderItemSelect(\"weekly\");\r\n                  this.setState({ titleText: \"ساعات کاری هفتگی\" });\r\n                  this.weeklyFilterDateAndSum();\r\n                }}\r\n              >\r\n                هفتگی\r\n              </span>\r\n              <span\r\n                className={\r\n                  this.state.panelHeaderMode === \"monthly\"\r\n                    ? \"panel-header-item panel-header-item-select\"\r\n                    : \"panel-header-item\"\r\n                }\r\n                onClick={() => {\r\n                  this.handlePanelHeaderItemSelect(\"monthly\");\r\n                  this.setState({ titleText: \"ساعات کاری ماهانه\" });\r\n                  this.monthlyFilterDateAndSum();\r\n                }}\r\n              >\r\n                ماهانه\r\n              </span>\r\n            </div>\r\n            <div>\r\n              {this.state.panelHeaderMode === \"daily\" &&\r\n                (this.state.dateForPanelTimeDashboardChartForWhile.length >\r\n                0 ? (\r\n                  <Bar\r\n                    height={\r\n                      window.outerWidth < 576\r\n                        ? Math.floor(window.outerHeight * 0.575)\r\n                        : null\r\n                    }\r\n                    data={{\r\n                      labels: [...this.state.daysInMonth],\r\n                      datasets: [\r\n                        {\r\n                          data: [\r\n                            ...this.state.dateForPanelTimeDashboardChartForWhile\r\n                          ],\r\n                          backgroundColor: [...this.state.dailyChartColor],\r\n                          borderColor: \"#fff\",\r\n                          borderWidth: 2\r\n                        }\r\n                      ]\r\n                    }}\r\n                    options={this.mainChartOptions()}\r\n                    legend={{\r\n                      display: false\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div className=\"notFoundDataForChart\">\r\n                    داده‌ای برای نمایش وجود ندارد\r\n                  </div>\r\n                ))}\r\n\r\n              {this.state.panelHeaderMode === \"weekly\" &&\r\n                (this.state.dateForPanelTimeDashboardWeekChart.length > 0 ? (\r\n                  <Bar\r\n                    height={\r\n                      window.outerWidth < 576\r\n                        ? Math.floor(window.outerHeight * 0.575)\r\n                        : null\r\n                    }\r\n                    data={{\r\n                      labels: [...this.state.weeksInMonth],\r\n                      datasets: [\r\n                        {\r\n                          data: [\r\n                            ...this.state.dateForPanelTimeDashboardWeekChart\r\n                          ],\r\n                          backgroundColor: [\r\n                            \"#D32F2F\",\r\n                            \"#F57C00\",\r\n                            \"#FFA000\",\r\n                            \"#00796B\",\r\n                            \"#1976D2\",\r\n                            \"#21335E\"\r\n                          ],\r\n                          borderColor: \"#fff\",\r\n                          borderWidth: 2\r\n                        }\r\n                      ]\r\n                    }}\r\n                    options={this.mainChartOptions()}\r\n                    legend={{\r\n                      display: false\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div className=\"notFoundDataForChart\">\r\n                    داده‌ای برای نمایش وجود ندارد\r\n                  </div>\r\n                ))}\r\n\r\n              {this.state.panelHeaderMode === \"monthly\" &&\r\n                (this.state.dateForPanelTimeDashboardMonthChart.length > 0 ? (\r\n                  <Bar\r\n                    height={\r\n                      window.outerWidth < 576\r\n                        ? Math.floor(window.outerHeight * 0.575)\r\n                        : null\r\n                    }\r\n                    data={{\r\n                      labels: [...this.state.monthsInYear],\r\n                      datasets: [\r\n                        {\r\n                          data: [\r\n                            ...this.state.dateForPanelTimeDashboardMonthChart\r\n                          ],\r\n                          backgroundColor: [...this.state.monthlyChartColor],\r\n                          borderColor: \"#fff\",\r\n                          borderWidth: 2\r\n                        }\r\n                      ]\r\n                    }}\r\n                    options={this.mainChartOptions()}\r\n                    legend={{\r\n                      display: false\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div className=\"notFoundDataForChart\">\r\n                    داده‌ای برای نمایش وجود ندارد\r\n                  </div>\r\n                ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"d-flex flex-column justify-content-stretch align-items-stretch miniPanel-Body mx-auto mb-5\">\r\n            <div className=\"d-flex flex-column justify-content-stretch align-items-stretch flex-md-row justify-content-between w-100 mb-3\">\r\n              <div className=\"miniPanel mb-3 bg-white w-md-45-i\">\r\n                {this.state.getPosts.length > 0 ? (\r\n                  <Doughnut\r\n                    data={{\r\n                      labels: [...this.state.projectsLabels],\r\n                      datasets: [\r\n                        {\r\n                          data: [...this.state.projectsCount],\r\n                          backgroundColor: [\r\n                            ...this.state.projectsTimeChartColor\r\n                          ],\r\n                          borderColor: \"#fff\",\r\n                          borderWidth: 2\r\n                        }\r\n                      ]\r\n                    }}\r\n                    options={this.miniChartOptions(\"ساعات کاری هر پروژه\")}\r\n                    legend={{\r\n                      display: true,\r\n                      position: \"right\",\r\n                      align: \"start\",\r\n\r\n                      labels: {\r\n                        fontFamily: \"iranSans\"\r\n                      }\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div className=\"miniNotFoundDataForChart px-4\">\r\n                    داده‌ای برای نمایش وجود ندارد\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"miniPanel mb-3 bg-white w-md-45-i\">\r\n                {this.state.getPosts.length > 0 ? (\r\n                  <Doughnut\r\n                    data={{\r\n                      labels: [...this.state.activityLabels],\r\n                      datasets: [\r\n                        {\r\n                          data: [...this.state.activityCount],\r\n                          backgroundColor: [\r\n                            ...this.state.activityTimeChartColor\r\n                          ],\r\n                          borderColor: \"#fff\",\r\n                          borderWidth: 2\r\n                        }\r\n                      ]\r\n                    }}\r\n                    options={this.miniChartOptions(\"ساعات کاری هر فعالیت\")}\r\n                    legend={{\r\n                      display: true,\r\n                      position: \"right\",\r\n                      align: \"start\",\r\n\r\n                      labels: {\r\n                        fontFamily: \"iranSans\"\r\n                      }\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div className=\"miniNotFoundDataForChart px-4\">\r\n                    داده‌ای برای نمایش وجود ندارد\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"d-flex flex-column justify-content-stretch align-items-stretch flex-md-row justify-content-between w-100\">\r\n              <div className=\"miniPanel mb-3 bg-white w-md-45-i\">\r\n                {this.state.getPosts.length > 0 ? (\r\n                  <Doughnut\r\n                    data={{\r\n                      labels: [\"Kaveh.Karami.KK\"],\r\n                      datasets: [\r\n                        {\r\n                          data: [this.state.userPostsTimeSum],\r\n                          backgroundColor: [\"#21335E\"],\r\n                          borderColor: \"#fff\",\r\n                          borderWidth: 2\r\n                        }\r\n                      ]\r\n                    }}\r\n                    options={this.miniChartOptions(\"ساعات کاری هر کاربر\")}\r\n                    legend={{\r\n                      display: true,\r\n                      position: \"right\",\r\n                      align: \"start\",\r\n\r\n                      labels: {\r\n                        fontFamily: \"iranSans\"\r\n                      }\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div className=\"miniNotFoundDataForChart px-4\">\r\n                    داده‌ای برای نمایش وجود ندارد\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"miniPanel mb-3 bg-white w-md-45-i\">\r\n                {/* FIXME because i didnt develope Team component, i havn't got any data to show */}\r\n                <div className=\"miniNotFoundDataForChart px-4\">\r\n                  داده‌ای برای نمایش وجود ندارد\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;\r\n","// FIXME Search box didn't develop\r\n// FIXME group panel didn't develop\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nclass ReportSummary extends Component {\r\n  /* ------------------------------- Properties ------------------------------- */\r\n\r\n  state = {\r\n    startSearchDate: this.getNewDate().toLocaleDateString(\"fa-IR\", {\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      year: \"2-digit\"\r\n    }),\r\n    endSearchDate: this.getNewDate().toLocaleDateString(\"fa-IR\", {\r\n      month: \"2-digit\",\r\n      day: \"2-digit\",\r\n      year: \"2-digit\"\r\n    }),\r\n    getPosts: [],\r\n    userPostsTimeSum: 0,\r\n    extendUserName: false,\r\n    dateForPanelTimeDashboardChart: []\r\n  };\r\n\r\n  /* ---------------------------- lifecycle methods --------------------------- */\r\n\r\n  componentDidMount = () => {\r\n    this.getPosts();\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.Unmount = true;\r\n  };\r\n\r\n  /* ----------------------------- handle Methods ----------------------------- */\r\n\r\n  handleInputs = e => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleExtendUserName = () => {\r\n    const extendUserName = !this.state.extendUserName;\r\n\r\n    this.setState({ extendUserName });\r\n  };\r\n\r\n  /* ------------------------------ chart option ------------------------------ */\r\n  miniChartOptions = () => {\r\n    return {\r\n      tooltips: {\r\n        displayColors: false,\r\n        callbacks: {\r\n          title: (tooltipItem, data) => {\r\n            return data[\"labels\"][tooltipItem[0][\"index\"]];\r\n          },\r\n          label: (tooltipItem, data) => {\r\n            return this.formatTime(\r\n              data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]]\r\n            );\r\n          },\r\n          footer: (tooltipItem, data) => {\r\n            const dataset = data[\"datasets\"][0];\r\n\r\n            const total = dataset[\"data\"].reduce(\r\n              (previousValue, currentValue, currentIndex, array) => {\r\n                return previousValue + currentValue;\r\n              }\r\n            );\r\n\r\n            const currentValue = dataset[\"data\"][tooltipItem[0][\"index\"]];\r\n\r\n            const percentage = Math.floor((currentValue / total) * 100 + 0.5);\r\n\r\n            return percentage + \"%\";\r\n          }\r\n        }\r\n      },\r\n      layout: {\r\n        padding: {\r\n          left: 15,\r\n          right: 15,\r\n          bottom: 15\r\n        }\r\n      },\r\n      title: {\r\n        display: false\r\n      }\r\n    };\r\n  };\r\n\r\n  /* ------------------------------ axios methods ----------------------------- */\r\n\r\n  getPosts = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/posts\"\r\n    }).then(res => {\r\n      if (this.Unmount) return;\r\n      this.setState({ getPosts: res.data });\r\n      this.userPostsTimeSum();\r\n      this.filterSameDatePostsAndSum();\r\n    });\r\n  };\r\n\r\n  /* ------------------------------ Other Methods ----------------------------- */\r\n\r\n  getNewDate() {\r\n    const d = new Date();\r\n    return d;\r\n  }\r\n\r\n  filterSameDatePostsAndSum = () => {\r\n    const posts = [...this.state.getPosts];\r\n    const dateArr = [];\r\n    for (let i in posts) {\r\n      dateArr.push(posts[i].projectName);\r\n    }\r\n\r\n    const uniqueDate = new Set(dateArr);\r\n\r\n    const newDateArr = [...uniqueDate];\r\n\r\n    const dataObjectForDashboardChart = {};\r\n\r\n    for (let i in newDateArr) {\r\n      dataObjectForDashboardChart[newDateArr[i]] = 0;\r\n    }\r\n\r\n    posts.filter(item => {\r\n      return newDateArr.filter(value =>\r\n        item.projectName === value\r\n          ? (dataObjectForDashboardChart[item.projectName] += item.time.count)\r\n          : null\r\n      );\r\n    });\r\n\r\n    const dateForPanelTimeDashboardChart = [];\r\n    for (let i in dataObjectForDashboardChart) {\r\n      const trasferDataObjectToAxis = {\r\n        projectName: i,\r\n        count: dataObjectForDashboardChart[i]\r\n      };\r\n      dateForPanelTimeDashboardChart.push(trasferDataObjectToAxis);\r\n    }\r\n\r\n    this.setState({ dateForPanelTimeDashboardChart });\r\n  };\r\n\r\n  formatTime = secs => {\r\n    var hours = Math.floor(secs / 3600);\r\n    var divisor_for_minutes = secs % 3600;\r\n    var minutes = Math.floor(divisor_for_minutes / 60);\r\n    var seconds = divisor_for_minutes % 60;\r\n\r\n    return `${hours < 10 ? \"0\" + hours : hours}:${\r\n      minutes < 10 ? \"0\" + minutes : minutes\r\n    }:${seconds < 10 ? \"0\" + seconds : seconds}`;\r\n  };\r\n\r\n  userPostsTimeSum = () => {\r\n    const posts = [...this.state.getPosts];\r\n\r\n    const userPostsTimeSum = _.sumBy(posts, item => item.time.count);\r\n\r\n    this.setState({ userPostsTimeSum });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"report-parent h-100 px-3\">\r\n          <div className=\"report-header\">گزارش خلاصه</div>\r\n\r\n          <div className=\"report-search bg-white mb-3 p-3 d-flex flex-column flex-md-row justify-content-md-between align-items-center\">\r\n            <div className=\"d-flex flex-column flex-sm-row justify-content-start align-items-center flex-wrap flex-md-nowrap\">\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 report-search-items\">\r\n                <span className=\"ml-1 fs-13\">از</span>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"startSearchDate\"\r\n                  value={this.state.startSearchDate}\r\n                  onChange={this.handleInputs}\r\n                  className=\"form-control iranSansNum report-date-input\"\r\n                />\r\n                <span className=\"mx-1 fs-13\">تا</span>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"endSearchDate\"\r\n                  value={this.state.endSearchDate}\r\n                  onChange={this.handleInputs}\r\n                  className=\"form-control iranSansNum report-date-input\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 report-search-items\">\r\n                <div className=\"pointer\">\r\n                  <span className=\"fs-13 ml-2\">همه پروژه ها</span>\r\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 report-search-items\">\r\n                <div className=\"pointer\">\r\n                  <span className=\"fs-13 ml-2\">همه فعالیت ها</span>\r\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 report-search-items\">\r\n                <div className=\"pointer\">\r\n                  <span className=\"fs-13 ml-2\">همه کاربر ها</span>\r\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mt-md-0\">\r\n              <button className=\"btn btn-secondary\">\r\n                <i className=\"fas fa-search\"></i>\r\n              </button>\r\n              <button className=\"btn btn-secondary mr-2\">\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"pb-3 pt-4 d-flex align-items-center container\">\r\n            <div className=\"row w-100\">\r\n              <div className=\"col-12 col-sm-6 col-md-3 d-flex justify-content-center align-items-center\">\r\n                <span className=\"label-sum\">مجموع</span>\r\n                <span className=\"total-sum iranSansNum\">\r\n                  {this.formatTime(this.state.userPostsTimeSum)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 mb-5 mb-md-0 col-md-8\">\r\n                <div className=\"reportSummary-panel bg-white\">\r\n                  <div className=\"reportSummary-panel-body\">\r\n                    <div className=\"reportSummary-panel-groups py-2 mb-3 d-flex align-items-center\">\r\n                      <span onClick={() => this.handleExtendUserName()}>\r\n                        {this.state.extendUserName ? (\r\n                          <i className=\"far fa-minus-square\"></i>\r\n                        ) : (\r\n                          <i className=\"far fa-plus-square\"></i>\r\n                        )}\r\n                      </span>\r\n                      <button className=\"btn btn-secondary mr-2\">\r\n                        گروه‌بندی کاربر / پروژه\r\n                        <i className=\"fas fa-sort-down mr-2\"></i>\r\n                      </button>\r\n                    </div>\r\n\r\n                    <div className=\"reportSummary-panel-body-tabel py-4\">\r\n                      <div className=\"mx-2 mx-sm-4\">\r\n                        <div className=\"d-flex justify-content-between align-items-center\">\r\n                          <div>\r\n                            <span onClick={() => this.handleExtendUserName()}>\r\n                              {this.state.extendUserName ? (\r\n                                <i className=\"far fa-minus-square\"></i>\r\n                              ) : (\r\n                                <i className=\"far fa-plus-square\"></i>\r\n                              )}\r\n                            </span>\r\n                            <span className=\"font-weight-bold mr-2\">\r\n                              Kaveh.Karami.KK\r\n                            </span>\r\n                          </div>\r\n\r\n                          <div>\r\n                            <span className=\"font-weight-bold iranSansNum\">\r\n                              {this.formatTime(this.state.userPostsTimeSum)}\r\n                            </span>\r\n                          </div>\r\n                        </div>\r\n\r\n                        {this.state.extendUserName &&\r\n                          this.state.dateForPanelTimeDashboardChart.map(\r\n                            (item, index) => (\r\n                              <div\r\n                                key={index}\r\n                                className=\"d-flex justify-content-between align-items-center my-2\"\r\n                              >\r\n                                <div>{item.projectName}</div>\r\n\r\n                                <div className=\"iranSansNum\">\r\n                                  {this.formatTime(item.count)}\r\n                                </div>\r\n                              </div>\r\n                            )\r\n                          )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-12 col-md-4\">\r\n                {this.state.getPosts.length > 0 ? (\r\n                  <Doughnut\r\n                    data={{\r\n                      labels: [\"Kaveh.Karami.KK\"],\r\n                      datasets: [\r\n                        {\r\n                          data: [this.state.userPostsTimeSum],\r\n                          backgroundColor: [\"#21335E\"],\r\n                          borderColor: \"#fff\",\r\n                          borderWidth: 2\r\n                        }\r\n                      ]\r\n                    }}\r\n                    options={this.miniChartOptions()}\r\n                    legend={{\r\n                      display: false\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <div className=\"miniNotFoundDataForChart px-4\">\r\n                    داده‌ای برای نمایش وجود ندارد\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReportSummary;\r\n","// FIXME Search box didn't develop\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\n\r\nclass ReportDetail extends Component {\r\n  /* ------------------------------- Properties ------------------------------- */\r\n\r\n  state = {\r\n    getPosts: [],\r\n    userPostsTimeSum: 0,\r\n    extendUserName: false,\r\n    dateForPanelTimeDashboardChart: [],\r\n  };\r\n\r\n  /* ---------------------------- lifecycle methods --------------------------- */\r\n\r\n  componentDidMount = () => {\r\n    this.getPosts();\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.Unmount = true;\r\n  };\r\n\r\n  /* ----------------------------- handle Methods ----------------------------- */\r\n\r\n  handleInputs = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  /* ---------------------------------- axios --------------------------------- */\r\n\r\n  getPosts = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/posts\",\r\n    }).then((res) => {\r\n      if (this.Unmount) return;\r\n      this.setState({ getPosts: res.data });\r\n      this.userPostsTimeSum();\r\n      this.sortPosts();\r\n    });\r\n  };\r\n\r\n  /* ------------------------------ other methods ----------------------------- */\r\n  sortPosts = () => {\r\n    const posts = [...this.state.getPosts];\r\n    const sortPosts = _.orderBy(\r\n      posts,\r\n      [\"date\", \"time.startTime\", \"time.endTime\"],\r\n      [\"desc\", \"desc\", \"desc\"]\r\n    );\r\n    this.setState({ getPosts: sortPosts });\r\n  };\r\n\r\n  formatTime = (secs) => {\r\n    var hours = Math.floor(secs / 3600);\r\n    var divisor_for_minutes = secs % 3600;\r\n    var minutes = Math.floor(divisor_for_minutes / 60);\r\n    var seconds = divisor_for_minutes % 60;\r\n\r\n    return `${hours < 10 ? \"0\" + hours : hours}:${\r\n      minutes < 10 ? \"0\" + minutes : minutes\r\n    }:${seconds < 10 ? \"0\" + seconds : seconds}`;\r\n  };\r\n\r\n  userPostsTimeSum = () => {\r\n    const posts = [...this.state.getPosts];\r\n\r\n    const userPostsTimeSum = _.sumBy(posts, (item) => item.time.count);\r\n\r\n    this.setState({ userPostsTimeSum });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"report-parent h-100 px-3\">\r\n          <div className=\"report-header\">گزارش جزئی</div>\r\n\r\n          <div className=\"report-search bg-white mb-3 p-3 d-flex flex-column flex-md-row justify-content-md-between align-items-center\">\r\n            <div className=\"d-flex flex-column flex-sm-row justify-content-start align-items-center flex-wrap flex-md-nowrap\">\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 report-search-items\">\r\n                <div className=\"pointer\">\r\n                  <span className=\"fs-13 ml-2\">همه کاربر ها</span>\r\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 report-search-items\">\r\n                <div className=\"pointer\">\r\n                  <span className=\"fs-13 ml-2\">همه پروژه ها</span>\r\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 report-search-items\">\r\n                <div className=\"pointer\">\r\n                  <span className=\"fs-13 ml-2\">همه فعالیت ها</span>\r\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 report-search-items\">\r\n                <div className=\"pointer\">\r\n                  <span className=\"fs-13 ml-2\">همه کاربر ها</span>\r\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mt-md-0\">\r\n              <button className=\"btn btn-secondary\">\r\n                <i className=\"fas fa-search\"></i>\r\n              </button>\r\n              <button className=\"btn btn-secondary mr-2\">\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"pb-3 pt-4 d-flex align-items-center container\">\r\n            <div className=\"row w-100\">\r\n              <div className=\"col-12 col-sm-6 col-md-3 d-flex justify-content-center align-items-center\">\r\n                <span className=\"label-sum\">مجموع</span>\r\n                <span className=\"total-sum iranSansNum\">\r\n                  {this.formatTime(this.state.userPostsTimeSum)}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-responsive px-4\">\r\n            <table className=\"table showReportTable\">\r\n              <thead>\r\n                <tr>\r\n                  <td>کاربر</td>\r\n                  <td>توضیحات</td>\r\n                  <td>پروژه</td>\r\n                  <td>نوع فعالیت</td>\r\n                  <td>روز</td>\r\n                  <td>مدت زمان</td>\r\n                  <td></td>\r\n                  <td>\r\n                    <i className=\"pointer fas fa-sync-alt\"></i>\r\n                  </td>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {this.state.getPosts.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>Kaveh.Karami.KK</td>\r\n                      <td className=\"pointer\">{item.description}</td>\r\n                      <td className=\"pointer\" style={{ color: item.color }}>\r\n                        {item.projectName}\r\n                      </td>\r\n                      <td className=\"pointer\">{item.activityName}</td>\r\n                      <td className=\"pointer iranSansNum\">{item.date}</td>\r\n                      <td className=\"pointer iranSansNum\">\r\n                        {this.formatTime(item.time.count)}\r\n                      </td>\r\n                      <td className=\"pointer iranSansNum\">\r\n                        {item.time.startTime}-{item.time.endTime}\r\n                      </td>\r\n                      <td></td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReportDetail;\r\n","// FIXME Search box didn't develop\r\nimport React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass ReportProject extends Component {\r\n  /* ------------------------------- Properties ------------------------------- */\r\n\r\n  state = {\r\n    getPosts: [],\r\n    getProjects: [],\r\n  };\r\n\r\n  /* ---------------------------- lifecycle methods --------------------------- */\r\n\r\n  componentDidMount = () => {\r\n    this.getProjects();\r\n    this.getPosts();\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    this.Unmount = true;\r\n  };\r\n\r\n  /* ---------------------------------- axios --------------------------------- */\r\n\r\n  getPosts = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/posts\",\r\n    }).then((res) => {\r\n      if (this.Unmount) return;\r\n      this.setState({ getPosts: res.data });\r\n      this.sortProjects();\r\n    });\r\n  };\r\n\r\n  getProjects = () => {\r\n    axios({\r\n      url: \"https://minit-server-app.herokuapp.com/projects\",\r\n    }).then((res) => {\r\n      if (this.Unmount) return;\r\n      this.setState({ getProjects: res.data });\r\n    });\r\n  };\r\n\r\n  /* ------------------------------ other methods ----------------------------- */\r\n  sortProjects = () => {\r\n    const posts = [...this.state.getPosts];\r\n    const projects = [...this.state.getProjects];\r\n    const projectsArr = [];\r\n    for (let i in posts) {\r\n      projectsArr.push([posts[i].projectName, posts[i].projectId]);\r\n    }\r\n\r\n    const uniqueDate = new Set(projectsArr);\r\n\r\n    const newProjectsArr = [...uniqueDate];\r\n\r\n    const dataObjectForDashboardChart = {};\r\n\r\n    for (let i in newProjectsArr) {\r\n      dataObjectForDashboardChart[newProjectsArr[i][0]] = {\r\n        id: newProjectsArr[i][1],\r\n        count: 0,\r\n      };\r\n    }\r\n\r\n    posts.filter((item) => {\r\n      return newProjectsArr.some((value) =>\r\n        item.projectName === value[0] && item.projectId === value[1]\r\n          ? (dataObjectForDashboardChart[item.projectName][\"count\"] +=\r\n              item.time.count)\r\n          : null\r\n      );\r\n    });\r\n\r\n    const newProjects = [];\r\n\r\n    for (let i in dataObjectForDashboardChart) {\r\n      newProjects.push({\r\n        projectName: i,\r\n        projectId: dataObjectForDashboardChart[i][\"id\"],\r\n        count: dataObjectForDashboardChart[i][\"count\"],\r\n      });\r\n    }\r\n\r\n    projects.filter((item) =>\r\n      newProjects.filter((value) => {\r\n        if (item.id === value.projectId) {\r\n          value[\"clientName\"] = item.clientName;\r\n          value[\"budget\"] = item.budget;\r\n          value[\"color\"] = item.color;\r\n        }\r\n\r\n        return 1;\r\n      })\r\n    );\r\n\r\n    this.setState({ getProjects: newProjects });\r\n  };\r\n\r\n  formatTime = (secs) => {\r\n    var hours = Math.floor(secs / 3600);\r\n    var divisor_for_minutes = secs % 3600;\r\n    var minutes = Math.floor(divisor_for_minutes / 60);\r\n    var seconds = divisor_for_minutes % 60;\r\n\r\n    return `${hours < 10 ? \"0\" + hours : hours}:${\r\n      minutes < 10 ? \"0\" + minutes : minutes\r\n    }:${seconds < 10 ? \"0\" + seconds : seconds}`;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"report-parent h-100 px-3\">\r\n          <div className=\"report-header\">گزارش پروژه</div>\r\n\r\n          <div className=\"report-search bg-white mb-5 p-3 d-flex flex-column flex-md-row justify-content-md-between align-items-center\">\r\n            <div className=\"d-flex flex-column flex-sm-row justify-content-start align-items-center flex-wrap flex-md-nowrap\">\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 report-search-items\">\r\n                <div className=\"pointer\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"fs-13 form-control\"\r\n                    placeholder=\"پروژه\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"d-flex justify-content-start align-items-center px-3 report-search-items\">\r\n                <div className=\"pointer\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"fs-13 form-control\"\r\n                    placeholder=\"مشتری\"\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mt-3 mt-md-0\">\r\n              <button className=\"btn btn-secondary\">\r\n                <i className=\"fas fa-search\"></i>\r\n              </button>\r\n              <button className=\"btn btn-secondary mr-2\">\r\n                <i className=\"fas fa-times\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"table-responsive px-4 reportProjectTabelBox bg-white\">\r\n            <table className=\"table showReportTable reportProjectTabel bg-white\">\r\n              <thead>\r\n                <tr>\r\n                  <td>پروژه</td>\r\n                  <td>مشتری</td>\r\n                  <td>بودجه زمانی</td>\r\n                  <td>زمان مصرف شده</td>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                {this.state.getProjects.map((item, index) => {\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td className=\"pointer\" style={{ color: item.color }}>\r\n                        {item.projectName}\r\n                      </td>\r\n                      <td className=\"pointer\">{item.clientName}</td>\r\n                      <td className=\"pointer iranSansNum\">{item.budget}</td>\r\n\r\n                      <td className=\"pointer iranSansNum\">\r\n                        {this.formatTime(item.count)}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReportProject;\r\n","import React from \"react\";\r\nconst NotFound = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"notFound-parent h-100 px-3 d-flex flex-column align-items-center justify-content-center\">\r\n        <h1>404</h1>\r\n        <p className=\"text-center\">صفحه مورد نظر یافت نشد.</p>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Menu from \"./components/Menu\";\r\nimport PanelTime from \"./components/PanelTime\";\r\nimport Projects from \"./components/Projects\";\r\nimport TaskType from \"./components/Tasktype\";\r\nimport Client from \"./components/Client\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport ReportSummary from \"./components/ReportSummary\";\r\nimport ReportDetail from \"./components/ReportDetail\";\r\nimport ReportProject from \"./components/ReportProject\";\r\nimport NotFound from \"./components/NotFound\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"d-flex h-100\">\r\n        <Menu />\r\n        <div className=\"container-fluid px-0\">\r\n          <Switch>\r\n            <Route path=\"/\" component={PanelTime} exact />\r\n            <Route path=\"/projects\" component={Projects} exact />\r\n            <Route path=\"/tasktype\" component={TaskType} exact />\r\n            <Route path=\"/client\" component={Client} exact />\r\n            <Route path=\"/dashboard\" component={Dashboard} exact />\r\n            <Route path=\"/report/summary\" component={ReportSummary} exact />\r\n            <Route path=\"/report/detail\" component={ReportDetail} exact />\r\n            <Route path=\"/report/project\" component={ReportProject} exact />\r\n            <Route component={NotFound} />\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","/* -------------------------- Essential & Basics -------------------------- */\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\n/* ----------------------------------- CSS ---------------------------------- */\r\nimport \"./fonts/iransans/iransans.css\";\r\nimport \"./fonts/iransansNum/css/iransansNum.css\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./css/basic.css\";\r\nimport \"./css/menu.css\";\r\nimport \"./css/createOrder.css\";\r\nimport \"./css/showOrder.css\";\r\nimport \"./css/emptyPost.css\";\r\nimport \"./css/projects.css\";\r\nimport \"./css/tasktypeAndClient.css\";\r\nimport \"./css/dashboardAndReport.css\";\r\nimport \"./css/notFound.css\";\r\n\r\n/* ------------------------------- Components ------------------------------- */\r\nimport App from \"./App.jsx\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}