{"version":3,"sources":["serviceWorker.js","components/MenuComponents/CustomMenu.jsx","components/Menu.jsx","components/PanelTimeComponents/ShowOrderComponents/EmptyPost.jsx","components/PanelTimeComponents/ShowOrder.jsx","components/PanelTimeComponents/CreateOrder.jsx","components/PanelTime.jsx","components/Projects.jsx","components/Tasktype.jsx","components/Client.jsx","components/Dashboard.jsx","components/ReportSummary.jsx","components/ReportDetail.jsx","components/ReportProject.jsx","components/NotFound.jsx","App.jsx","index.js"],"names":["Boolean","window","location","hostname","match","CustomMenu","props","path","exact","children","to","className","label","CustomDropdownMenu","Menu","state","reportMode","changeReportMode","name","setState","this","onClick","Component","EmptyPost","ShowOrder","allPostsDateTime","postNum","posts","persianNumbers","componentDidUpdate","length","calculateTime","number","count","hour","Math","floor","baghi01","min","sec","fixNumbers","str","i","replace","fixTime","clock","splitST","split","startHour","startMin","splitET","endHour","endMin","calculateDate","date","seprateDate","joinDate","join","persianMonthNumber","thisMonth","thisDate","EnDate","thisDay","Moment","locale","format","index","time","Fragment","allDate","map","value","ind","key","item","style","borderRight","color","description","tagName","tag","id","backgroundColor","projectName","activityName","startTime","endTime","play","showOrderPlayButton","projectId","projectIndex","editModalDetails","handleEditModal","onDelete","CreateOrder","counter","intervalID","getNewDate","toLocaleDateString","month","day","year","toLocaleTimeString","minute","endTimeUnvalidation","startTimeUnvalidation","projectValidation","activityId","getPosts","getProjects","getTags","selectedTag","getDate","getTasktype","dateUnvalid","openEditModal","postId","resetState","Unmount","componentDidMount","sortPosts","componentWillUnmount","handleInputs","e","a","currentTarget","target","selectedIndex","Number","getAttribute","handleStart","setInterval","clearInterval","postDate","postPosts","handleProjectValidation","handleListSelect","mode","separateStart","startTimeValidation","startHourToMin","allStartMinTime","separateEnd","endTimeValidation","endHourToMin","allEndMinTime","handleDelete","handlePlayerMode","axios","url","method","then","response","catch","err","console","log","setTimeout","handlePressEnter","which","postTag","handleSelectedTag","newGetTags","filter","newSelectedTag","push","handleCloseSelectedTag","sortedGetTags","_","orderBy","newFix","data","sortTags","res","prevState","unique","Set","uniqueTimes","sorted","tags","select","myArrayFiltered","array","every","Date","placeholder","type","onChange","projectid","task","activityid","UncontrolledPopover","placement","trigger","PopoverBody","onKeyPress","Modal","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","PanelTime","Projects","modalToggle","editProjectModal","popoverToggle","getColors","getClient","currentColor","budget","clientName","clientId","searchName","searchBudget","searchCustomer","projectUnvalidation","signIn","admin","newProjectID","resetModalAndPopOverAndCreateProjectProperties","resetSearchProperties","randomColor","postProject","projectAccess","customer","splice","handleChangePosts","forEach","handleDeletePostsAndCreateANewOne","handleModalToggle","handlePopover","handleCheckBox","handleColorPick","handleDeletePostsAndDates","handleDeleteProject","indexOf","handleSearch","regExpSearchName","RegExp","test","handlEditProjects","handleResetSearch","random","rgb","Popover","client","clientid","checked","TaskType","pay","postTasktype","deleteTasktype","handleCheckbox","handleEditTask","handleEditTaskSubmit","newGP","Client","postClient","deleteClient","Dashboard","startSearchDate","endSearchDate","panelHeaderMode","dateForPanelTimeDashboardChartForWhile","daysInMonth","dailyChartColor","monthlyChartColor","projectsTimeChartColor","activityTimeChartColor","totalSum","weeksInMonth","dateForPanelTimeDashboardWeekChart","monthsInYear","dateForPanelTimeDashboardMonthChart","titleText","projectsLabels","projectsCount","userPostsTimeSum","activityLabels","activityCount","handleDate","handleWeekDate","handleMonthDate","handlePanelHeaderItemSelect","monthDate","moment","startOf","times","add","start","end","endOf","weeks","ceil","weeksInMonthLentgh","startWeek","endWeek","newVal","beforedays","joinTogether","handleTotalSum","sumBy","projectsFilterDateAndSum","activityFilterDateAndSum","filterSameDatePostsAndSum","monthlyFilterDateAndSum","mainChartOptions","scales","yAxes","ticks","stepSize","beginAtZero","callback","labels","formatTime","tooltips","displayColors","callbacks","title","tooltipItem","yLabel","layout","padding","left","right","bottom","display","text","fontFamily","fontSize","miniChartOptions","footer","dataset","total","reduce","previousValue","currentValue","currentIndex","dateArr","uniqueDate","newDateArr","dataObjectForDashboardChart","dateForPanelTimeDashboardChart","trasferDataObjectToAxis","x","y","generateBgColorForChart","weeklyFilterDateAndSum","weeksDateArr","itemSeprate","itemStart","itemEnd","itemStartSeprate","itemEndSeprate","itemYear","itemMonth","itemStartDay","itemEndDay","valueSeprate","valueYear","valueMonth","valueDay","monthsDateArr","projectsArr","newProjectsArr","activityArr","newActivityArr","secs","hours","divisor_for_minutes","minutes","seconds","r","g","b","chartName","height","outerWidth","outerHeight","datasets","borderColor","borderWidth","options","legend","position","align","ReportSummary","extendUserName","handleExtendUserName","ReportDetail","ReportProject","sortProjects","projects","some","newProjects","NotFound","App","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3cf6a18e.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { Link, Route } from \"react-router-dom\";\n\nexport const CustomMenu = props => (\n  <Route\n    path={props.path}\n    exact={props.exact}\n    children={({ match }) =>\n      match ? (\n        <Link\n          to={props.path}\n          className=\"menu-item-active list-group-item d-flex justify-content-center align-items-center\"\n        >\n          {props.label}\n        </Link>\n      ) : (\n        <Link\n          to={props.path}\n          className=\"menu-item-other list-group-item d-flex justify-content-center align-items-center\"\n        >\n          {props.label}\n        </Link>\n      )\n    }\n  />\n);\n\nexport const CustomDropdownMenu = props => (\n  <Route\n    path={props.path}\n    exact={props.exact}\n    children={({ match }) =>\n      match ? (\n        <Link\n          to={props.path}\n          className=\"menu-item-dropdown-active list-group-item d-flex justify-content-center align-items-center\"\n        >\n          {props.label}\n        </Link>\n      ) : (\n        <Link\n          to={props.path}\n          className=\"menu-item-dropdown-other list-group-item d-flex justify-content-center align-items-center\"\n        >\n          {props.label}\n        </Link>\n      )\n    }\n  />\n);\n","import React, { Component } from \"react\";\nimport { CustomMenu, CustomDropdownMenu } from \"./MenuComponents/CustomMenu\";\nclass Menu extends Component {\n  state = { reportMode: \"/report/summary\" };\n\n  changeReportMode = (name) => {\n    this.setState({ reportMode: name });\n  };\n\n  render() {\n    return (\n      <div className=\"p-lg-2 pb-lg-0 menu-parent\">\n        <div className=\"menu d-flex flex-column align-items-center min-vh-100 \">\n          <div className=\"menu-panel\">\n            <div className=\"nav-logo\"></div>\n          </div>\n\n          <div className=\"nav-item list-group align-items-lg-start\">\n            <CustomMenu\n              path={\"/\"}\n              exact\n              label={\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\n                  <i className=\"far fa-clock pr-lg-2\"></i>\n                  <span className=\"d-none d-lg-inline px-lg-3\">ساعت کاری</span>\n                </div>\n              }\n            />\n            <CustomMenu\n              path={\"/dashboard\"}\n              exact\n              label={\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\n                  <i className=\"far fa-chart-bar pr-lg-2\"></i>\n                  <span className=\"d-none d-lg-inline px-lg-3\">داشبورد</span>\n                </div>\n              }\n            />\n            <div className=\"position-relative menu-reports-dropdown\">\n              <CustomMenu\n                path={this.state.reportMode}\n                exact\n                label={\n                  <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center \">\n                    <i className=\"fas fa-list-ul pr-lg-2\"></i>\n                    <span className=\"d-none d-lg-inline px-lg-3\">گزارش</span>\n                  </div>\n                }\n              />\n\n              <div className=\"menu-reports-dropdown-content d-flex flex-column align-items-start justify-content-around p-3\">\n                <div onClick={() => this.changeReportMode(\"/report/summary\")}>\n                  <CustomDropdownMenu\n                    path={\"/report/summary\"}\n                    exact\n                    label={\"گذارش خلاصه\"}\n                  />\n                </div>\n                <div onClick={() => this.changeReportMode(\"/report/detail\")}>\n                  <CustomDropdownMenu\n                    path={\"/report/detail\"}\n                    exact\n                    label={\"گزارش جزئی\"}\n                  />\n                </div>\n                <div onClick={() => this.changeReportMode(\"/report/project\")}>\n                  <CustomDropdownMenu\n                    path={\"/report/project\"}\n                    exact\n                    label={\"گذارش پروژه\"}\n                  />\n                </div>\n              </div>\n            </div>\n\n            <div className=\"menu-seperator\">\n              <span className=\"d-none d-lg-block\">مدیریت</span>\n            </div>\n            <CustomMenu\n              path={\"/projects\"}\n              exact\n              label={\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\n                  <i className=\"fas fa-folder pr-lg-2\"></i>\n                  <span className=\"d-none d-lg-inline px-lg-3\">پروژه</span>\n                </div>\n              }\n            />\n            <CustomMenu\n              path={\"/client\"}\n              exact\n              label={\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\n                  <i className=\"fas fa-user-circle pr-lg-2\"></i>\n                  <span className=\"d-none d-lg-inline px-lg-3\">مشتری</span>\n                </div>\n              }\n            />\n            <CustomMenu\n              path={\"/tasktype\"}\n              exact\n              label={\n                <div className=\"d-flex justify-content-center align-items-center justify-content-lg-around align-items-lg-center\">\n                  <i className=\"fas fa-bars pr-lg-2\"></i>\n                  <span className=\"d-none d-lg-inline px-lg-3\">نوع فعالیت</span>\n                </div>\n              }\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Menu;\n","import React from \"react\";\n\nconst EmptyPost = () => {\n  return (\n    <div className=\"empty-show d-flex flex-column align-items-center\">\n      <div className=\"mt-120 mb-60\">\n        <div className=\"empty-show-item\">\n          <i className=\"far fa-hand-point-up\"></i>\n          <span>برای شروع باید حداقل یه پروژه داشته باشی!</span>\n        </div>\n\n        <div className=\"empty-show-item\">\n          <i className=\"far fa-hand-point-right\"></i>\n          <span>برای ساختن پروژه از منوی سمت راست استفاده کن.</span>\n        </div>\n\n        <div className=\"empty-show-item\">\n          <i className=\"far fa-hand-point-left rotate-27\"></i>\n          <span>\n            برای ثبت زمان هم از تایمر میتونی استفاده کنی و هم از ثبت بازه‌ای.\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmptyPost;\n","import React, { Component } from \"react\";\nimport Moment from \"moment\";\nimport \"moment/locale/fa\";\nimport EmptyPost from \"./ShowOrderComponents/EmptyPost\";\n\nclass ShowOrder extends Component {\n  /* -------------------------- state and properties -------------------------- */\n\n  state = {\n    allPostsDateTime: 0,\n    postNum: 0,\n    posts: [],\n  };\n\n  persianNumbers = [/۰/g, /۱/g, /۲/g, /۳/g, /۴/g, /۵/g, /۶/g, /۷/g, /۸/g, /۹/g];\n\n  /* ----------------------------- lifecycle hooks ---------------------------- */\n\n  componentDidUpdate = () => {\n    // NOTE  i write this statement because if i dont wrtite it setState run a lot of time\n    if (\n      // (this.state.allPostsDateTime === 0 && this.props.posts.length !== 0) ||\n      this.state.postNum < this.props.posts.length\n    ) {\n      this.setState({\n        posts: [...this.props.posts],\n        // allPostsDateTime: this.allPostsDateTime(),\n        postNum: this.props.posts.length,\n      });\n    }\n\n    // NOTE  write this statement for get allPostsDateTime and fix state length\n    if (this.state.postNum !== this.props.posts.length) {\n      this.setState({\n        posts: [...this.props.posts],\n        postNum: this.props.posts.length,\n        // allPostsDateTime: this.allPostsDateTime()\n      });\n    }\n  };\n\n  /* ------------------------------ other Methods ----------------------------- */\n\n  calculateTime = (number) => {\n    const count = number;\n    const hour = Math.floor(count / 3600);\n    const baghi01 = count % 3600;\n    const min = Math.floor(baghi01 / 60);\n    const sec = baghi01 % 60;\n\n    return `${hour < 10 ? \"0\" + hour : hour}:${min < 10 ? \"0\" + min : min}:${\n      sec < 10 ? \"0\" + sec : sec\n    }`;\n  };\n\n  // NOTE  this method transfer persian number to the same english number because we want to use that number as index in array in the claculateDate Method\n  fixNumbers = function(str) {\n    if (typeof str === \"string\") {\n      for (var i = 0; i < 10; i++) {\n        str = str.replace(this.persianNumbers[i], i);\n      }\n    }\n    return str;\n  };\n\n  // NOTE  this method below use for fix our start and end time, if they have'nt got a 2-digit ? concat 0 at the beginning of them : return them without change\n  fixTime = (name, clock) => {\n    if (name === \"startTime\") {\n      const splitST = clock.split(\":\");\n      let startHour = splitST[0];\n      let startMin = splitST[1];\n      if (startHour < 10 && startHour.length < 2) startHour = \"0\" + startHour;\n      if (startMin < 10 && startMin.length < 2) startMin = \"0\" + startMin;\n\n      return `${startHour}:${startMin}`;\n    } else if (name === \"endTime\") {\n      const splitET = clock.split(\":\");\n      let endHour = splitET[0];\n      let endMin = splitET[1];\n      if (endHour < 10 && endHour.length < 2) endHour = \"0\" + endHour;\n      if (endMin < 10 && endMin.length < 2) endMin = \"0\" + endMin;\n\n      return `${endHour}:${endMin}`;\n    }\n  };\n\n  calculateDate = (date) => {\n    const d = date;\n    const seprateDate = d.split(\"/\");\n    const joinDate = seprateDate.join(\"\");\n\n    const months = [\n      \"فروردین\",\n      \"اردیبهشت\",\n      \"خرداد\",\n      \"تیر\",\n      \"مرداد\",\n      \"شهریور\",\n      \"مهر\",\n      \"آبان\",\n      \"آذر\",\n      \"دی\",\n      \"بهمن\",\n      \"اسفند\",\n    ];\n\n    // this variable return our month number but with persian number\n    const persianMonthNumber = seprateDate[1];\n\n    const index = this.fixNumbers(persianMonthNumber);\n\n    const thisMonth = months[index - 1];\n    const thisDate = seprateDate[2];\n\n    const EnDate = this.fixNumbers(joinDate);\n\n    const thisDay = Moment(EnDate, \"YYYYMMDD\")\n      .locale(\"fa\")\n      .format(\"dddd\");\n\n    return {\n      thisMonth,\n      thisDate,\n      thisDay,\n    };\n  };\n\n  allPostsDateTime = (date) => {\n    const index = this.props.posts.length;\n    var allPostsDateTime = 0;\n    for (let i = 0; i < index; i++) {\n      const transferPropsPostPersianNumbersToEnglish = this.fixNumbers(\n        this.props.posts[i].date\n      );\n      const transferArgumentPersianNumbersToEnglish = this.fixNumbers(date);\n\n      if (\n        transferPropsPostPersianNumbersToEnglish ===\n        transferArgumentPersianNumbersToEnglish\n      ) {\n        allPostsDateTime += this.props.posts[i].time.count;\n      }\n    }\n\n    return allPostsDateTime;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.props.posts.length === 0 ? (\n          <EmptyPost />\n        ) : (\n          <div>\n            {this.props.allDate.map((value, ind) => {\n              return (\n                <React.Fragment key={ind}>\n                  <div className=\"showOrder-title p-3 d-flex justify-content-between align-items-center\">\n                    <div>\n                      <span>{this.calculateDate(value).thisDay}</span>\n                      <span className=\"iranSansNum\">\n                        {\" \"}\n                        {this.calculateDate(value).thisDate}{\" \"}\n                      </span>\n                      <span>{this.calculateDate(value).thisMonth}</span>\n                    </div>\n                    <div className=\"iranSansNum\">\n                      {this.calculateTime(this.allPostsDateTime(value))}\n                    </div>\n                  </div>\n\n                  <div className=\"mb-120\">\n                    <div className=\"showOrder-box\">\n                      {this.props.posts.map((item, index) => {\n                        if (item.date === value) {\n                          return (\n                            <div\n                              key={index}\n                              className=\"d-flex flex-column p-2 showOrder-item flex-md-row justify-content-md-between py-md-3\"\n                              style={{ borderRight: `4px solid ${item.color}` }}\n                            >\n                              <div className=\"d-flex justify-content-between align-items-center mb-3 mb-md-0 mx-md-3 w-md-50\">\n                                <div className=\"col-title\">\n                                  {item.description}\n                                  {item.tagName.length !== 0 && (\n                                    <span>\n                                      {item.tagName.map((tag) => (\n                                        <span\n                                          key={tag.id}\n                                          className=\"fs-12 badge badge-success mr-2\"\n                                        >\n                                          {tag.name}\n                                        </span>\n                                      ))}\n                                    </span>\n                                  )}\n                                </div>\n                                <div className=\"col-project\">\n                                  <span\n                                    className=\"circle-color\"\n                                    style={{ backgroundColor: item.color }}\n                                  ></span>\n                                  <span style={{ color: item.color }}>\n                                    {item.projectName}\n                                  </span>\n                                </div>\n                                <div className=\"col-activity\">\n                                  {item.activityName}\n                                </div>\n                              </div>\n\n                              <div className=\"d-flex justify-content-between align-items-center justify-content-md-around mx-md-3 w-md-50\">\n                                <div className=\"col-hour\">\n                                  <span className=\"iranSansNum fs-14\">\n                                    {this.fixTime(\n                                      \"startTime\",\n                                      item.time.startTime\n                                    )}\n                                  </span>\n                                  -\n                                  <span className=\"iranSansNum fs-14\">\n                                    {this.fixTime(\"endTime\", item.time.endTime)}\n                                  </span>\n                                </div>\n\n                                <div className=\"iranSansNum fs-14 col-count\">\n                                  {this.calculateTime(item.time.count)}\n                                </div>\n\n                                <div className=\"d-flex align-items-center justify-content-between col-btn\">\n                                  <div\n                                    className={\n                                      this.props.play ? \"mr-2 hidden\" : \"mr-2\"\n                                    }\n                                    onClick={() => {\n                                      this.props.showOrderPlayButton(\n                                        item.description,\n                                        item.projectName,\n                                        item.projectId,\n                                        item.projectIndex,\n                                        item.activityName,\n                                        item.color\n                                      );\n                                    }}\n                                  >\n                                    <i className=\"fas fa-play\"></i>\n                                  </div>\n                                  <div\n                                    className=\"mr-2\"\n                                    onClick={() => {\n                                      this.props.editModalDetails(\n                                        item.description,\n                                        item.projectName,\n                                        item.projectId,\n                                        item.projectIndex,\n                                        item.activityName,\n                                        item.color,\n                                        item.time.startTime,\n                                        item.time.endTime,\n                                        item.date,\n                                        item.tagName,\n                                        item.id\n                                      );\n                                      this.props.handleEditModal();\n                                    }}\n                                  >\n                                    <i className=\"fas fa-pencil-alt\"></i>\n                                  </div>\n                                  <div className=\"mr-2\">\n                                    <i\n                                      className=\"fas fa-trash-alt\"\n                                      onClick={() => {\n                                        this.props.onDelete(item.id);\n                                        this.setState({\n                                          allPostsDateTime: this.allPostsDateTime(),\n                                        });\n                                      }}\n                                    ></i>\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          );\n                        }\n\n                        return null;\n                      })}\n                    </div>\n                  </div>\n                </React.Fragment>\n              );\n            })}\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ShowOrder;\n","import React, { Component } from \"react\";\nimport ShowOrder from \"./ShowOrder\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport {\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  UncontrolledPopover,\n  PopoverBody,\n} from \"reactstrap\";\n\nclass CreateOrder extends Component {\n  /* -------------------------- state and resetState Method and properties -------------------------- */\n\n  state = {\n    // play key for pause and stop and calculate time and interVal\n    play: false,\n    // counter key for player mode\n    counter: true,\n    count: 1,\n    hour: 0,\n    min: 0,\n    sec: 0,\n    intervalID: 0,\n    date: this.getNewDate().toLocaleDateString(\"fa-IR\", {\n      month: \"2-digit\",\n      day: \"2-digit\",\n      year: \"numeric\",\n    }),\n    //NOTE in .toLocaleTimeString Method we can pass some arguments like this, the frist argument that i've passed means time without PM AM and 24h; the seconed argument is a object that we want to show time wothout second and with 2 digits\n    startTime: this.getNewDate().toLocaleTimeString(\"fr-FR\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    }),\n    endTime: this.getNewDate().toLocaleTimeString(\"fr-FR\", {\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n    }),\n    endTimeUnvalidation: false,\n    startTimeUnvalidation: false,\n    description: \"\",\n    tagName: \"\",\n    projectName: \"\",\n    projectValidation: true,\n    projectIndex: 0,\n    projectId: 0,\n    color: \"\",\n    activityName: \"\",\n    activityId: null,\n    getPosts: [],\n    getProjects: [],\n    getTags: [],\n    selectedTag: [],\n    getDate: [],\n    getTasktype: [],\n    allDate: [],\n    dateUnvalid: false,\n    openEditModal: false,\n    postId: 0,\n  };\n\n  //NOTE before it i used resetState as property but in the projectName and ProjectIndex needed lastest update of them so i had to use resetState as Method\n  resetState = () => {\n    return {\n      play: false,\n      counter: true,\n      count: 1,\n      hour: 0,\n      min: 0,\n      sec: 0,\n      intervalID: 0,\n      projectValidation: true,\n      activityName: \"\",\n      activityId: null,\n      projectName: \"\",\n      projectIndex: 0,\n      projectId: 0,\n      description: \"\",\n      selectedTag: [],\n      date: this.getNewDate().toLocaleDateString(\"fa-IR\", {\n        month: \"2-digit\",\n        day: \"2-digit\",\n        year: \"numeric\",\n      }),\n      startTime: this.getNewDate().toLocaleTimeString(\"fr-FR\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      }),\n      endTime: this.getNewDate().toLocaleTimeString(\"fr-FR\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      }),\n      dateUnvalid: false,\n      openEditModal: false,\n      postId: 0,\n    };\n  };\n\n  persianNumbers = [/۰/g, /۱/g, /۲/g, /۳/g, /۴/g, /۵/g, /۶/g, /۷/g, /۸/g, /۹/g];\n\n  Unmount = false;\n\n  /* ----------------------------- lifecycle hooks ---------------------------- */\n\n  componentDidMount = () => {\n    this.getPosts();\n    this.getDate();\n    this.getProjects();\n    this.getTags();\n    this.getTasktype();\n    this.allDate();\n    this.sortPosts();\n  };\n\n  componentWillUnmount = () => {\n    this.Unmount = true;\n  };\n\n  /* ---------------------- handles Methods often use for click event --------------------- */\n\n  handleInputs = async (e) => {\n    // NOTE for handle select and option tags we cant use line below, because if we click on option return undifiend name and we have to click again, so we gotta use e.current; if that element are select/option e.current give select tag to us and if that element is input e.current give input tag to us\n    // FIXME  const {name} = e.target\n    const { name } = e.currentTarget;\n    const { value } = e.target;\n\n    // FIXME i can't use a property as color like (name) so i set id and give color as value to it\n    // NOTE  e.target.selectedIndex give the index of select childrens (options)\n    if (name === \"projectName\") {\n      const index = e.target.selectedIndex;\n      const item = e.target[index];\n      const { id: color } = item;\n      const projectId = Number(item.getAttribute(\"projectid\"));\n\n      // NOTE  this statement used because the frist option (default value) hav't got any id and color property\n      if (color !== \"\") {\n        await this.setState({ color, projectId });\n      }\n\n      this.setState({ projectIndex: index });\n    }\n\n    if (name === \"activityName\") {\n      const index = e.target.selectedIndex;\n      const item = e.target[index];\n      const activityId = Number(item.getAttribute(\"activityid\"));\n\n      this.setState({ activityId });\n    }\n\n    this.setState({ [name]: value });\n  };\n\n  handleStart = (name) => {\n    const play = !this.state.play;\n\n    if (play) {\n      const startTime = this.getNewDate().toLocaleTimeString(\"fr-FR\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n\n      const intervalID = setInterval(this.calculateTime, 1000);\n      this.setState({ intervalID, startTime });\n    } else {\n      if (this.state.projectIndex > 0) {\n        this.setState({ ...this.resetState() });\n        clearInterval(this.state.intervalID);\n      }\n    }\n\n    if (name === \"stop\" && this.state.projectValidation) {\n      const { projectIndex } = this.state;\n      if (projectIndex > 0) {\n        this.setState({ projectValidation: true });\n        this.postDate();\n        this.postPosts();\n      } else {\n        this.handleProjectValidation();\n        this.setState({ projectValidation: false });\n      }\n    }\n\n    // REVIEW the statment below working but i can't realise what i write here\n    if (this.state.projectIndex > 0 && this.state.projectValidation === false) {\n      this.setState({ play: false });\n    } else {\n      this.setState({ play: true });\n    }\n\n    if (name === \"close\") {\n      clearInterval(this.state.intervalID);\n      this.setState({ ...this.resetState() });\n    }\n  };\n\n  // NOTE  for update state property i use async and give await to setState Method to get information then update it\n  handleListSelect = async (mode) => {\n    const startTime = this.state.startTime;\n    const endTime = this.state.endTime;\n    const { projectIndex } = this.state;\n\n    const separateStart = startTime.split(\":\");\n\n    const startTimeValidation =\n      Math.floor(separateStart[0]) < 24 && Math.floor(separateStart[1]) < 60;\n\n    if (!startTimeValidation) {\n      this.setState({ startTimeUnvalidation: true });\n      return;\n    }\n    this.setState({ startTimeUnvalidation: false });\n\n    const startHourToMin = Number(Math.floor(separateStart[0]) * 60);\n    const startMin = Number(Math.floor(separateStart[1]));\n    const allStartMinTime = startMin + startHourToMin;\n\n    const separateEnd = endTime.split(\":\");\n\n    const endTimeValidation =\n      Math.floor(separateEnd[0]) < 24 && Math.floor(separateEnd[1]) < 60;\n\n    if (!endTimeValidation) {\n      this.setState({ endTimeUnvalidation: true });\n      return;\n    }\n\n    this.setState({ endTimeUnvalidation: false });\n\n    const endHourToMin = Number(Math.floor(separateEnd[0]) * 60);\n    const endMin = Number(Math.floor(separateEnd[1]));\n    const allEndMinTime = endMin + endHourToMin;\n\n    const finallMin = allEndMinTime - allStartMinTime;\n\n    const sec = finallMin * 60;\n\n    const count = Number(sec);\n\n    await this.setState({ count });\n\n    if (\n      projectIndex > 0 &&\n      startTimeValidation &&\n      endTimeValidation &&\n      allEndMinTime > allStartMinTime\n    ) {\n      this.setState({ projectValidation: true });\n      this.postDate();\n      this.postPosts();\n      if (mode === \"modal\") {\n        this.handleDelete(this.state.postId);\n      }\n    } else if (projectIndex === 0 && this.state.projectValidation) {\n      this.handleProjectValidation();\n      this.setState({ projectValidation: false });\n    }\n\n    if (allEndMinTime < allStartMinTime || allStartMinTime === allEndMinTime) {\n      this.setState({ endTimeUnvalidation: true, startTimeUnvalidation: true });\n    }\n  };\n\n  handlePlayerMode = (name) => {\n    if (name === \"list\") {\n      this.setState({ counter: false });\n    } else if (name === \"clock\") {\n      this.setState({ counter: true });\n    }\n  };\n\n  handleDelete = (id) => {\n    axios({\n      url: `https://minit-server-app.herokuapp.com/posts/${id}`,\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        if (this.state.getProjects.length === 0) return;\n\n        this.getPosts();\n      })\n      .catch((err) => console.log(err));\n\n    axios({\n      url: `https://minit-server-app.herokuapp.com/date/${id}`,\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        if (this.state.getProjects.length === 0) return;\n        this.getDate();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleProjectValidation = () => {\n    setTimeout(() => {\n      this.setState({ projectValidation: true });\n    }, 2000);\n  };\n\n  handleEditModal = () => {\n    const openEditModal = !this.state.openEditModal;\n    this.setState({ openEditModal });\n\n    if (this.state.openEditModal) {\n      this.getTags();\n      this.setState({ ...this.resetState() });\n    }\n  };\n\n  handlePressEnter = (e) => {\n    if (this.state.tagName.length > 0 && e.which === 13) {\n      this.postTag();\n    }\n  };\n\n  handleSelectedTag = async (id) => {\n    const selectedTag = [...this.state.selectedTag];\n\n    const getTags = [...this.state.getTags];\n\n    const newGetTags = getTags.filter((item) => item.id !== id);\n\n    const newSelectedTag = getTags.filter((item) => item.id === id);\n\n    selectedTag.push(...newSelectedTag);\n\n    await this.setState({ selectedTag, getTags: newGetTags });\n  };\n\n  handleCloseSelectedTag = (item) => {\n    const getTags = [...this.state.getTags];\n\n    const selectedTag = [...this.state.selectedTag];\n    const newSelectedTag = selectedTag.filter((value) => value.id !== item.id);\n\n    getTags.push(item);\n\n    const sortedGetTags = _.orderBy(getTags, [\"id\"], [\"desc\"]);\n\n    this.setState({ getTags: sortedGetTags, selectedTag: newSelectedTag });\n  };\n\n  /* ---------------------------- Methods for axios --------------------------- */\n\n  postPosts = () => {\n    const {\n      description,\n      projectName,\n      projectIndex,\n      projectId,\n      activityName,\n      activityId,\n      count,\n      date,\n      startTime,\n      endTime,\n      color,\n      selectedTag,\n    } = this.state;\n\n    const fixDate = this.fixNumbers(date);\n\n    const seprateDate = fixDate.split(\"/\");\n\n    const year = seprateDate[0];\n    const month = seprateDate[1];\n    const day = seprateDate[2];\n\n    if (month.length < 2) {\n      seprateDate[1] = 0 + month;\n    }\n\n    if (day.length < 2) {\n      seprateDate[2] = 0 + day;\n    }\n\n    const newFix = seprateDate.join(\"/\");\n\n    if (year.length === 4) {\n      axios({\n        url: \"https://minit-server-app.herokuapp.com/posts\",\n\n        method: \"post\",\n\n        data: {\n          description,\n\n          projectName,\n\n          projectIndex,\n\n          projectId,\n\n          activityName,\n\n          activityId,\n\n          color,\n\n          tagName: [...selectedTag],\n\n          time: {\n            count,\n            startTime,\n            endTime,\n          },\n\n          date: newFix,\n        },\n      })\n        .then((response) => {\n          if (this.Unmount) return;\n          this.getPosts();\n          this.getTags();\n          this.setState({ ...this.resetState() });\n        })\n        .catch((err) => console.log(err));\n    } else {\n      this.setState({ dateUnvalid: true });\n    }\n  };\n\n  postDate = () => {\n    const { date } = this.state;\n\n    const fixDate = this.fixNumbers(date);\n\n    const seprateDate = fixDate.split(\"/\");\n\n    const year = seprateDate[0];\n    const month = seprateDate[1];\n    const day = seprateDate[2];\n\n    if (month.length < 2) {\n      seprateDate[1] = 0 + month;\n    }\n\n    if (day.length < 2) {\n      seprateDate[2] = 0 + day;\n    }\n    const newFix = seprateDate.join(\"/\");\n    if (year.length === 4) {\n      axios({\n        url: \"https://minit-server-app.herokuapp.com/date\",\n        method: \"POST\",\n        data: {\n          date: newFix,\n        },\n      })\n        .then((response) => {\n          if (this.Unmount) return;\n          this.getDate();\n        })\n        .catch((err) => console.log(err));\n    } else {\n      this.setState({ dateUnvalid: true });\n    }\n  };\n\n  postTag = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/tags\",\n      method: \"POST\",\n      data: {\n        name: this.state.tagName,\n      },\n    })\n      .then((response) => {\n        if (this.state.selectedTag.length > 0) {\n          const getTags = [...this.state.getTags];\n          getTags.push(response.data);\n          this.setState({ getTags });\n        } else {\n          this.getTags();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  getTags = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/tags\",\n    })\n      .then((response) => {\n        this.setState({ getTags: response.data, tagName: \"\" });\n        this.sortTags();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  getDate = () => {\n    axios({ url: \"https://minit-server-app.herokuapp.com/date\" })\n      .then((response) => {\n        if (this.Unmount) return;\n        this.setState({ getDate: response.data });\n        this.allDate();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  getPosts = () => {\n    axios({ url: \"https://minit-server-app.herokuapp.com/posts\" })\n      .then((response) => {\n        if (this.Unmount) return;\n        this.setState({ getPosts: response.data });\n        this.sortPosts();\n      })\n      .catch((err) => console.log(err));\n  };\n\n  getProjects = () => {\n    axios({ url: \"https://minit-server-app.herokuapp.com/projects\" })\n      .then((response) => {\n        if (this.Unmount) return;\n        this.setState({ getProjects: [...response.data] });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  getTasktype = () => {\n    axios({ url: \"https://minit-server-app.herokuapp.com/tasktype\" })\n      .then((res) => this.setState({ getTasktype: [...res.data] }))\n      .catch((err) => console.log(err));\n  };\n\n  /* ------------------------------ other Methods ----------------------------- */\n\n  // use this method in the state and some axios for get time\n  getNewDate() {\n    const d = new Date();\n    return d;\n  }\n\n  //this method transfer our counter to clock\n  calculateTime = () => {\n    if (this.state.play) {\n      const endTime = this.getNewDate().toLocaleTimeString(\"fr-FR\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n      const count = this.state.count;\n      const hour = Math.floor(count / 3600);\n      const baghi01 = count % 3600;\n      const min = Math.floor(baghi01 / 60);\n      const sec = baghi01 % 60;\n\n      this.setState((prevState) => {\n        return { count: ++prevState.count, hour, min, sec, endTime };\n      });\n    }\n  };\n\n  // REVIEW way to delete duplicate values in array\n  allDate = async () => {\n    const allDate = [];\n    for (let i in this.state.getDate) {\n      await allDate.push(this.state.getDate[i].date);\n    }\n\n    const unique = new Set(allDate);\n\n    const uniqueTimes = [...unique];\n\n    const sorted = _.orderBy(uniqueTimes, [], [\"desc\"]);\n\n    this.setState({ allDate: sorted });\n  };\n\n  sortPosts = () => {\n    const posts = [...this.state.getPosts];\n    // REVIEW if we have nested key in one Object like: (startTime in time and time in post) , we gotta write second argument in the orderBy as below, (access a nessted keys with . operator)\n    const sortPosts = _.orderBy(\n      posts,\n      [\"time.startTime\", \"time.endTime\", \"id\"],\n      [\"desc\", \"desc\", \"desc\"]\n    );\n    this.setState({ getPosts: sortPosts });\n  };\n\n  sortTags = () => {\n    const tags = [...this.state.getTags];\n    const sortTags = _.orderBy(tags, [\"id\"], [\"desc\"]);\n    this.setState({ getTags: sortTags });\n  };\n\n  fixNumbers = function(str) {\n    if (typeof str === \"string\") {\n      for (var i = 0; i < 10; i++) {\n        str = str.replace(this.persianNumbers[i], i);\n      }\n    }\n    return str;\n  };\n\n  showOrderPlayButton = (\n    description,\n    projectName,\n    projectId,\n    projectIndex,\n    activityName,\n    color\n  ) => {\n    this.setState({\n      description,\n      projectName,\n      projectId,\n      projectIndex,\n      activityName,\n      color,\n    });\n    this.handleStart();\n  };\n\n  editModalDetails = async (\n    description,\n    projectName,\n    projectId,\n    projectIndex,\n    activityName,\n    color,\n    startTime,\n    endTime,\n    date,\n    selectedTag,\n    postId\n  ) => {\n    await this.setState({\n      description,\n      projectName,\n      projectId,\n      projectIndex,\n      activityName,\n      color,\n      startTime,\n      endTime,\n      date,\n      selectedTag,\n      postId,\n    });\n\n    // REVIEW  for filtering 2 array together and export non same obj\n    const getTags = [...this.state.getTags];\n    const select = [...this.state.selectedTag];\n    const myArrayFiltered = getTags.filter((array) =>\n      select.every((filter) => filter.id !== array.id)\n    );\n\n    this.setState({ getTags: myArrayFiltered });\n  };\n\n  render() {\n    const { counter, play, hour, min, sec } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"panel-parent\">\n          <div className=\"panel-body container-fluid\">\n            <div className=\"row align-items-lg-center\">\n              <div className=\"col-12 col-lg-8\">\n                <div className=\"d-md-flex justify-content-md-around align-items-md-center mb-md-4 mb-lg-0\">\n                  <div className=\"container-fluid\">\n                    <div className=\"row\">\n                      <div className=\"d-flex col-md-4 align-items-center\">\n                        <label className=\"input-label d-lg-none mb-0 ml-2\">\n                          توضیحات\n                        </label>\n                        <input\n                          name=\"description\"\n                          className=\"form-control\"\n                          placeholder=\"توضیحات\"\n                          type=\"text\"\n                          value={\n                            !this.state.openEditModal\n                              ? this.state.description\n                              : \"\"\n                          }\n                          onChange={this.handleInputs}\n                        />\n                      </div>\n\n                      <div className=\"d-flex col-md-4 align-items-center\">\n                        <label className=\"input-label d-lg-none mb-0 ml-2\">\n                          پروژه\n                        </label>\n                        <select\n                          className={\n                            this.state.projectValidation\n                              ? \"form-control\"\n                              : \"form-control inputUnvalidation\"\n                          }\n                          name=\"projectName\"\n                          onChange={this.handleInputs}\n                          value={this.state.projectName}\n                        >\n                          <option value=\"\">پروژه</option>\n                          {!this.state.openEditModal &&\n                            this.state.getProjects.map((item, index) => {\n                              return (\n                                <option\n                                  key={index}\n                                  id={item.color}\n                                  projectid={item.id}\n                                  value={item.name}\n                                >\n                                  {item.name}\n                                </option>\n                              );\n                            })}\n                        </select>\n                      </div>\n\n                      <div className=\"d-flex col-md-4 align-items-center\">\n                        <label className=\"input-label d-lg-none mb-0 ml-2\">\n                          نوع فعالیت\n                        </label>\n                        <select\n                          className=\"form-control\"\n                          name=\"activityName\"\n                          value={this.state.activityName}\n                          onChange={this.handleInputs}\n                        >\n                          <option value=\"\">نوع فعالیت</option>\n                          {this.state.getTasktype.length > 0 &&\n                            this.state.getTasktype.map((task) => (\n                              <option\n                                key={task.id}\n                                value={task.activityName}\n                                activityid={task.id}\n                              >\n                                {task.activityName}\n                              </option>\n                            ))}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"panel-tag px-3 mt-3 mt-md-0\">\n                    <button\n                      className=\"w-20 text-center position-relative\"\n                      id=\"Tags\"\n                    >\n                      <i className=\"fa fa-tags\"></i>\n\n                      {!this.state.openEditModal &&\n                        this.state.selectedTag.length !== 0 && (\n                          <span className=\"badge badge-circle selected-tags-badge iranSansNum position-absolute\">\n                            {this.state.selectedTag.length}\n                          </span>\n                        )}\n\n                      <UncontrolledPopover\n                        target=\"Tags\"\n                        placement=\"bottom\"\n                        trigger=\"legacy\"\n                        className=\"tag-popover-parent\"\n                      >\n                        <PopoverBody>\n                          <div className=\"mb-3\">\n                            <input\n                              type=\"text\"\n                              name=\"tagName\"\n                              className=\"form-control\"\n                              placeholder=\"برچسب جدید\"\n                              value={this.state.tagName}\n                              onChange={this.handleInputs}\n                              onKeyPress={this.handlePressEnter}\n                            />\n                          </div>\n                          <div>\n                            {this.state.getTags.length > 0 ||\n                            this.state.selectedTag.length > 0 ? (\n                              <div>\n                                <div>\n                                  {this.state.selectedTag.length > 0 ? (\n                                    <div>\n                                      {this.state.selectedTag.map((item) => (\n                                        <span\n                                          key={item.id}\n                                          className=\"fs-12 pointer mr-2 badge badge-success\"\n                                        >\n                                          {item.name}\n\n                                          <i\n                                            className=\"fs-12 mr-2 fas fa-times\"\n                                            onClick={() =>\n                                              this.handleCloseSelectedTag(item)\n                                            }\n                                          ></i>\n                                        </span>\n                                      ))}\n                                    </div>\n                                  ) : null}\n                                </div>\n\n                                {this.state.getTags.length !== 0 && (\n                                  <div className=\"fs-12 available-tags-title\">\n                                    برچسب های موجود\n                                  </div>\n                                )}\n\n                                <div>\n                                  {this.state.getTags.map((item) => (\n                                    <span\n                                      key={item.id}\n                                      className=\"fs-12 pointer badge badge-secondary mr-2\"\n                                      onClick={() =>\n                                        this.handleSelectedTag(item.id)\n                                      }\n                                    >\n                                      {item.name}\n                                    </span>\n                                  ))}\n                                </div>\n                              </div>\n                            ) : null}\n                          </div>\n                        </PopoverBody>\n                      </UncontrolledPopover>\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-12 col-lg-4 d-lg-flex navCalculateAndModeBox \">\n                {!counter && (\n                  <div className=\"d-flex flex-column justify-content-center px-3 my-3 flex-md-row justify-content-md-between align-items-md-center p-lg-0 m-lg-0 ml-lg-3\">\n                    <div className=\"d-flex justify-content-around align-items-center flex-lg-column-reverse mw-70 ml-lg-3\">\n                      <label\n                        className={\n                          this.state.dateUnvalid\n                            ? \"input-label input-label-unvalidation\"\n                            : \"input-label\"\n                        }\n                      >\n                        تاریخ\n                      </label>\n                      <input\n                        name=\"date\"\n                        type=\"text\"\n                        className={\n                          this.state.dateUnvalid\n                            ? \"form-control iranSansNum text-center inputUnvalidation\"\n                            : \"form-control iranSansNum text-center\"\n                        }\n                        value={this.state.date}\n                        onChange={this.handleInputs}\n                      />\n                    </div>\n                    <div className=\"d-flex justify-content-around align-items-center flex-lg-column-reverse ml-lg-3\">\n                      <label\n                        className={\n                          this.state.startTimeUnvalidation\n                            ? \"input-label input-label-unvalidation\"\n                            : \"input-label\"\n                        }\n                      >\n                        شروع\n                      </label>\n                      <input\n                        type=\"text\"\n                        className={\n                          this.state.startTimeUnvalidation\n                            ? \"form-control panel-list-time text-center inputUnvalidation\"\n                            : \"form-control panel-list-time text-center\"\n                        }\n                        name=\"startTime\"\n                        value={this.state.startTime}\n                        onChange={this.handleInputs}\n                      />\n                    </div>\n                    <div className=\"d-flex justify-content-around align-items-center flex-lg-column-reverse\">\n                      <label\n                        className={\n                          this.state.endTimeUnvalidation\n                            ? \"input-label input-label-unvalidation\"\n                            : \"input-label\"\n                        }\n                      >\n                        اتمام\n                      </label>\n                      <input\n                        type=\"text\"\n                        className={\n                          this.state.endTimeUnvalidation\n                            ? \"form-control panel-list-time text-center inputUnvalidation\"\n                            : \"form-control panel-list-time text-center\"\n                        }\n                        name=\"endTime\"\n                        value={this.state.endTime}\n                        onChange={this.handleInputs}\n                      />\n                    </div>\n                  </div>\n                )}\n\n                <div\n                  className={\n                    counter\n                      ? \"d-flex justify-content-between align-items-center w-100\"\n                      : \"d-flex justify-content-between align-items-center justify-content-lg-end w-100\"\n                  }\n                >\n                  <div className={counter ? \"panel-timer\" : \"hidden d-lg-none\"}>\n                    <span className=\"iranSansNum\">\n                      {hour < 10 ? `0${hour}` : hour}\n                    </span>\n                    <span>:</span>\n                    <span className=\"iranSansNum\">\n                      {min < 10 ? `0${min}` : min}\n                    </span>\n                    <span>:</span>\n                    <span className=\"iranSansNum\">\n                      {sec < 10 ? `0${sec}` : sec}\n                    </span>\n                  </div>\n                  <div className=\"panel-calculate d-flex ml-n3\">\n                    <div className=\"panel-player ml-4\">\n                      {counter ? (\n                        <React.Fragment>\n                          <i\n                            onClick={() => {\n                              this.handleStart(play ? \"stop\" : \"play\");\n                            }}\n                            className={\n                              play\n                                ? \"fas fa-stop-circle fa-stop\"\n                                : \"fas fa-play-circle fa-play\"\n                            }\n                          ></i>\n                        </React.Fragment>\n                      ) : (\n                        <i\n                          className=\"fas fa-check-circle fa-select\"\n                          onClick={this.handleListSelect}\n                        ></i>\n                      )}\n                    </div>\n\n                    <div className=\"d-flex flex-column justify-content-around align-items-center panel-player-mode\">\n                      {!play ? (\n                        <React.Fragment>\n                          <span onClick={() => this.handlePlayerMode(\"list\")}>\n                            <i\n                              className={\n                                !counter\n                                  ? \"fas fa-list-ul player-mode-active\"\n                                  : \"fas fa-list-ul\"\n                              }\n                            ></i>\n                          </span>\n                          <span onClick={() => this.handlePlayerMode(\"clock\")}>\n                            <i\n                              className={\n                                counter\n                                  ? \"far fa-clock player-mode-active\"\n                                  : \"far fa-clock\"\n                              }\n                            ></i>\n                          </span>\n                        </React.Fragment>\n                      ) : (\n                        <i\n                          className=\"fas fa-times\"\n                          onClick={() => {\n                            this.handleStart(\"close\");\n                          }}\n                        ></i>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <ShowOrder\n          allDate={this.state.allDate}\n          posts={this.state.getPosts}\n          onDelete={this.handleDelete}\n          showOrderPlayButton={this.showOrderPlayButton}\n          play={this.state.play}\n          handleEditModal={this.handleEditModal}\n          editModalDetails={this.editModalDetails}\n        />\n\n        <div\n          className={\n            !this.state.projectValidation\n              ? \"projectUnvalidation fadeIn\"\n              : \"projectUnvalidation fadeOut hidden\"\n          }\n        >\n          <div>حتما باید یک پروژه انتخاب شود.</div>\n        </div>\n\n        {/* ---------------------------------- Modal --------------------------------- */}\n        <Modal\n          isOpen={this.state.openEditModal}\n          toggle={this.handleEditModal}\n          className=\"create-modal\"\n        >\n          <ModalHeader toggle={this.handleEditModal}>زمان</ModalHeader>\n          <ModalBody>\n            <div className=\"mb-5\">\n              <div className=\"d-flex align-items-center justify-content-between mb-2\">\n                <label className=\"input-label ml-3 mb-0\">توضیحات</label>\n                <input\n                  placeholder=\"توضیحات\"\n                  type=\"text\"\n                  name=\"description\"\n                  value={this.state.description}\n                  onChange={this.handleInputs}\n                  className=\"form-control w-80-i\"\n                />\n              </div>\n              <div className=\"d-flex align-items-center justify-content-between mb-2\">\n                <label className=\"input-label mb-0 ml-3\">پروژه</label>\n                <select\n                  className={\n                    this.state.projectValidation\n                      ? \"form-control w-80-i\"\n                      : \"form-control w-80-i inputUnvalidation\"\n                  }\n                  name=\"projectName\"\n                  onChange={this.handleInputs}\n                  value={this.state.projectName}\n                >\n                  <option value=\"\">پروژه</option>\n                  {/* {this.state.getProjects.map((item, index) => {\n                    return (\n                      <option key={index} id={item.color} value={item.name}>\n                        {item.name}\n                      </option>\n                    );\n                  })} */}\n                  {this.state.getProjects.map((item, index) => {\n                    return (\n                      <option\n                        key={index}\n                        id={item.color}\n                        projectid={item.id}\n                        value={item.name}\n                      >\n                        {item.name}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n              <div className=\"d-flex align-items-center justify-content-between mb-2\">\n                <label className=\"input-label mb-0 ml-3\">نوع فعالیت</label>\n                <select\n                  className=\"form-control w-80-i\"\n                  name=\"activityName\"\n                  value={this.state.activityName}\n                  onChange={this.handleInputs}\n                >\n                  <option value=\"\">نوع فعالیت</option>\n                  {this.state.getTasktype.length > 0 &&\n                    this.state.getTasktype.map((task) => (\n                      <option\n                        key={task.id}\n                        value={task.activityName}\n                        activityid={task.id}\n                      >\n                        {task.activityName}\n                      </option>\n                    ))}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"mb-4 d-flex flex-column justify-content-center px-3 my-3\">\n              <div className=\"d-flex justify-content-around align-items-center mb-3\">\n                <label\n                  className={\n                    this.state.dateUnvalid\n                      ? \"input-label input-label-unvalidation\"\n                      : \"input-label\"\n                  }\n                >\n                  تاریخ\n                </label>\n                <input\n                  name=\"date\"\n                  type=\"text\"\n                  className={\n                    this.state.dateUnvalid\n                      ? \"form-control iranSansNum text-center w-80-i inputUnvalidation\"\n                      : \"form-control iranSansNum text-center w-80-i\"\n                  }\n                  value={this.state.date}\n                  onChange={this.handleInputs}\n                />\n              </div>\n              <div className=\"d-flex justify-content-around align-items-center mb-3\">\n                <label\n                  className={\n                    this.state.startTimeUnvalidation\n                      ? \"input-label input-label-unvalidation\"\n                      : \"input-label\"\n                  }\n                >\n                  شروع\n                </label>\n                <input\n                  type=\"text\"\n                  className={\n                    this.state.startTimeUnvalidation\n                      ? \"form-control panel-list-time text-center w-80-i inputUnvalidation\"\n                      : \"form-control panel-list-time text-center w-80-i\"\n                  }\n                  name=\"startTime\"\n                  value={this.state.startTime}\n                  onChange={this.handleInputs}\n                />\n              </div>\n              <div className=\"d-flex justify-content-around align-items-center\">\n                <label\n                  className={\n                    this.state.endTimeUnvalidation\n                      ? \"input-label input-label-unvalidation\"\n                      : \"input-label\"\n                  }\n                >\n                  اتمام\n                </label>\n                <input\n                  type=\"text\"\n                  className={\n                    this.state.endTimeUnvalidation\n                      ? \"form-control panel-list-time text-center w-80-i inputUnvalidation\"\n                      : \"form-control panel-list-time text-center w-80-i\"\n                  }\n                  name=\"endTime\"\n                  value={this.state.endTime}\n                  onChange={this.handleInputs}\n                />\n              </div>\n              <div>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <div className=\"d-flex align-items-center justify-content-around w-75\">\n                    <label className=\"input-label\">برچسب ها</label>\n                    <input\n                      type=\"text\"\n                      name=\"tagName\"\n                      className=\"form-control w-50\"\n                      placeholder=\"برچسب جدید\"\n                      value={this.state.tagName}\n                      onChange={this.handleInputs}\n                      onKeyPress={this.handlePressEnter}\n                    />\n                  </div>\n\n                  <div>\n                    {this.state.getTags.map((item) => (\n                      <span\n                        key={item.id}\n                        className=\"fs-12 pointer badge badge-secondary mr-2\"\n                        onClick={() => this.handleSelectedTag(item.id)}\n                      >\n                        {item.name}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n\n                {this.state.selectedTag.length > 0 ? (\n                  <div>\n                    {this.state.selectedTag.map((item) => (\n                      <span\n                        key={item.id}\n                        className=\"fs-12 pointer mr-2 badge badge-success\"\n                      >\n                        {item.name}\n\n                        <i\n                          className=\"fs-12 mr-2 fas fa-times\"\n                          onClick={() => this.handleCloseSelectedTag(item)}\n                        ></i>\n                      </span>\n                    ))}\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          </ModalBody>\n          <ModalFooter className=\"editPostFooterModal\">\n            <button\n              className=\"btn btn-secondary px-3 py-2\"\n              onClick={() => {\n                this.handleEditModal();\n              }}\n            >\n              انصراف\n            </button>\n            <button\n              className=\"btn btn-primary px-3 py-2 px-3\"\n              onClick={() => {\n                this.handleListSelect(\"modal\");\n              }}\n            >\n              ذخیره\n            </button>\n          </ModalFooter>\n        </Modal>\n\n        {/* -------------------------------------------------------------------------- */}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default CreateOrder;\n","import React, { Component } from \"react\";\nimport CreateOrder from \"./PanelTimeComponents/CreateOrder\";\n\nclass PanelTime extends Component {\n  state = {};\n  render() {\n    return (\n      <React.Fragment>\n        <CreateOrder />\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PanelTime;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Popover,\n  PopoverBody,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"reactstrap\";\n\nclass Projects extends Component {\n  /* -------------------------- state and properties -------------------------- */\n  state = {\n    modalToggle: false,\n    editProjectModal: false,\n    popoverToggle: false,\n    getColors: [],\n    getProjects: [],\n    getPosts: [],\n    getClient: [],\n    currentColor: \"\",\n    projectName: \"\",\n    projectId: 0,\n    projectIndex: 0,\n    budget: \"\",\n    color: \"\",\n    clientName: \"\",\n    clientId: null,\n    searchName: \"\",\n    searchBudget: \"\",\n    searchCustomer: \"\",\n    projectUnvalidation: false,\n    signIn: true,\n    admin: false,\n    newProjectID: null,\n  };\n\n  resetModalAndPopOverAndCreateProjectProperties = {\n    modalToggle: false,\n    editProjectModal: false,\n    popoverToggle: false,\n    projectName: \"\",\n    projectId: 0,\n    projectIndex: 0,\n    budget: \"\",\n    color: \"\",\n    clientName: \"\",\n    clientId: null,\n    signIn: true,\n    admin: false,\n  };\n\n  resetSearchProperties = {\n    searchName: \"\",\n    searchBudget: \"\",\n    searchCustomer: \"مشتری\",\n  };\n\n  Unmount = false;\n\n  /* ----------------------------- lifecycle hooks ---------------------------- */\n\n  componentDidMount = () => {\n    this.getClient();\n    this.getPosts();\n    this.getColors();\n    this.getProjects();\n  };\n\n  componentDidUpdate = () => {\n    if (!this.state.currentColor.length === 0) {\n      this.randomColor();\n    }\n  };\n\n  componentWillUnmount = () => {\n    this.Unmount = true;\n  };\n\n  /* ---------------------------------- axios --------------------------------- */\n\n  getClient = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/client\",\n    })\n      .then((res) => {\n        if (this.Unmount) return;\n        this.setState({ getClient: [...res.data] });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  getPosts = () => {\n    axios({ url: \"https://minit-server-app.herokuapp.com/posts\" })\n      .then((response) => {\n        if (this.Unmount) return;\n        this.setState({ getPosts: response.data });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  getColors = () => {\n    axios({ url: \"https://minit-server-app.herokuapp.com/colors\" })\n      .then((response) => {\n        if (this.Unmount) return;\n        this.setState({\n          getColors: response.data,\n        });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  getProjects = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/projects\",\n    })\n      .then((response) => {\n        if (this.Unmount) return;\n        this.setState({ getProjects: response.data });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  postProject = async () => {\n    const {\n      projectName,\n      currentColor,\n      signIn,\n      admin,\n      budget,\n      projectId,\n      clientName,\n      clientId,\n    } = this.state;\n\n    if (this.state.editProjectModal) {\n      await axios({\n        url: `https://minit-server-app.herokuapp.com/projects/${projectId}`,\n        method: \"DELETE\",\n      })\n        .then((res) => {\n          return;\n        })\n        .catch((err) => console.log(err));\n    }\n\n    if (this.state.projectName.length > 0) {\n      await axios({\n        url: \"https://minit-server-app.herokuapp.com/projects\",\n        method: \"POST\",\n        data: {\n          name: projectName,\n          color: currentColor,\n          clientName,\n          clientId,\n          budget: budget === \"\" ? 0 : budget,\n          projectAccess: {\n            admin,\n            signIn,\n          },\n          id: this.state.newProjectID,\n        },\n      })\n        .then((response) => {\n          const { searchBudget, searchName, searchCustomer } = this.state;\n          if (this.Unmount) return;\n\n          // NOTE  this statements below used if we are searching a project and also made a one project or edit it\n          if (\n            searchBudget.length > 0 ||\n            searchCustomer.length > 0 ||\n            searchName.length > 0\n          ) {\n            if (\n              (searchName.length > 0\n                ? response.data.name === searchName\n                : true) &&\n              (searchBudget.length > 0\n                ? Number(response.data.budget) === Number(searchBudget)\n                : true) &&\n              (searchCustomer.length > 0\n                ? searchCustomer === response.data.customer\n                : true)\n            ) {\n              // this.state.getProjects.push(response.data);\n              this.setState((prevState) => {\n                if (this.state.editProjectModal) {\n                  prevState.getProjects.splice(this.state.projectIndex, 1);\n                }\n                prevState.getProjects.push(response.data);\n              });\n              this.setState({\n                ...this.resetModalAndPopOverAndCreateProjectProperties,\n              });\n              return;\n            } else {\n              this.getProjects();\n              this.setState({\n                ...this.resetModalAndPopOverAndCreateProjectProperties,\n              });\n              return;\n            }\n          }\n          this.getProjects();\n\n          this.handleChangePosts(projectName, projectId, currentColor);\n\n          this.setState({\n            ...this.resetModalAndPopOverAndCreateProjectProperties,\n          });\n        })\n        .catch((err) => console.log(err));\n    } else {\n      this.setState({ projectUnvalidation: true });\n      setTimeout(() => {\n        this.setState({ projectUnvalidation: false });\n      }, 2000);\n    }\n  };\n\n  /* ---------------- handle Methods --------------- */\n\n  handleChangePosts = (projectName, projectId, currentColor) => {\n    const getPosts = [...this.state.getPosts];\n\n    const newGP = getPosts.filter((value) => value.projectId === projectId);\n\n    newGP.forEach(\n      async (item) =>\n        await this.handleDeletePostsAndCreateANewOne(\n          item,\n          projectName,\n          projectId,\n          currentColor\n        )\n    );\n  };\n\n  handleDeletePostsAndCreateANewOne = async (\n    item,\n    projectName,\n    projectId,\n    currentColor\n  ) => {\n    const {\n      description,\n      projectIndex,\n      activityName,\n      tagName,\n      time,\n      date,\n      id,\n    } = item;\n\n    await axios({\n      url: \"https://minit-server-app.herokuapp.com/posts\",\n      method: \"POST\",\n      data: {\n        description,\n        projectId,\n        projectName,\n        projectIndex,\n        color: currentColor,\n        activityName,\n        tagName,\n        time,\n        date,\n        id,\n      },\n    })\n      .then((res) => {\n        return;\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleModalToggle = () => {\n    const modalToggle = !this.state.modalToggle;\n    if (modalToggle) {\n      this.randomColor();\n      this.setState({ ...this.resetModalAndPopOverAndCreateProjectProperties });\n    }\n    this.setState({ modalToggle });\n  };\n\n  handlePopover = () => {\n    const popoverToggle = !this.state.popoverToggle;\n    this.setState({ popoverToggle });\n  };\n\n  handleInputs = (e) => {\n    const { name } = e.currentTarget;\n    const { value } = e.target;\n\n    if (name === \"clientName\") {\n      const index = e.target.selectedIndex;\n      const item = e.target[index];\n      const clientId = Number(item.getAttribute(\"clientid\"));\n      this.setState({ clientId });\n    }\n    this.setState({ [name]: value });\n  };\n\n  handleCheckBox = (e) => {\n    const { name } = e.target;\n    this.setState({ [name]: !this.state[name] });\n  };\n\n  handleColorPick = (color) => {\n    this.setState({ currentColor: color });\n  };\n\n  handleDeletePostsAndDates = (id) => {\n    axios({\n      url: `https://minit-server-app.herokuapp.com/posts/${id}`,\n      method: \"DELETE\",\n    })\n      .then((res) => {\n        return;\n      })\n      .catch((err) => console.log(err));\n\n    axios({\n      url: `https://minit-server-app.herokuapp.com/date/${id}`,\n      method: \"DELETE\",\n    })\n      .then((res) => {\n        return;\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleDeleteProject = (id, item) => {\n    const getPosts = [...this.state.getPosts];\n\n    const newGP = getPosts.filter((value) => value.projectId === id);\n\n    newGP.forEach((value) => this.handleDeletePostsAndDates(value.id));\n\n    axios({\n      url: `https://minit-server-app.herokuapp.com/projects/${id}`,\n      method: \"DELETE\",\n    })\n      .then((response) => {\n        const { searchBudget, searchName, searchCustomer } = this.state;\n\n        if (\n          searchBudget.length > 0 ||\n          searchCustomer.length > 0 ||\n          searchName.length > 0\n        ) {\n          if (\n            (searchName.length > 0 ? item.name === searchName : true) &&\n            (searchBudget.length > 0\n              ? Number(item.budget) === Number(searchBudget)\n              : true)\n          ) {\n            const getProjects = [...this.state.getProjects];\n            const index = getProjects.indexOf(item);\n\n            getProjects.splice(index, 1);\n            this.setState({ getProjects });\n\n            return;\n          } else {\n            return;\n          }\n        }\n\n        this.getProjects();\n        this.setState({ ...this.resetSearchProperties });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handleSearch = () => {\n    const { searchName, searchBudget, searchCustomer } = this.state;\n\n    const regExpSearchName = new RegExp(`${searchName}`, \"i\");\n\n    const getProjects = this.state.getProjects.filter((item) => {\n      if (\n        (searchName.length > 0\n          ? regExpSearchName.test(item.name)\n            ? searchName.length === item.name.length\n            : false\n          : true) &&\n        (searchBudget.length > 0\n          ? Number(item.budget) === Number(searchBudget)\n          : true) &&\n        (searchCustomer.length > 0 ? searchCustomer === item.clientName : true)\n      ) {\n        return item;\n      }\n      return 0;\n    });\n\n    this.setState({ getProjects });\n  };\n\n  handlEditProjects = (\n    projectName,\n    color,\n    budget,\n    clientName,\n    clientId,\n    signIn,\n    admin,\n    projectId,\n    item\n  ) => {\n    const getProjects = [...this.state.getProjects];\n    const projectIndex = getProjects.indexOf(item);\n\n    this.setState({\n      projectName,\n      color,\n      currentColor: color,\n      budget,\n      clientName,\n      clientId,\n      signIn,\n      admin,\n      modalToggle: true,\n      editProjectModal: true,\n      projectId,\n      projectIndex,\n      newProjectID: projectId,\n    });\n  };\n\n  handleResetSearch = () => {\n    this.getProjects();\n    this.setState({ ...this.resetSearchProperties });\n  };\n  /* ------------------------------ other Methods ----------------------------- */\n  randomColor = async () => {\n    const getColors = [...this.state.getColors];\n    const number = Math.floor(Math.random() * 20);\n    const currentColor = getColors[number];\n\n    const rgb = { ...currentColor };\n\n    await this.setState({ currentColor: rgb.color });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"projects h-100\">\n          <div className=\"projects-header px-3 d-flex justify-content-between align-items-center\">\n            <h1 className=\"h2\">پروژه</h1>\n            <button\n              className=\"btn btn-success btn-project\"\n              onClick={this.handleModalToggle}\n            >\n              ایجاد\n            </button>\n          </div>\n\n          {/* ---------------------------------- modal --------------------------------- */}\n          <Modal\n            isOpen={this.state.modalToggle}\n            toggle={this.handleModalToggle}\n            className=\"create-modal\"\n            onClick={() => {\n              this.setState({ popoverToggle: false });\n            }}\n          >\n            <ModalHeader toggle={this.handleModalToggle}>پروژه</ModalHeader>\n            <ModalBody>\n              <div>\n                <div className=\"d-flex justify-content-between align-items-center\">\n                  <input\n                    className={\n                      this.state.projectUnvalidation\n                        ? \"inputUnvalidation form-control\"\n                        : \"form-control\"\n                    }\n                    type=\"text\"\n                    placeholder=\"نام پروژه\"\n                    name=\"projectName\"\n                    value={this.state.projectName}\n                    onChange={this.handleInputs}\n                  />\n                  <div\n                    className=\"btn-color pointer bg-white d-flex justify-content-between align-items-center mr-2\"\n                    id=\"colorPickPopover\"\n                  >\n                    <div\n                      className=\"m-1 color\"\n                      style={{\n                        backgroundColor: this.state.currentColor,\n                      }}\n                    ></div>\n                    <i className=\"fas fa-caret-down\"></i>\n                  </div>\n                  {/* -------------------------- Color Select Popover -------------------------- */}\n\n                  <Popover\n                    placement=\"bottom\"\n                    isOpen={this.state.popoverToggle}\n                    target=\"colorPickPopover\"\n                    toggle={this.handlePopover}\n                  >\n                    <PopoverBody className=\"colorPick-popover-body d-flex flex-wrap justify-content-around \">\n                      {this.state.getColors.map((item, index) => {\n                        return (\n                          <div\n                            key={index}\n                            className=\"color pointer\"\n                            style={{ backgroundColor: item.color }}\n                            color={item.color}\n                            onClick={() => {\n                              this.handleColorPick(item.color);\n                            }}\n                          ></div>\n                        );\n                      })}\n                    </PopoverBody>\n                  </Popover>\n\n                  {/* -------------------------------------------------------------------------- */}\n                </div>\n\n                <div>\n                  <input\n                    className=\"form-control w-100\"\n                    type=\"text\"\n                    placeholder=\"بودجه زمانی (نفر ساعت)\"\n                    name=\"budget\"\n                    value={this.state.budget}\n                    onChange={this.handleInputs}\n                  />\n                </div>\n\n                <div>\n                  <select\n                    className=\"form-control w-100\"\n                    value={this.state.clientName}\n                    name=\"clientName\"\n                    onChange={this.handleInputs}\n                  >\n                    <option value=\"\">مشتری</option>\n                    {this.state.getClient.length > 0\n                      ? this.state.getClient.map((client) => (\n                          <option\n                            key={client.id}\n                            value={client.clientName}\n                            clientid={client.id}\n                          >\n                            {client.clientName}\n                          </option>\n                        ))\n                      : null}\n                  </select>\n                </div>\n              </div>\n\n              <div className=\"mt-5 container\">\n                <div className=\"row\">\n                  <div className=\"col-10 mx-auto\">\n                    <div className=\"text-center font-weight-bold mb-3\">\n                      دسترسی پروژه\n                    </div>\n                    <table className=\"table\">\n                      <thead className=\"project-access-thead\">\n                        <tr>\n                          <th className=\"w-71px\">مدیریت</th>\n                          <th className=\"w-71px\">عضویت</th>\n                          <th></th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"w-71px\">\n                            <input\n                              type=\"checkbox\"\n                              name=\"admin\"\n                              onChange={this.handleCheckBox}\n                              checked={this.state.admin}\n                            />\n                          </td>\n                          <td className=\"w-71px\">\n                            <input\n                              name=\"signIn\"\n                              type=\"checkbox\"\n                              checked={this.state.signIn}\n                              onChange={this.handleCheckBox}\n                            />\n                          </td>\n                          <td className=\"text-left\">کاربر</td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <button\n                className=\"btn btn-success btn-project w-auto\"\n                onClick={this.postProject}\n              >\n                ثبت\n              </button>{\" \"}\n              <button\n                className=\"btn btn-danger btn-project w-auto\"\n                onClick={this.handleModalToggle}\n              >\n                انصراف\n              </button>\n            </ModalFooter>\n          </Modal>\n          {/* -------------------------------------------------------------------------- */}\n\n          <div className=\"projects-search bg-white mx-3 px-3 py-2 d-lg-flex justify-content-lg-between\">\n            <div className=\"d-lg-flex align-items-lg-center flex-lg-grow-1\">\n              <div className=\"px-3 projects-search-items\">\n                <input\n                  placeholder=\"نام\"\n                  className=\"form-control w-100 mb-3\"\n                  type=\"text\"\n                  name=\"searchName\"\n                  value={this.state.searchName}\n                  onChange={this.handleInputs}\n                />\n              </div>\n              <div className=\"px-3 projects-search-items\">\n                <input\n                  placeholder=\"بودجه زمانی\"\n                  className=\"form-control w-100 mb-3\"\n                  type=\"text\"\n                  name=\"searchBudget\"\n                  value={this.state.searchBudget}\n                  onChange={this.handleInputs}\n                />\n              </div>\n              <div className=\"px-3 projects-search-items\">\n                <select\n                  value={this.state.searchCustomer}\n                  className=\"form-control w-100 mb-3\"\n                  name=\"searchCustomer\"\n                  onChange={this.handleInputs}\n                >\n                  <option value=\"\">مشتری</option>\n                  {this.state.getClient.length > 0\n                    ? this.state.getClient.map((client) => (\n                        <option\n                          key={client.id}\n                          value={client.clientName}\n                          clientid={client.id}\n                        >\n                          {client.clientName}\n                        </option>\n                      ))\n                    : null}\n                </select>\n              </div>\n            </div>\n\n            <div className=\"d-flex justify-content-end align-items-center\">\n              <div className=\"d-flex justify-content-between align-items-center pr-3 py-2\">\n                <button\n                  className=\"btn btn-projects-search\"\n                  onClick={this.handleSearch}\n                >\n                  <i className=\"fas fa-search\"></i>\n                </button>\n                <button\n                  className=\"btn btn-projects-search mr-2\"\n                  onClick={this.handleResetSearch}\n                >\n                  <i className=\"fas fa-times\"></i>\n                </button>\n              </div>\n            </div>\n          </div>\n\n          {this.state.getProjects.length === 0 ? (\n            <div className=\"p-3 mx-3 fs-12 text-muted\">موردی یافت نشد.</div>\n          ) : (\n            <div className=\"table-responsive px-4\">\n              <table className=\"table showProjects\">\n                <thead>\n                  <tr>\n                    <td>نام</td>\n                    <td>بودجه زمانی (نفر ساعت)</td>\n                    <td>مشتری</td>\n                    <td></td>\n                    <td></td>\n                    <td>\n                      <i\n                        className=\"pointer fas fa-sync-alt\"\n                        onClick={this.handleSearch}\n                      ></i>\n                    </td>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {this.state.getProjects.map((item, index) => {\n                    return (\n                      <tr key={index}>\n                        <td className=\"pointer\" style={{ color: item.color }}>\n                          {item.name}\n                        </td>\n                        <td className=\"pointer iranSansNum\">{item.budget}</td>\n                        <td className=\"pointer\">{item.clientName}</td>\n                        <td>\n                          <i\n                            className=\"pointer fas fa-pencil-alt\"\n                            onClick={() =>\n                              this.handlEditProjects(\n                                item.name,\n                                item.color,\n                                item.budget,\n                                item.clientName,\n                                item.clientId,\n                                item.projectAccess.signIn,\n                                item.projectAccess.admin,\n                                item.id,\n                                item\n                              )\n                            }\n                          ></i>\n                        </td>\n                        <td>\n                          <i\n                            className=\"pointer fas fa-times\"\n                            onClick={() => {\n                              this.handleDeleteProject(item.id, item);\n                            }}\n                          ></i>\n                        </td>\n                        <td></td>\n                      </tr>\n                    );\n                  })}\n                </tbody>\n              </table>\n            </div>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Projects;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalBody, ModalFooter } from \"reactstrap\";\n\nclass TaskType extends Component {\n  /* ------------------------------- properties ------------------------------- */\n\n  state = {\n    getPosts: [],\n    getTasktype: [],\n    activityName: \"\",\n    activityId: null,\n    pay: false,\n    openEditModal: false\n  };\n\n  resetState = {\n    activityName: \"\",\n    activityId: null,\n    pay: false,\n    openEditModal: false\n  };\n\n  Unmount = false;\n\n  /* ----------------------------- lifecycle hooks ---------------------------- */\n\n  componentDidMount = () => {\n    this.getTasktype();\n    this.getPosts();\n  };\n\n  componentWillUnmount = () => {\n    this.Unmount = true;\n  };\n\n  /* ------------------------------ axios method ------------------------------ */\n  postTasktype = () => {\n    const { activityName, pay, activityId } = this.state;\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/tasktype\",\n      method: \"POST\",\n      data: {\n        activityName,\n        pay,\n        id: activityId !== null ? activityId : null\n      }\n    })\n      .then(async res => {\n        if (this.Unmount) return;\n        await this.getTasktype();\n      })\n      .catch(err => console.log(err));\n  };\n\n  getTasktype = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/tasktype\"\n    })\n      .then(res => {\n        if (this.Unmount) return;\n        if (!this.state.openEditModal) {\n          this.setState({\n            getTasktype: [...res.data],\n            ...this.resetState\n          });\n        } else {\n          this.setState({\n            getTasktype: [...res.data]\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  deleteTasktype = async (id, mode) => {\n    const getPosts = [...this.state.getPosts];\n    const newGP = getPosts.filter(item => item.activityId === id);\n\n    newGP.forEach(\n      async item => await this.handleDeletePostsAndCreateANewOne(item, mode)\n    );\n\n    await axios({\n      url: `https://minit-server-app.herokuapp.com/tasktype/${id}`,\n      method: \"DELETE\"\n    })\n      .then(res => {\n        if (this.Unmount) return;\n        this.getTasktype();\n        this.setState({ ...this.resetState });\n      })\n      .catch(err => console.log(err));\n  };\n\n  getPosts = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/posts\"\n    }).then(res => this.setState({ getPosts: [...res.data] }));\n  };\n\n  /* ----------------------------- handle Methods ----------------------------- */\n\n  handleInputs = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleCheckbox = e => {\n    const { name } = e.target;\n    this.setState({ [name]: !this.state[name] });\n  };\n  handleEditModal = async () => {\n    const openEditModal = !this.state.openEditModal;\n    if (!openEditModal) {\n      this.setState({ ...this.resetState });\n    }\n    await this.setState({ openEditModal });\n  };\n\n  handleEditTask = item => {\n    const { activityName, pay, id: activityId } = item;\n    this.setState({ activityName, pay, activityId });\n  };\n\n  handleEditTaskSubmit = async () => {\n    const { activityId } = this.state;\n\n    const getPosts = [...this.state.getPosts];\n    const newGP = getPosts.filter(item => item.activityId === activityId);\n\n    await axios({\n      url: `https://minit-server-app.herokuapp.com/tasktype/${activityId}`,\n      method: \"DELETE\"\n    })\n      .then(async res => {\n        if ((await newGP.length) > 0) {\n          await newGP.forEach(async value => {\n            await this.handleDeletePostsAndCreateANewOne(value, \"edit\");\n          });\n        }\n        await this.postTasktype();\n      })\n      .catch(err => console.log(err));\n\n    await this.setState({ ...this.resetState });\n  };\n\n  handleDeletePostsAndCreateANewOne = async (item, mode) => {\n    const {\n      description,\n      projectIndex,\n      projectName,\n      projectId,\n      color,\n      tagName,\n      time,\n      date,\n      id\n    } = item;\n\n    if (mode === \"delete\") {\n      const activityName = \"\";\n      const activityId = null;\n\n      this.setState({ activityName, activityId });\n    }\n\n    const { activityName, activityId } = this.state;\n\n    await axios({\n      url: `https://minit-server-app.herokuapp.com/posts/${item.id}`,\n      method: \"DELETE\"\n    }).then(res => {\n      axios({\n        url: \"https://minit-server-app.herokuapp.com/posts\",\n        method: \"POST\",\n        data: {\n          description,\n          projectId,\n          projectName,\n          projectIndex,\n          color,\n          activityName,\n          activityId,\n          tagName,\n          time,\n          date,\n          id\n        }\n      })\n        .then(res => {\n          return;\n        })\n        .catch(err => console.log(err));\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"tasktype-parent h-100 px-3\">\n        <div className=\"tasktype-header\">نوع فعالیت</div>\n\n        <div className=\"tasktype-body container\">\n          <div className=\"row justify-content-center align-items-center py-3\">\n            <div className=\"col-12 col-md-8 col-lg-7 col-xl-5\">\n              <div className=\"d-flex align-items-center\">\n                <input\n                  name=\"activityName\"\n                  value={\n                    !this.state.openEditModal ? this.state.activityName : \"\"\n                  }\n                  onChange={this.handleInputs}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"نام\"\n                />\n                <button\n                  className=\"btn btn-success mr-3\"\n                  onClick={\n                    this.state.activityName.length > 0\n                      ? this.postTasktype\n                      : null\n                  }\n                >\n                  ایجاد\n                </button>\n              </div>\n\n              <div className=\"d-flex align-items-center\">\n                <input\n                  name=\"pay\"\n                  onChange={this.handleCheckbox}\n                  type=\"checkbox\"\n                  checked={!this.state.openEditModal && this.state.pay}\n                />\n                <span className=\"mr-1\">پولی</span>\n              </div>\n            </div>\n          </div>\n          {this.state.getTasktype.length > 0 && (\n            <div className=\"py-3\">\n              {this.state.getTasktype.map(item => (\n                <span\n                  key={item.id}\n                  className=\"badge badge-secondary ml-2 fs-14 font-weight-normal mb-2\"\n                >\n                  {item.activityName}\n\n                  <i\n                    className=\"fas fs-14 fa-pencil-alt mr-1\"\n                    onClick={() => {\n                      this.handleEditModal();\n                      this.handleEditTask(item);\n                    }}\n                  ></i>\n\n                  <i\n                    className=\"fas fs-14 fa-times mr-1\"\n                    onClick={() => {\n                      this.deleteTasktype(item.id, \"delete\");\n                    }}\n                  ></i>\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n\n        <Modal\n          isOpen={this.state.openEditModal}\n          toggle={this.handleEditModal}\n          className=\"create-modal\"\n        >\n          <ModalBody>\n            <div className=\"container\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-12 col-sm-10 col-md-8\">\n                  <div className=\"mb-3\">\n                    <input\n                      name=\"activityName\"\n                      type=\"text\"\n                      className=\"form-control w-100\"\n                      placeholder=\"نام\"\n                      value={this.state.activityName}\n                      onChange={this.handleInputs}\n                    />\n                  </div>\n                  <div className=\"d-flex align-items-center\">\n                    <input\n                      name=\"pay\"\n                      onChange={this.handleCheckbox}\n                      type=\"checkbox\"\n                      checked={this.state.pay}\n                    />\n                    <span className=\"mr-1\">پولی</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <div>\n              <button\n                className=\"btn btn-padding-orginal btn-secondary\"\n                onClick={() => this.setState({ ...this.resetState })}\n              >\n                انصراف\n              </button>\n              <button\n                onClick={this.handleEditTaskSubmit}\n                className=\"btn btn-padding-orginal btn-primary mr-2\"\n              >\n                ثبت تغییرات\n              </button>\n            </div>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default TaskType;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Modal, ModalBody, ModalFooter } from \"reactstrap\";\n\nclass Client extends Component {\n  /* ------------------------------- properties ------------------------------- */\n\n  state = {\n    getProjects: [],\n    getClient: [],\n    clientName: \"\",\n    clientId: null,\n    openEditModal: false\n  };\n\n  resetState = {\n    clientName: \"\",\n    clientId: null,\n    openEditModal: false\n  };\n\n  Unmount = false;\n\n  /* ----------------------------- lifecycle hooks ---------------------------- */\n\n  componentDidMount = () => {\n    this.getClient();\n    this.getProjects();\n  };\n\n  componentWillUnmount = () => {\n    this.Unmount = true;\n  };\n\n  /* ------------------------------ axios method ------------------------------ */\n  postClient = () => {\n    const { clientName, pay, clientId } = this.state;\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/client\",\n      method: \"POST\",\n      data: {\n        clientName,\n        pay,\n        id: clientId !== null ? clientId : null\n      }\n    })\n      .then(async res => {\n        if (this.Unmount) return;\n        await this.getClient();\n      })\n      .catch(err => console.log(err));\n  };\n\n  getClient = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/client\"\n    })\n      .then(res => {\n        if (this.Unmount) return;\n        if (!this.state.openEditModal) {\n          this.setState({\n            getClient: [...res.data],\n            ...this.resetState\n          });\n        } else {\n          this.setState({\n            getClient: [...res.data]\n          });\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  deleteClient = async (id, mode) => {\n    const getProjects = [...this.state.getProjects];\n    const newGP = getProjects.filter(item => item.clientId === id);\n\n    newGP.forEach(\n      async item => await this.handleDeletePostsAndCreateANewOne(item, mode)\n    );\n\n    await axios({\n      url: `https://minit-server-app.herokuapp.com/client/${id}`,\n      method: \"DELETE\"\n    })\n      .then(res => {\n        if (this.Unmount) return;\n        this.getClient();\n        this.setState({ ...this.resetState });\n      })\n      .catch(err => console.log(err));\n  };\n\n  getProjects = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/projects\"\n    }).then(res => this.setState({ getProjects: [...res.data] }));\n  };\n\n  /* ----------------------------- handle Methods ----------------------------- */\n\n  handleInputs = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleEditModal = async () => {\n    const openEditModal = !this.state.openEditModal;\n    if (!openEditModal) {\n      this.setState({ ...this.resetState });\n    }\n    await this.setState({ openEditModal });\n  };\n\n  handleEditTask = item => {\n    const { clientName, id: clientId } = item;\n    this.setState({ clientName, clientId });\n  };\n\n  handleEditTaskSubmit = async () => {\n    const { clientId } = this.state;\n\n    const getProjects = [...this.state.getProjects];\n    const newGP = getProjects.filter(item => item.clientId === clientId);\n\n    await axios({\n      url: `https://minit-server-app.herokuapp.com/client/${clientId}`,\n      method: \"DELETE\"\n    })\n      .then(async res => {\n        if ((await newGP.length) > 0) {\n          await newGP.forEach(async value => {\n            await this.handleDeletePostsAndCreateANewOne(value, \"edit\");\n          });\n        }\n        await this.postClient();\n      })\n      .catch(err => console.log(err));\n\n    await this.setState({ ...this.resetState });\n  };\n\n  handleDeletePostsAndCreateANewOne = async (item, mode) => {\n    const { name, color, budget, projectAccess, id } = item;\n\n    if (mode === \"delete\") {\n      const clientName = \"\";\n      const clientId = null;\n\n      this.setState({ clientName, clientId });\n    }\n\n    const { clientName, clientId } = this.state;\n\n    await axios({\n      url: `https://minit-server-app.herokuapp.com/projects/${item.id}`,\n      method: \"DELETE\"\n    }).then(res => {\n      axios({\n        url: \"https://minit-server-app.herokuapp.com/projects\",\n        method: \"POST\",\n        data: {\n          name,\n          color,\n          budget,\n          projectAccess,\n          clientName,\n          clientId,\n          id\n        }\n      })\n        .then(res => {\n          return;\n        })\n        .catch(err => console.log(err));\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"client-parent h-100 px-3\">\n        <div className=\"client-header\">مشتری</div>\n\n        <div className=\"client-body container\">\n          <div className=\"row justify-content-center align-items-center py-3\">\n            <div className=\"col-12 col-md-8 col-lg-7 col-xl-5\">\n              <div className=\"d-flex align-items-center\">\n                <input\n                  name=\"clientName\"\n                  value={!this.state.openEditModal ? this.state.clientName : \"\"}\n                  onChange={this.handleInputs}\n                  type=\"text\"\n                  className=\"form-control\"\n                  placeholder=\"نام\"\n                />\n                <button\n                  className=\"btn btn-success mr-3\"\n                  onClick={\n                    this.state.clientName.length > 0 ? this.postClient : null\n                  }\n                >\n                  ایجاد\n                </button>\n              </div>\n            </div>\n          </div>\n          {this.state.getClient.length > 0 && (\n            <div className=\"py-3\">\n              {this.state.getClient.map(item => (\n                <span\n                  key={item.id}\n                  className=\"badge badge-secondary ml-2 fs-14 font-weight-normal mb-2\"\n                >\n                  {item.clientName}\n\n                  <i\n                    className=\"fas fs-14 fa-pencil-alt mr-1\"\n                    onClick={() => {\n                      this.handleEditModal();\n                      this.handleEditTask(item);\n                    }}\n                  ></i>\n\n                  <i\n                    className=\"fas fs-14 fa-times mr-1\"\n                    onClick={() => {\n                      this.deleteClient(item.id, \"delete\");\n                    }}\n                  ></i>\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n\n        <Modal\n          isOpen={this.state.openEditModal}\n          toggle={this.handleEditModal}\n          className=\"create-modal\"\n        >\n          <ModalBody>\n            <div className=\"container\">\n              <div className=\"row justify-content-center\">\n                <div className=\"col-12 col-sm-10 col-md-8\">\n                  <div className=\"mb-3\">\n                    <input\n                      name=\"clientName\"\n                      type=\"text\"\n                      className=\"form-control w-100\"\n                      placeholder=\"نام\"\n                      value={this.state.clientName}\n                      onChange={this.handleInputs}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </ModalBody>\n          <ModalFooter>\n            <div>\n              <button\n                className=\"btn btn-padding-orginal btn-secondary\"\n                onClick={() => this.setState({ ...this.resetState })}\n              >\n                انصراف\n              </button>\n              <button\n                onClick={this.handleEditTaskSubmit}\n                className=\"btn btn-padding-orginal btn-primary mr-2\"\n              >\n                ثبت تغییرات\n              </button>\n            </div>\n          </ModalFooter>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Client;\n","// FIXME Search box didn't develop\nimport React, { Component } from \"react\";\nimport { Bar, Doughnut } from \"react-chartjs-2\";\nimport axios from \"axios\";\nimport moment from \"moment-jalaali\";\nimport _ from \"lodash\";\n\nclass Dashboard extends Component {\n  /* ------------------------------- properties ------------------------------- */\n  state = {\n    startSearchDate: this.getNewDate().toLocaleDateString(\"fa-IR\", {\n      month: \"2-digit\",\n      day: \"2-digit\",\n      year: \"2-digit\"\n    }),\n    endSearchDate: this.getNewDate().toLocaleDateString(\"fa-IR\", {\n      month: \"2-digit\",\n      day: \"2-digit\",\n      year: \"2-digit\"\n    }),\n    panelHeaderMode: \"daily\",\n    getPosts: [],\n    dateForPanelTimeDashboardChartForWhile: [],\n    daysInMonth: [],\n    dailyChartColor: [],\n    monthlyChartColor: [],\n    projectsTimeChartColor: [],\n    activityTimeChartColor: [],\n    totalSum: 0,\n    weeksInMonth: [],\n    dateForPanelTimeDashboardWeekChart: [],\n    monthsInYear: [],\n    dateForPanelTimeDashboardMonthChart: [],\n    titleText: \"ساعات کاری روزانه\",\n    projectsLabels: [],\n    projectsCount: [],\n    userPostsTimeSum: 0,\n    activityLabels: [],\n    activityCount: []\n  };\n\n  Unmount = false;\n\n  /* ---------------------------- lifecycle methods --------------------------- */\n\n  componentDidMount = () => {\n    this.getPosts();\n\n    this.handleDate();\n\n    this.handleWeekDate();\n\n    this.handleMonthDate();\n  };\n\n  componentWillUnmount = () => {\n    this.Unmount = true;\n  };\n\n  /* ----------------------------- handle methods ----------------------------- */\n\n  handleInputs = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handlePanelHeaderItemSelect = name => {\n    this.setState({ panelHeaderMode: name });\n  };\n\n  handleDate = () => {\n    const daysInMonth = [];\n    // NOTE set arg in the moment for search box\n    const monthDate = moment()\n      .locale(\"en\")\n      .startOf(\"jMonth\");\n\n    _.times(monthDate.daysInMonth(), () => {\n      daysInMonth.push(monthDate.format(\"jYYYY/jMM/jDD\"));\n      monthDate.add(1, \"day\");\n    });\n\n    this.setState({ daysInMonth });\n  };\n\n  handleWeekDate = () => {\n    const weeksInMonth = [];\n\n    // NOTE set arg in the moment for search box\n    let start = moment()\n      .locale(\"en\")\n      .startOf(\"jMonth\")\n      .format(\"jDD\");\n\n    let end = moment()\n      .locale(\"en\")\n      .endOf(\"jMonth\")\n      .format(\"jDD\");\n\n    let weeks = (end - start + 1) / 7;\n\n    weeks = Math.ceil(weeks);\n\n    const monthDate = moment()\n      .locale(\"en\")\n      .startOf(\"jMonth\");\n\n    _.times(weeks, () => {\n      weeksInMonth.push(monthDate.format(\"jYYYY/jMM/jDD\"));\n      monthDate.add(1, \"week\");\n    });\n\n    const weeksInMonthLentgh = weeksInMonth.length;\n\n    // FIXME trim and clean code here\n    weeksInMonth.forEach((value, index) => {\n      let startWeek = moment()\n        .locale(\"en\")\n        .startOf(\"jMonth\")\n        .format(\"jYYYY/jMM/jDD\");\n\n      let endWeek = moment()\n        .locale(\"en\")\n        .endOf(\"jMonth\")\n        .format(\"jYYYY/jMM/jDD\");\n\n      const newVal = value.split(\"/\");\n      if (newVal[2] >= start && index === 0) {\n        weeksInMonth[index] = `${startWeek}-${value}`;\n      } else {\n        const seprateArr = weeksInMonth[index - 1].split(\"-\");\n        const beforedays = seprateArr[1].split(\"/\");\n        beforedays[2] = Number(beforedays[2]) + 1;\n        if (beforedays[2] < 10) {\n          beforedays[2] = `0${beforedays[2]}`;\n        }\n        const joinTogether = beforedays.join(\"/\");\n        weeksInMonth[index] = `${joinTogether}-${value}`;\n      }\n\n      if (newVal[2] <= end && index === weeksInMonthLentgh - 1) {\n        const seprateArr = weeksInMonth[index].split(\"-\");\n        const beforedays = seprateArr[1].split(\"/\");\n        beforedays[2] = Number(beforedays[2]) + 1;\n        const joinTogether = beforedays.join(\"/\");\n        weeksInMonth[weeksInMonthLentgh] = `${joinTogether}-${endWeek}`;\n      }\n    });\n\n    this.setState({ weeksInMonth });\n  };\n\n  handleMonthDate = () => {\n    // NOTE set arg in the moment for search box\n    const monthsInYear = [];\n\n    const monthDate = moment()\n      .locale(\"en\")\n      .startOf(\"jYear\");\n\n    _.times(12, () => {\n      monthsInYear.push(monthDate.format(\"jYYYY/jMM\"));\n      monthDate.add(1, \"jMonth\");\n    });\n\n    this.setState({ monthsInYear });\n  };\n\n  handleTotalSum = () => {\n    const data = [];\n    if (this.state.panelHeaderMode === \"daily\") {\n      data.push(...this.state.dateForPanelTimeDashboardChartForWhile);\n    } else if (this.state.panelHeaderMode === \"weekly\") {\n      data.push(...this.state.dateForPanelTimeDashboardWeekChart);\n    } else {\n      data.push(...this.state.dateForPanelTimeDashboardMonthChart);\n    }\n\n    const totalSum = _.sumBy(data, \"y\");\n\n    return totalSum;\n  };\n\n  /* ------------------------------ axios methods ----------------------------- */\n\n  getPosts = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/posts\"\n    }).then(res => {\n      if (this.Unmount) return;\n      this.setState({ getPosts: res.data });\n      this.projectsFilterDateAndSum();\n      this.activityFilterDateAndSum();\n      this.filterSameDatePostsAndSum();\n      this.userPostsTimeSum();\n      this.monthlyFilterDateAndSum();\n    });\n  };\n\n  /* ------------------------------ chart options ----------------------------- */\n  mainChartOptions = () => {\n    return {\n      scales: {\n        yAxes: [\n          {\n            ticks: {\n              stepSize: 2000,\n              beginAtZero: true,\n              callback: (label, index, labels) => {\n                return this.formatTime(label);\n              }\n            }\n          }\n        ]\n      },\n      tooltips: {\n        displayColors: false,\n        callbacks: {\n          title: (tooltipItem, data) => {\n            return data[\"datasets\"][0][\"data\"][tooltipItem[0][\"index\"]][\"x\"];\n          },\n          label: (tooltipItem, data) => {\n            return this.formatTime(tooltipItem.yLabel);\n          }\n        }\n      },\n      layout: {\n        padding: {\n          left: 15,\n          right: 15,\n          bottom: 15\n        }\n      },\n      title: {\n        display: true,\n        text: this.state.titleText,\n        fontFamily: \"iranSans\",\n        fontSize: 16,\n        padding: 15\n      }\n    };\n  };\n\n  miniChartOptions = titleText => {\n    return {\n      tooltips: {\n        displayColors: false,\n        callbacks: {\n          title: (tooltipItem, data) => {\n            return data[\"labels\"][tooltipItem[0][\"index\"]];\n          },\n          label: (tooltipItem, data) => {\n            return this.formatTime(\n              data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]]\n            );\n          },\n          footer: (tooltipItem, data) => {\n            const dataset = data[\"datasets\"][0];\n\n            const total = dataset[\"data\"].reduce(\n              (previousValue, currentValue, currentIndex, array) => {\n                return previousValue + currentValue;\n              }\n            );\n\n            const currentValue = dataset[\"data\"][tooltipItem[0][\"index\"]];\n\n            const percentage = Math.floor((currentValue / total) * 100 + 0.5);\n\n            return percentage + \"%\";\n          }\n        }\n      },\n      layout: {\n        padding: {\n          left: 15,\n          right: 15,\n          bottom: 15\n        }\n      },\n      title: {\n        display: true,\n        text: titleText,\n        fontFamily: \"iranSans\",\n        fontSize: 16,\n        padding: 15\n      }\n    };\n  };\n  /* ------------------------------ other methods ----------------------------- */\n\n  getNewDate() {\n    const d = new Date();\n    return d;\n  }\n\n  filterSameDatePostsAndSum = () => {\n    const posts = [...this.state.getPosts];\n    const dateArr = [];\n    for (let i in posts) {\n      dateArr.push(posts[i].date);\n    }\n\n    const uniqueDate = new Set(dateArr);\n\n    const newDateArr = [...uniqueDate];\n\n    const dataObjectForDashboardChart = {};\n\n    for (let i in newDateArr) {\n      dataObjectForDashboardChart[newDateArr[i]] = 0;\n    }\n\n    posts.filter(item => {\n      return newDateArr.filter(value =>\n        item.date === value\n          ? (dataObjectForDashboardChart[item.date] += item.time.count)\n          : null\n      );\n    });\n\n    const dateForPanelTimeDashboardChart = [];\n    for (let i in dataObjectForDashboardChart) {\n      const trasferDataObjectToAxis = {\n        x: i,\n        y: dataObjectForDashboardChart[i]\n      };\n      dateForPanelTimeDashboardChart.push(trasferDataObjectToAxis);\n    }\n\n    const daysInMonth = [...this.state.daysInMonth];\n    const dateForPanelTimeDashboardChartForWhile = [];\n    daysInMonth.filter(item => {\n      return dateForPanelTimeDashboardChart.filter(value =>\n        item === value.x\n          ? dateForPanelTimeDashboardChartForWhile.push(value)\n          : null\n      );\n    });\n\n    this.setState({ dateForPanelTimeDashboardChartForWhile });\n\n    this.generateBgColorForChart(\"dailyChartColor\");\n  };\n\n  weeklyFilterDateAndSum = () => {\n    const posts = [...this.state.getPosts];\n    const weeksDateArr = [...this.state.weeksInMonth];\n    const dateArr = [];\n    for (let i in posts) {\n      dateArr.push(posts[i].date);\n    }\n\n    const dataObjectForDashboardChart = {};\n\n    for (let i in weeksDateArr) {\n      dataObjectForDashboardChart[weeksDateArr[i]] = 0;\n    }\n\n    weeksDateArr.filter(item => {\n      const newItem = item;\n      const itemSeprate = newItem.split(\"-\");\n      const itemStart = itemSeprate[0];\n      const itemEnd = itemSeprate[1];\n      const itemStartSeprate = itemStart.split(\"/\");\n      const itemEndSeprate = itemEnd.split(\"/\");\n\n      const itemYear = itemStartSeprate[0];\n      const itemMonth = itemStartSeprate[1];\n\n      const itemStartDay = itemStartSeprate[2];\n      const itemEndDay = itemEndSeprate[2];\n\n      return posts.filter(value => {\n        const newValue = value.date;\n\n        const valueSeprate = newValue.split(\"/\");\n\n        const valueYear = valueSeprate[0];\n        const valueMonth = valueSeprate[1];\n        const valueDay = valueSeprate[2];\n\n        if (\n          valueDay <= itemEndDay &&\n          valueDay >= itemStartDay &&\n          valueMonth === itemMonth &&\n          valueYear === itemYear\n        ) {\n          dataObjectForDashboardChart[item] += value.time.count;\n        }\n\n        return 1;\n      });\n    });\n\n    const dateForPanelTimeDashboardWeekChart = [];\n    for (let i in dataObjectForDashboardChart) {\n      const trasferDataObjectToAxis = {\n        x: i,\n        y: dataObjectForDashboardChart[i]\n      };\n      dateForPanelTimeDashboardWeekChart.push(trasferDataObjectToAxis);\n    }\n\n    this.setState({ dateForPanelTimeDashboardWeekChart });\n  };\n\n  monthlyFilterDateAndSum = () => {\n    const posts = [...this.state.getPosts];\n    const monthsDateArr = [...this.state.monthsInYear];\n    const dateArr = [];\n    for (let i in posts) {\n      dateArr.push(posts[i].date);\n    }\n\n    const dataObjectForDashboardChart = {};\n\n    for (let i in monthsDateArr) {\n      dataObjectForDashboardChart[monthsDateArr[i]] = 0;\n    }\n\n    monthsDateArr.filter(item => {\n      const newItem = item;\n      const itemSeprate = newItem.split(\"/\");\n      const itemYear = itemSeprate[0];\n      const itemMonth = itemSeprate[1];\n\n      return posts.filter(value => {\n        const newValue = value.date;\n\n        const valueSeprate = newValue.split(\"/\");\n\n        const valueYear = valueSeprate[0];\n        const valueMonth = valueSeprate[1];\n\n        if (valueMonth === itemMonth && valueYear === itemYear) {\n          dataObjectForDashboardChart[item] += value.time.count;\n        }\n\n        return 1;\n      });\n    });\n\n    const dateForPanelTimeDashboardMonthChart = [];\n    for (let i in dataObjectForDashboardChart) {\n      const trasferDataObjectToAxis = {\n        x: i,\n        y: dataObjectForDashboardChart[i]\n      };\n      dateForPanelTimeDashboardMonthChart.push(trasferDataObjectToAxis);\n    }\n\n    this.setState({ dateForPanelTimeDashboardMonthChart });\n\n    this.generateBgColorForChart(\"monthlyChartColor\");\n  };\n\n  projectsFilterDateAndSum = () => {\n    const posts = [...this.state.getPosts];\n    const projectsArr = [];\n    for (let i in posts) {\n      projectsArr.push(posts[i].projectName);\n    }\n\n    const uniqueDate = new Set(projectsArr);\n\n    const newProjectsArr = [...uniqueDate];\n\n    const dataObjectForDashboardChart = {};\n\n    for (let i in newProjectsArr) {\n      dataObjectForDashboardChart[newProjectsArr[i]] = 0;\n    }\n\n    posts.filter(item => {\n      return newProjectsArr.filter(value =>\n        item.projectName === value\n          ? (dataObjectForDashboardChart[item.projectName] += item.time.count)\n          : null\n      );\n    });\n\n    const projectsLabels = [];\n    const projectsCount = [];\n    for (let i in dataObjectForDashboardChart) {\n      projectsLabels.push(i);\n      projectsCount.push(dataObjectForDashboardChart[i]);\n    }\n\n    this.setState({ projectsLabels, projectsCount });\n\n    this.generateBgColorForChart(\"projectsTimeChartColor\");\n  };\n\n  activityFilterDateAndSum = () => {\n    const posts = [...this.state.getPosts];\n    const activityArr = [];\n    for (let i in posts) {\n      activityArr.push(posts[i].activityName);\n    }\n\n    const uniqueDate = new Set(activityArr);\n\n    const newActivityArr = [...uniqueDate];\n\n    const dataObjectForDashboardChart = {};\n\n    for (let i in newActivityArr) {\n      if (newActivityArr[i] === \"\") {\n        dataObjectForDashboardChart[\"بدون نوع فعالیت\"] = 0;\n      } else {\n        dataObjectForDashboardChart[newActivityArr[i]] = 0;\n      }\n    }\n\n    posts.filter(item => {\n      return newActivityArr.filter(value =>\n        item.activityName === value\n          ? item.activityName === \"\"\n            ? (dataObjectForDashboardChart[\"بدون نوع فعالیت\"] +=\n                item.time.count)\n            : (dataObjectForDashboardChart[item.activityName] +=\n                item.time.count)\n          : null\n      );\n    });\n\n    const activityLabels = [];\n    const activityCount = [];\n    for (let i in dataObjectForDashboardChart) {\n      activityLabels.push(i);\n      activityCount.push(dataObjectForDashboardChart[i]);\n    }\n\n    this.setState({ activityLabels, activityCount });\n\n    this.generateBgColorForChart(\"activityTimeChartColor\");\n  };\n\n  userPostsTimeSum = () => {\n    const posts = [...this.state.getPosts];\n\n    const userPostsTimeSum = _.sumBy(posts, item => item.time.count);\n\n    this.setState({ userPostsTimeSum });\n  };\n\n  formatTime = secs => {\n    var hours = Math.floor(secs / 3600);\n    var divisor_for_minutes = secs % 3600;\n    var minutes = Math.floor(divisor_for_minutes / 60);\n    var seconds = divisor_for_minutes % 60;\n\n    return `${hours < 10 ? \"0\" + hours : hours}:${\n      minutes < 10 ? \"0\" + minutes : minutes\n    }:${seconds < 10 ? \"0\" + seconds : seconds}`;\n  };\n\n  randomColor = () => {\n    const r = Math.floor(Math.random() * 255);\n    const g = Math.floor(Math.random() * 255);\n    const b = Math.floor(Math.random() * 255);\n    return `rgb(${r},${g},${b})`;\n  };\n\n  generateBgColorForChart = name => {\n    const chartName = name;\n    const data = [];\n    if (name === \"dailyChartColor\") {\n      data.push(...this.state.dateForPanelTimeDashboardChartForWhile);\n    } else if (name === \"monthlyChartColor\") {\n      data.push(...this.state.dateForPanelTimeDashboardMonthChart);\n    } else if (name === \"projectsTimeChartColor\") {\n      data.push(...this.state.projectsLabels);\n    } else if (name === \"activityTimeChartColor\") {\n      data.push(...this.state.activityLabels);\n    }\n\n    const randomColor = [];\n    for (let i = 0; i < data.length; i++) {\n      const color = this.randomColor();\n\n      randomColor.push(color);\n    }\n\n    while (name === \"monthly\" && randomColor.length < 12) {\n      const color = this.randomColor();\n\n      randomColor.push(color);\n    }\n\n    this.setState({ [chartName]: randomColor });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"dashboard-parent h-100 px-3\">\n          <div className=\"dashboard-header\">داشبورد</div>\n\n          <div className=\"dashboard-search bg-white mb-3 p-3 d-flex flex-column flex-md-row justify-content-md-between align-items-center\">\n            <div className=\"d-flex flex-column flex-sm-row justify-content-start align-items-center flex-wrap flex-md-nowrap\">\n              <div className=\"d-flex justify-content-start align-items-center px-3 dashboard-search-items\">\n                <span className=\"ml-1 fs-13\">از</span>\n                <input\n                  type=\"text\"\n                  name=\"startSearchDate\"\n                  value={this.state.startSearchDate}\n                  onChange={this.handleInputs}\n                  className=\"form-control iranSansNum dashboard-date-input\"\n                />\n                <span className=\"mx-1 fs-13\">تا</span>\n                <input\n                  type=\"text\"\n                  name=\"endSearchDate\"\n                  value={this.state.endSearchDate}\n                  onChange={this.handleInputs}\n                  className=\"form-control iranSansNum dashboard-date-input\"\n                />\n              </div>\n\n              <div className=\"d-flex justify-content-start align-items-center px-3 dashboard-search-items\">\n                <div className=\"pointer\">\n                  <span className=\"fs-13 ml-2\">همه پروژه ها</span>\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\n                </div>\n              </div>\n\n              <div className=\"d-flex justify-content-start align-items-center px-3 dashboard-search-items\">\n                <div className=\"pointer\">\n                  <span className=\"fs-13 ml-2\">همه فعالیت ها</span>\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\n                </div>\n              </div>\n\n              <div className=\"d-flex justify-content-start align-items-center px-3 dashboard-search-items\">\n                <div className=\"pointer\">\n                  <span className=\"fs-13 ml-2\">همه کاربر ها</span>\n                  <i className=\"fs-13 fas fa-sort-down\"></i>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mt-3 mt-md-0\">\n              <button className=\"btn btn-secondary\">\n                <i className=\"fas fa-search\"></i>\n              </button>\n              <button className=\"btn btn-secondary mr-2\">\n                <i className=\"fas fa-times\"></i>\n              </button>\n            </div>\n          </div>\n\n          <div className=\"pb-3 pt-4 d-flex align-items-center container\">\n            <div className=\"row w-100\">\n              <div className=\"col-12 col-sm-6 col-md-3 d-flex justify-content-center align-items-center\">\n                <span className=\"label-sum\">مجموع</span>\n                <span className=\"total-sum iranSansNum\">\n                  {this.formatTime(this.handleTotalSum())}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"panel bg-white mb-5 mt-4 mx-auto\">\n            <div className=\"d-flex justify-content-start align-items-center\">\n              <span\n                className={\n                  this.state.panelHeaderMode === \"daily\"\n                    ? \"panel-header-item panel-header-item-select\"\n                    : \"panel-header-item\"\n                }\n                onClick={() => {\n                  this.handlePanelHeaderItemSelect(\"daily\");\n                  this.setState({ titleText: \"ساعات کاری روزانه\" });\n                }}\n              >\n                روزانه\n              </span>\n              <span\n                className={\n                  this.state.panelHeaderMode === \"weekly\"\n                    ? \"panel-header-item panel-header-item-select\"\n                    : \"panel-header-item\"\n                }\n                onClick={() => {\n                  this.handlePanelHeaderItemSelect(\"weekly\");\n                  this.setState({ titleText: \"ساعات کاری هفتگی\" });\n                  this.weeklyFilterDateAndSum();\n                }}\n              >\n                هفتگی\n              </span>\n              <span\n                className={\n                  this.state.panelHeaderMode === \"monthly\"\n                    ? \"panel-header-item panel-header-item-select\"\n                    : \"panel-header-item\"\n                }\n                onClick={() => {\n                  this.handlePanelHeaderItemSelect(\"monthly\");\n                  this.setState({ titleText: \"ساعات کاری ماهانه\" });\n                  this.monthlyFilterDateAndSum();\n                }}\n              >\n                ماهانه\n              </span>\n            </div>\n            <div>\n              {this.state.panelHeaderMode === \"daily\" &&\n                (this.state.dateForPanelTimeDashboardChartForWhile.length >\n                0 ? (\n                  <Bar\n                    height={\n                      window.outerWidth < 576\n                        ? Math.floor(window.outerHeight * 0.575)\n                        : null\n                    }\n                    data={{\n                      labels: [...this.state.daysInMonth],\n                      datasets: [\n                        {\n                          data: [\n                            ...this.state.dateForPanelTimeDashboardChartForWhile\n                          ],\n                          backgroundColor: [...this.state.dailyChartColor],\n                          borderColor: \"#fff\",\n                          borderWidth: 2\n                        }\n                      ]\n                    }}\n                    options={this.mainChartOptions()}\n                    legend={{\n                      display: false\n                    }}\n                  />\n                ) : (\n                  <div className=\"notFoundDataForChart\">\n                    داده‌ای برای نمایش وجود ندارد\n                  </div>\n                ))}\n\n              {this.state.panelHeaderMode === \"weekly\" &&\n                (this.state.dateForPanelTimeDashboardWeekChart.length > 0 ? (\n                  <Bar\n                    height={\n                      window.outerWidth < 576\n                        ? Math.floor(window.outerHeight * 0.575)\n                        : null\n                    }\n                    data={{\n                      labels: [...this.state.weeksInMonth],\n                      datasets: [\n                        {\n                          data: [\n                            ...this.state.dateForPanelTimeDashboardWeekChart\n                          ],\n                          backgroundColor: [\n                            \"#D32F2F\",\n                            \"#F57C00\",\n                            \"#FFA000\",\n                            \"#00796B\",\n                            \"#1976D2\",\n                            \"#21335E\"\n                          ],\n                          borderColor: \"#fff\",\n                          borderWidth: 2\n                        }\n                      ]\n                    }}\n                    options={this.mainChartOptions()}\n                    legend={{\n                      display: false\n                    }}\n                  />\n                ) : (\n                  <div className=\"notFoundDataForChart\">\n                    داده‌ای برای نمایش وجود ندارد\n                  </div>\n                ))}\n\n              {this.state.panelHeaderMode === \"monthly\" &&\n                (this.state.dateForPanelTimeDashboardMonthChart.length > 0 ? (\n                  <Bar\n                    height={\n                      window.outerWidth < 576\n                        ? Math.floor(window.outerHeight * 0.575)\n                        : null\n                    }\n                    data={{\n                      labels: [...this.state.monthsInYear],\n                      datasets: [\n                        {\n                          data: [\n                            ...this.state.dateForPanelTimeDashboardMonthChart\n                          ],\n                          backgroundColor: [...this.state.monthlyChartColor],\n                          borderColor: \"#fff\",\n                          borderWidth: 2\n                        }\n                      ]\n                    }}\n                    options={this.mainChartOptions()}\n                    legend={{\n                      display: false\n                    }}\n                  />\n                ) : (\n                  <div className=\"notFoundDataForChart\">\n                    داده‌ای برای نمایش وجود ندارد\n                  </div>\n                ))}\n            </div>\n          </div>\n\n          <div className=\"d-flex flex-column justify-content-stretch align-items-stretch miniPanel-Body mx-auto mb-5\">\n            <div className=\"d-flex flex-column justify-content-stretch align-items-stretch flex-md-row justify-content-between w-100 mb-3\">\n              <div className=\"miniPanel mb-3 bg-white w-md-45-i\">\n                {this.state.getPosts.length > 0 ? (\n                  <Doughnut\n                    data={{\n                      labels: [...this.state.projectsLabels],\n                      datasets: [\n                        {\n                          data: [...this.state.projectsCount],\n                          backgroundColor: [\n                            ...this.state.projectsTimeChartColor\n                          ],\n                          borderColor: \"#fff\",\n                          borderWidth: 2\n                        }\n                      ]\n                    }}\n                    options={this.miniChartOptions(\"ساعات کاری هر پروژه\")}\n                    legend={{\n                      display: true,\n                      position: \"right\",\n                      align: \"start\",\n\n                      labels: {\n                        fontFamily: \"iranSans\"\n                      }\n                    }}\n                  />\n                ) : (\n                  <div className=\"miniNotFoundDataForChart px-4\">\n                    داده‌ای برای نمایش وجود ندارد\n                  </div>\n                )}\n              </div>\n              <div className=\"miniPanel mb-3 bg-white w-md-45-i\">\n                {this.state.getPosts.length > 0 ? (\n                  <Doughnut\n                    data={{\n                      labels: [...this.state.activityLabels],\n                      datasets: [\n                        {\n                          data: [...this.state.activityCount],\n                          backgroundColor: [\n                            ...this.state.activityTimeChartColor\n                          ],\n                          borderColor: \"#fff\",\n                          borderWidth: 2\n                        }\n                      ]\n                    }}\n                    options={this.miniChartOptions(\"ساعات کاری هر فعالیت\")}\n                    legend={{\n                      display: true,\n                      position: \"right\",\n                      align: \"start\",\n\n                      labels: {\n                        fontFamily: \"iranSans\"\n                      }\n                    }}\n                  />\n                ) : (\n                  <div className=\"miniNotFoundDataForChart px-4\">\n                    داده‌ای برای نمایش وجود ندارد\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"d-flex flex-column justify-content-stretch align-items-stretch flex-md-row justify-content-between w-100\">\n              <div className=\"miniPanel mb-3 bg-white w-md-45-i\">\n                {this.state.getPosts.length > 0 ? (\n                  <Doughnut\n                    data={{\n                      labels: [\"کاربر\"],\n                      datasets: [\n                        {\n                          data: [this.state.userPostsTimeSum],\n                          backgroundColor: [\"#21335E\"],\n                          borderColor: \"#fff\",\n                          borderWidth: 2\n                        }\n                      ]\n                    }}\n                    options={this.miniChartOptions(\"ساعات کاری هر کاربر\")}\n                    legend={{\n                      display: true,\n                      position: \"right\",\n                      align: \"start\",\n\n                      labels: {\n                        fontFamily: \"iranSans\"\n                      }\n                    }}\n                  />\n                ) : (\n                  <div className=\"miniNotFoundDataForChart px-4\">\n                    داده‌ای برای نمایش وجود ندارد\n                  </div>\n                )}\n              </div>\n              <div className=\"miniPanel mb-3 bg-white w-md-45-i\">\n                {/* FIXME because i didnt develope Team component, i havn't got any data to show */}\n                <div className=\"miniNotFoundDataForChart px-4\">\n                  داده‌ای برای نمایش وجود ندارد\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Dashboard;\n","// FIXME Search box didn't develop\n// FIXME group panel didn't develop\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nclass ReportSummary extends Component {\n  /* ------------------------------- Properties ------------------------------- */\n\n  state = {\n    startSearchDate: this.getNewDate().toLocaleDateString(\"fa-IR\", {\n      month: \"2-digit\",\n      day: \"2-digit\",\n      year: \"2-digit\",\n    }),\n    endSearchDate: this.getNewDate().toLocaleDateString(\"fa-IR\", {\n      month: \"2-digit\",\n      day: \"2-digit\",\n      year: \"2-digit\",\n    }),\n    getPosts: [],\n    userPostsTimeSum: 0,\n    extendUserName: false,\n    dateForPanelTimeDashboardChart: [],\n  };\n\n  /* ---------------------------- lifecycle methods --------------------------- */\n\n  componentDidMount = () => {\n    this.getPosts();\n  };\n\n  componentWillUnmount = () => {\n    this.Unmount = true;\n  };\n\n  /* ----------------------------- handle Methods ----------------------------- */\n\n  handleInputs = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  handleExtendUserName = () => {\n    const extendUserName = !this.state.extendUserName;\n\n    this.setState({ extendUserName });\n  };\n\n  /* ------------------------------ chart option ------------------------------ */\n  miniChartOptions = () => {\n    return {\n      tooltips: {\n        displayColors: false,\n        callbacks: {\n          title: (tooltipItem, data) => {\n            return data[\"labels\"][tooltipItem[0][\"index\"]];\n          },\n          label: (tooltipItem, data) => {\n            return this.formatTime(\n              data[\"datasets\"][0][\"data\"][tooltipItem[\"index\"]]\n            );\n          },\n          footer: (tooltipItem, data) => {\n            const dataset = data[\"datasets\"][0];\n\n            const total = dataset[\"data\"].reduce(\n              (previousValue, currentValue, currentIndex, array) => {\n                return previousValue + currentValue;\n              }\n            );\n\n            const currentValue = dataset[\"data\"][tooltipItem[0][\"index\"]];\n\n            const percentage = Math.floor((currentValue / total) * 100 + 0.5);\n\n            return percentage + \"%\";\n          },\n        },\n      },\n      layout: {\n        padding: {\n          left: 15,\n          right: 15,\n          bottom: 15,\n        },\n      },\n      title: {\n        display: false,\n      },\n    };\n  };\n\n  /* ------------------------------ axios methods ----------------------------- */\n\n  getPosts = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/posts\",\n    }).then((res) => {\n      if (this.Unmount) return;\n      this.setState({ getPosts: res.data });\n      this.userPostsTimeSum();\n      this.filterSameDatePostsAndSum();\n    });\n  };\n\n  /* ------------------------------ Other Methods ----------------------------- */\n\n  getNewDate() {\n    const d = new Date();\n    return d;\n  }\n\n  filterSameDatePostsAndSum = () => {\n    const posts = [...this.state.getPosts];\n    const dateArr = [];\n    for (let i in posts) {\n      dateArr.push(posts[i].projectName);\n    }\n\n    const uniqueDate = new Set(dateArr);\n\n    const newDateArr = [...uniqueDate];\n\n    const dataObjectForDashboardChart = {};\n\n    for (let i in newDateArr) {\n      dataObjectForDashboardChart[newDateArr[i]] = 0;\n    }\n\n    posts.filter((item) => {\n      return newDateArr.filter((value) =>\n        item.projectName === value\n          ? (dataObjectForDashboardChart[item.projectName] += item.time.count)\n          : null\n      );\n    });\n\n    const dateForPanelTimeDashboardChart = [];\n    for (let i in dataObjectForDashboardChart) {\n      const trasferDataObjectToAxis = {\n        projectName: i,\n        count: dataObjectForDashboardChart[i],\n      };\n      dateForPanelTimeDashboardChart.push(trasferDataObjectToAxis);\n    }\n\n    this.setState({ dateForPanelTimeDashboardChart });\n  };\n\n  formatTime = (secs) => {\n    var hours = Math.floor(secs / 3600);\n    var divisor_for_minutes = secs % 3600;\n    var minutes = Math.floor(divisor_for_minutes / 60);\n    var seconds = divisor_for_minutes % 60;\n\n    return `${hours < 10 ? \"0\" + hours : hours}:${\n      minutes < 10 ? \"0\" + minutes : minutes\n    }:${seconds < 10 ? \"0\" + seconds : seconds}`;\n  };\n\n  userPostsTimeSum = () => {\n    const posts = [...this.state.getPosts];\n\n    const userPostsTimeSum = _.sumBy(posts, (item) => item.time.count);\n\n    this.setState({ userPostsTimeSum });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"report-parent h-100 px-3\">\n          <div className=\"report-header\">گزارش خلاصه</div>\n\n          <div className=\"pb-3 pt-4 d-flex align-items-center container\">\n            <div className=\"row w-100\">\n              <div className=\"col-12 col-sm-6 col-md-3 d-flex justify-content-center align-items-center\">\n                <span className=\"label-sum\">مجموع</span>\n                <span className=\"total-sum iranSansNum\">\n                  {this.formatTime(this.state.userPostsTimeSum)}\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-12 mb-5 mb-md-0 col-md-8\">\n                <div className=\"reportSummary-panel bg-white\">\n                  <div className=\"reportSummary-panel-body\">\n                    <div className=\"reportSummary-panel-groups py-2 mb-3 d-flex align-items-center\">\n                      <span onClick={() => this.handleExtendUserName()}>\n                        {this.state.extendUserName ? (\n                          <i className=\"far fa-minus-square\"></i>\n                        ) : (\n                          <i className=\"far fa-plus-square\"></i>\n                        )}\n                      </span>\n                      <button className=\"btn btn-secondary mr-2\">\n                        گروه‌بندی کاربر / پروژه\n                        <i className=\"fas fa-sort-down mr-2\"></i>\n                      </button>\n                    </div>\n\n                    <div className=\"reportSummary-panel-body-tabel py-4\">\n                      <div className=\"mx-2 mx-sm-4\">\n                        <div className=\"d-flex justify-content-between align-items-center\">\n                          <div>\n                            <span onClick={() => this.handleExtendUserName()}>\n                              {this.state.extendUserName ? (\n                                <i className=\"far fa-minus-square\"></i>\n                              ) : (\n                                <i className=\"far fa-plus-square\"></i>\n                              )}\n                            </span>\n                            <span className=\"font-weight-bold mr-2\">کاربر</span>\n                          </div>\n\n                          <div>\n                            <span className=\"font-weight-bold iranSansNum\">\n                              {this.formatTime(this.state.userPostsTimeSum)}\n                            </span>\n                          </div>\n                        </div>\n\n                        {this.state.extendUserName &&\n                          this.state.dateForPanelTimeDashboardChart.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className=\"d-flex justify-content-between align-items-center my-2\"\n                              >\n                                <div>{item.projectName}</div>\n\n                                <div className=\"iranSansNum\">\n                                  {this.formatTime(item.count)}\n                                </div>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"col-12 col-md-4\">\n                {this.state.getPosts.length > 0 ? (\n                  <Doughnut\n                    data={{\n                      labels: [\"کاربر\"],\n                      datasets: [\n                        {\n                          data: [this.state.userPostsTimeSum],\n                          backgroundColor: [\"#21335E\"],\n                          borderColor: \"#fff\",\n                          borderWidth: 2,\n                        },\n                      ],\n                    }}\n                    options={this.miniChartOptions()}\n                    legend={{\n                      display: false,\n                    }}\n                  />\n                ) : (\n                  <div className=\"miniNotFoundDataForChart px-4\">\n                    داده‌ای برای نمایش وجود ندارد\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ReportSummary;\n","// FIXME Search box didn't develop\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\n\nclass ReportDetail extends Component {\n  /* ------------------------------- Properties ------------------------------- */\n\n  state = {\n    getPosts: [],\n    userPostsTimeSum: 0,\n    extendUserName: false,\n    dateForPanelTimeDashboardChart: [],\n  };\n\n  /* ---------------------------- lifecycle methods --------------------------- */\n\n  componentDidMount = () => {\n    this.getPosts();\n  };\n\n  componentWillUnmount = () => {\n    this.Unmount = true;\n  };\n\n  /* ----------------------------- handle Methods ----------------------------- */\n\n  handleInputs = (e) => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  /* ---------------------------------- axios --------------------------------- */\n\n  getPosts = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/posts\",\n    }).then((res) => {\n      if (this.Unmount) return;\n      this.setState({ getPosts: res.data });\n      this.userPostsTimeSum();\n      this.sortPosts();\n    });\n  };\n\n  /* ------------------------------ other methods ----------------------------- */\n  sortPosts = () => {\n    const posts = [...this.state.getPosts];\n    const sortPosts = _.orderBy(\n      posts,\n      [\"date\", \"time.startTime\", \"time.endTime\"],\n      [\"desc\", \"desc\", \"desc\"]\n    );\n    this.setState({ getPosts: sortPosts });\n  };\n\n  formatTime = (secs) => {\n    var hours = Math.floor(secs / 3600);\n    var divisor_for_minutes = secs % 3600;\n    var minutes = Math.floor(divisor_for_minutes / 60);\n    var seconds = divisor_for_minutes % 60;\n\n    return `${hours < 10 ? \"0\" + hours : hours}:${\n      minutes < 10 ? \"0\" + minutes : minutes\n    }:${seconds < 10 ? \"0\" + seconds : seconds}`;\n  };\n\n  userPostsTimeSum = () => {\n    const posts = [...this.state.getPosts];\n\n    const userPostsTimeSum = _.sumBy(posts, (item) => item.time.count);\n\n    this.setState({ userPostsTimeSum });\n  };\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"report-parent h-100 px-3\">\n          <div className=\"report-header\">گزارش جزئی</div>\n\n          <div className=\"pb-3 pt-4 d-flex align-items-center container\">\n            <div className=\"row w-100\">\n              <div className=\"col-12 col-sm-6 col-md-3 d-flex justify-content-center align-items-center\">\n                <span className=\"label-sum\">مجموع</span>\n                <span className=\"total-sum iranSansNum\">\n                  {this.formatTime(this.state.userPostsTimeSum)}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"table-responsive px-4\">\n            <table className=\"table showReportTable\">\n              <thead>\n                <tr>\n                  <td>کاربر</td>\n                  <td>توضیحات</td>\n                  <td>پروژه</td>\n                  <td>نوع فعالیت</td>\n                  <td>روز</td>\n                  <td>مدت زمان</td>\n                  <td></td>\n                  <td>\n                    <i className=\"pointer fas fa-sync-alt\"></i>\n                  </td>\n                </tr>\n              </thead>\n\n              <tbody>\n                {this.state.getPosts.map((item, index) => {\n                  return (\n                    <tr key={index}>\n                      <td>کاربر</td>\n                      <td className=\"pointer\">{item.description}</td>\n                      <td className=\"pointer\" style={{ color: item.color }}>\n                        {item.projectName}\n                      </td>\n                      <td className=\"pointer\">{item.activityName}</td>\n                      <td className=\"pointer iranSansNum\">{item.date}</td>\n                      <td className=\"pointer iranSansNum\">\n                        {this.formatTime(item.time.count)}\n                      </td>\n                      <td className=\"pointer iranSansNum\">\n                        {item.time.startTime}-{item.time.endTime}\n                      </td>\n                      <td></td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ReportDetail;\n","// FIXME Search box didn't develop\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass ReportProject extends Component {\n  /* ------------------------------- Properties ------------------------------- */\n\n  state = {\n    getPosts: [],\n    getProjects: [],\n  };\n\n  /* ---------------------------- lifecycle methods --------------------------- */\n\n  componentDidMount = () => {\n    this.getProjects();\n    this.getPosts();\n  };\n\n  componentWillUnmount = () => {\n    this.Unmount = true;\n  };\n\n  /* ---------------------------------- axios --------------------------------- */\n\n  getPosts = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/posts\",\n    }).then((res) => {\n      if (this.Unmount) return;\n      this.setState({ getPosts: res.data });\n      this.sortProjects();\n    });\n  };\n\n  getProjects = () => {\n    axios({\n      url: \"https://minit-server-app.herokuapp.com/projects\",\n    }).then((res) => {\n      if (this.Unmount) return;\n      this.setState({ getProjects: res.data });\n    });\n  };\n\n  /* ------------------------------ other methods ----------------------------- */\n  sortProjects = () => {\n    const posts = [...this.state.getPosts];\n    const projects = [...this.state.getProjects];\n    const projectsArr = [];\n    for (let i in posts) {\n      projectsArr.push([posts[i].projectName, posts[i].projectId]);\n    }\n\n    const uniqueDate = new Set(projectsArr);\n\n    const newProjectsArr = [...uniqueDate];\n\n    const dataObjectForDashboardChart = {};\n\n    for (let i in newProjectsArr) {\n      dataObjectForDashboardChart[newProjectsArr[i][0]] = {\n        id: newProjectsArr[i][1],\n        count: 0,\n      };\n    }\n\n    posts.filter((item) => {\n      return newProjectsArr.some((value) =>\n        item.projectName === value[0] && item.projectId === value[1]\n          ? (dataObjectForDashboardChart[item.projectName][\"count\"] +=\n              item.time.count)\n          : null\n      );\n    });\n\n    const newProjects = [];\n\n    for (let i in dataObjectForDashboardChart) {\n      newProjects.push({\n        projectName: i,\n        projectId: dataObjectForDashboardChart[i][\"id\"],\n        count: dataObjectForDashboardChart[i][\"count\"],\n      });\n    }\n\n    projects.filter((item) =>\n      newProjects.filter((value) => {\n        if (item.id === value.projectId) {\n          value[\"clientName\"] = item.clientName;\n          value[\"budget\"] = item.budget;\n          value[\"color\"] = item.color;\n        }\n\n        return 1;\n      })\n    );\n\n    this.setState({ getProjects: newProjects });\n  };\n\n  formatTime = (secs) => {\n    var hours = Math.floor(secs / 3600);\n    var divisor_for_minutes = secs % 3600;\n    var minutes = Math.floor(divisor_for_minutes / 60);\n    var seconds = divisor_for_minutes % 60;\n\n    return `${hours < 10 ? \"0\" + hours : hours}:${\n      minutes < 10 ? \"0\" + minutes : minutes\n    }:${seconds < 10 ? \"0\" + seconds : seconds}`;\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"report-parent h-100 px-3\">\n          <div className=\"report-header\">گزارش پروژه</div>\n\n          <div className=\"table-responsive px-4 reportProjectTabelBox bg-white\">\n            <table className=\"table showReportTable reportProjectTabel bg-white\">\n              <thead>\n                <tr>\n                  <td>پروژه</td>\n                  <td>مشتری</td>\n                  <td>بودجه زمانی</td>\n                  <td>زمان مصرف شده</td>\n                </tr>\n              </thead>\n\n              <tbody>\n                {this.state.getProjects.map((item, index) => {\n                  return (\n                    <tr key={index}>\n                      <td className=\"pointer\" style={{ color: item.color }}>\n                        {item.projectName}\n                      </td>\n                      <td className=\"pointer\">{item.clientName}</td>\n                      <td className=\"pointer iranSansNum\">{item.budget}</td>\n\n                      <td className=\"pointer iranSansNum\">\n                        {this.formatTime(item.count)}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ReportProject;\n","import React from \"react\";\nconst NotFound = () => {\n  return (\n    <React.Fragment>\n      <div className=\"notFound-parent h-100 px-3 d-flex flex-column align-items-center justify-content-center\">\n        <h1>404</h1>\n        <p className=\"text-center\">صفحه مورد نظر یافت نشد.</p>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Menu from \"./components/Menu\";\nimport PanelTime from \"./components/PanelTime\";\nimport Projects from \"./components/Projects\";\nimport TaskType from \"./components/Tasktype\";\nimport Client from \"./components/Client\";\nimport Dashboard from \"./components/Dashboard\";\nimport ReportSummary from \"./components/ReportSummary\";\nimport ReportDetail from \"./components/ReportDetail\";\nimport ReportProject from \"./components/ReportProject\";\nimport NotFound from \"./components/NotFound\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"d-flex h-100\">\n        <Menu />\n        <div className=\"container-fluid px-0\">\n          <Switch>\n            <Route path=\"/\" component={PanelTime} exact />\n            <Route path=\"/projects\" component={Projects} exact />\n            <Route path=\"/tasktype\" component={TaskType} exact />\n            <Route path=\"/client\" component={Client} exact />\n            <Route path=\"/dashboard\" component={Dashboard} exact />\n            <Route path=\"/report/summary\" component={ReportSummary} exact />\n            <Route path=\"/report/detail\" component={ReportDetail} exact />\n            <Route path=\"/report/project\" component={ReportProject} exact />\n            <Route component={NotFound} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* -------------------------- Essential & Basics -------------------------- */\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n/* ----------------------------------- CSS ---------------------------------- */\nimport \"./fonts/iransans/iransans.css\";\nimport \"./fonts/iransansNum/css/iransansNum.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/basic.css\";\nimport \"./css/menu.css\";\nimport \"./css/createOrder.css\";\nimport \"./css/showOrder.css\";\nimport \"./css/emptyPost.css\";\nimport \"./css/projects.css\";\nimport \"./css/tasktypeAndClient.css\";\nimport \"./css/dashboardAndReport.css\";\nimport \"./css/notFound.css\";\n\n/* ------------------------------- Components ------------------------------- */\nimport App from \"./App.jsx\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}